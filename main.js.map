{"version":3,"sources":["webpack:///./dist/ngx-formly-designer/fesm5/ngx-formly-designer.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/expander.component.ts","webpack:///./src/app/config.ts","webpack:///./src/app/designer-config.ts","webpack:///./src/app/types/custom-input.ts","webpack:///./src/app/types/repeat-section.ts","webpack:///./src/app/wrappers/expander.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACX;AACG;AACyC;AACd;AACd;AACqF;AAC2G;AAC5O;;AAEhB;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,0BAA0B,OAAO,uDAAS,4BAA4B,OAAO,8DAAgB,EAAE,IAAI;AACnG;AACA;AACA,CAAC,CAAC,6DAAY;;AAEd;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb,uCAAuC,4DAAc;AACrD;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,2BAA2B,gCAAgC,EAAE;AAC7D;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uDAAuD,EAAE,OAAO;AAChE;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,0DAA0D,EAAE,OAAO;AACnE;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,uDAAuD;AACvD,SAAS,4BAA4B,OAAO,oDAAM,yCAAyC,GAAG;AAC9F,SAAS,OAAO,6DAAY;AAC5B,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,sBAAsB,EAAE,iDAAiD,EAAE;AAC3E,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,0CAA0C,sDAAQ,yDAAyD,wBAAwB;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA,2BAA2B,oBAAoB;AAC/C,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,4BAA4B,sDAAQ,uCAAuC,kBAAkB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ,gBAAgB;AAC3C;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA,yCAAyC;AACzC,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mCAAmC;AACnD;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,gBAAgB,kCAAkC,EAAE;AACpD,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,gBAAgB,+CAA+C,EAAE;AACjE,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,gBAAgB,yDAAyD,EAAE;;AAE3E;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,sDAAsD;AACtD,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,iDAAiD,EAAE;AAC7E;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yCAAyC,EAAE,sDAAsD,KAAK;AACtG,mBAAmB,EAAE;AACrB,qBAAqB,2DAAS;AAC9B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,gDAAgD;AAChD,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAe;AAC5C,2BAA2B,oDAAe;AAC1C,0BAA0B,oDAAe,GAAG;AAC5C;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,+CAA+C;AAC/C,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB,2DAAS;AAC9B;AACA;AACA,qBAAqB,2DAAS;AAC9B;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2DAAS;AAC/B,qBAAqB,2DAAS;AAC9B;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,2DAAS;AACnC,yBAAyB,2DAAS;AAClC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,0BAA0B,2DAAS;AACnC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,oEAAoE,EAAE;AAChG;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,uBAAuB,EAAE;AAC/C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,uBAAuB,EAAE;AAC/C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,UAAU,EAAE;AAClC;AACA;AACA,6CAA6C,QAAQ;AACrD,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,qDAAG;AACtB,mBAAmB,EAAE;AACrB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,IAAI;AAChD;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,gCAAgC,+CAA+C,EAAE;AACjF;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,uCAAuC,yDAAyD,EAAE;AAClG;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0CAA0C,wCAAwC,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B,qDAAG;AAC/B;AACA,oBAAoB,qDAAG;AACvB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B,OAAO;AAClC,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,qCAAqC,oBAAoB;AACzD,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,8CAA8C,EAAE,OAAO;AACvD;AACA,qEAAqE,EAAE,OAAO,WAAW,YAAY;AACrG,oCAAoC,wDAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,wDAAS;AAClD,+BAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,8BAA8B,4BAA4B,EAAE;AAC5D;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,gBAAgB,uDAAK;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,8BAA8B,wDAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wDAAS;AAC5C,2BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,wDAAwD;AACxD,SAAS,6BAA6B;AACtC,SAAS,sBAAsB;AAC/B,SAAS,OAAO,6DAAY;AAC5B,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAW,GAAG;AAC5C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB;AACrB,oBAAoB;AACpB;AACA,qBAAqB,8BAA8B,EAAE,GAAG,EAAE;AAC1D;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB;AACrB,oBAAoB;AACpB;AACA,qBAAqB,8BAA8B,EAAE,GAAG,EAAE;AAC1D;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB,2DAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB,2DAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,iEAAiE,2DAAS;AAC1E;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAK;AACb,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kCAAkC,EAAE;AACpC;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iJAAiJ,QAAQ,wmBAAwmB,WAAW,iWAAiW,4EAA4E,WAAW,MAAM,MAAM;AAChtC,+CAA+C,4BAA4B,iCAAiC,0CAA0C,wCAAwC,sCAAsC,4BAA4B,WAAW,+BAA+B,2BAA2B,WAAW,8DAA8D,8BAA8B,WAAW,0BAA0B,8BAA8B,iCAAiC,kCAAkC,uCAAuC,uBAAuB,qBAAqB,WAAW,8BAA8B,kCAAkC,WAAW,+BAA+B,+BAA+B,sCAAsC,kCAAkC,0BAA0B,WAAW,oBAAoB,sCAAsC,iCAAiC,8BAA8B,uCAAuC,0BAA0B,WAAW,gCAAgC,6BAA6B,WAAW,mBAAmB,4BAA4B,WAAW,mBAAmB,4BAA4B,wCAAwC,WAAW;AAC/yC,iBAAiB;AACjB;AACA;AACA,sEAAsE;AACtE,SAAS,OAAO,+DAAiB,EAAE;AACnC,SAAS,6BAA6B;AACtC,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,sBAAsB;AAC/B,SAAS,8BAA8B;AACvC,SAAS,OAAO,oDAAM;AACtB,MAAM;AACN;AACA,0BAA0B,OAAO,uDAAS,4BAA4B,OAAO,8DAAgB,EAAE,IAAI;AACnG;AACA;AACA,CAAC,CAAC,6DAAY;;AAEd;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAW,GAAG;AAC5C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB;AACrB,oBAAoB;AACpB;AACA,qBAAqB,8BAA8B,EAAE,GAAG,EAAE;AAC1D;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB;AACrB,oBAAoB;AACpB;AACA,qBAAqB,8BAA8B,EAAE,GAAG,EAAE;AAC1D;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB,2DAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB,2DAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wEAAwE,2DAAS;AACjF;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAK;AACb,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,2BAA2B,2DAAS;AACpC;AACA;AACA,QAAQ,kDAAK;AACb,kBAAkB,0DAAG;AACrB,oBAAoB;AACpB;AACA,qBAAqB,2EAA2E,EAAE,IAAI,iEAAU;AAChH,oBAAoB;AACpB;AACA,qBAAqB,QAAQ,0CAAK,CAAC,EAAE;AACrC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kCAAkC,EAAE;AACpC;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iJAAiJ,QAAQ,wmBAAwmB,WAAW,iWAAiW,4EAA4E,WAAW,MAAM,MAAM;AAChtC,+CAA+C,4BAA4B,iCAAiC,0CAA0C,wCAAwC,sCAAsC,4BAA4B,WAAW,+BAA+B,2BAA2B,WAAW,8DAA8D,8BAA8B,WAAW,0BAA0B,8BAA8B,iCAAiC,kCAAkC,uCAAuC,uBAAuB,qBAAqB,WAAW,8BAA8B,kCAAkC,WAAW,+BAA+B,+BAA+B,sCAAsC,kCAAkC,0BAA0B,WAAW,oBAAoB,sCAAsC,iCAAiC,2BAA2B,0BAA0B,WAAW,mBAAmB,4BAA4B,wCAAwC,WAAW;AACnoC,iBAAiB;AACjB;AACA;AACA,2EAA2E;AAC3E,SAAS,OAAO,+DAAiB,EAAE;AACnC,SAAS,6BAA6B;AACtC,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,sBAAsB;AAC/B,SAAS,8BAA8B;AACvC,SAAS,OAAO,oDAAM;AACtB,MAAM;AACN;AACA,0BAA0B,OAAO,uDAAS,4BAA4B,OAAO,8DAAgB,EAAE,IAAI;AACnG;AACA;AACA,CAAC,CAAC,6DAAY;;AAEd;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA,SAAS,8DAA8D;AACvE,SAAS,wEAAwE;AACjF,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,qEAAqE;AACrE;AACA,6CAA6C;AAC7C;AACA;AACA,oBAAoB;AACpB;AACA;AACA,mDAAmD;AACnD;AACA,SAAS;AACT,gCAAgC,kDAAK;AACrC,kBAAkB,mEAAY;AAC9B;AACA,oBAAoB;AACpB;AACA,qBAAqB,kEAAkE,EAAE;AACzF;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,iCAAiC,mCAAmC,EAAE;AACtE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,QAAQ,kDAAK,QAAQ,0DAAG;AACxB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,iEAAU;AACvB,oBAAoB;AACpB;AACA,qBAAqB,QAAQ,0CAAK,CAAC,EAAE;AACrC;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,uaAAua,2BAA2B;AAClc,mCAAmC,+DAAiB;AACpD;AACA,wIAAwI,+CAA+C,8BAA8B,WAAW,2EAA2E,0BAA0B,WAAW,+GAA+G,+CAA+C,8BAA8B,WAAW;AACvhB,iBAAiB;AACjB;AACA;AACA,0DAA0D;AAC1D,SAAS,sBAAsB;AAC/B,SAAS,OAAO,0DAAW,EAAE;AAC7B,SAAS;AACT,MAAM;AACN;AACA,+BAA+B,OAAO,uDAAS,iCAAiC,OAAO,8DAAgB,EAAE,IAAI;AAC7G,wBAAwB,OAAO,oDAAM,EAAE;AACvC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA,iBAAiB,6BAA6B,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,EAAE;AACxB;AACA,oBAAoB;AACpB;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA;AACA,SAAS,GAAG;AACZ,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,gCAAgC,iCAAiC,EAAE,GAAG;AACtE,6CAA6C;AAC7C;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,+BAA+B,EAAE;AACjC,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA,+BAA+B,EAAE;AACjC,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA,+BAA+B,EAAE;AACjC,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,6BAA6B,EAAE;AACpD;AACA,kBAAkB,mEAAY;AAC9B;AACA,oBAAoB;AACpB;AACA,qBAAqB,2CAA2C,EAAE;AAClE;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,iCAAiC,mCAAmC,EAAE;AACtE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,wCAAwC,kDAAK;AAC7C,kBAAkB,mEAAY;AAC9B;AACA,oBAAoB;AACpB;AACA,qBAAqB,4BAA4B,EAAE;AACnD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,qBAAqB,2DAAS;AAC9B;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,kDAAkD;AAClD,qCAAqC;AACrC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,+BAA+B,EAAE;AACjC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,8BAA8B,EAAE;AAChC,mBAAmB,EAAE;AACrB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,2KAA2K,yCAAyC,gEAAgE,iEAAiE,+wBAA+wB,oEAAoE;AACxqC;AACA;AACA;AACA,2DAA2D,+BAA+B,WAAW,0CAA0C,4BAA4B,WAAW;AACtL,iBAAiB;AACjB;AACA;AACA,uDAAuD;AACvD,SAAS,sBAAsB;AAC/B,SAAS,OAAO,0DAAW,EAAE;AAC7B,SAAS;AACT,MAAM;AACN;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,sBAAsB,OAAO,uDAAS,oBAAoB;AAC1D;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC,6BAA6B,0DAAW,GAAG;AAC3C;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,+BAA+B,EAAE;AACjC,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,yDAAU,UAAU,yDAAU,WAAW,yDAAU;AAC1E,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,EAAE;AACzB,oCAAoC,EAAE,MAAM,aAAa;AACzD;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,m0BAAm0B,QAAQ,4LAA4L;AACvgC,6DAA6D,8BAA8B,WAAW,+BAA+B,+CAA+C,WAAW,uCAAuC,4BAA4B,WAAW,yBAAyB,6CAA6C,WAAW,uCAAuC,2BAA2B,WAAW;AAC3a,iBAAiB;AACjB;AACA;AACA,uDAAuD;AACvD,SAAS,OAAO,0DAAW,EAAE;AAC7B,SAAS;AACT,MAAM;AACN;AACA,oBAAoB,OAAO,uDAAS,oBAAoB;AACxD,oBAAoB,OAAO,oDAAM,EAAE;AACnC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA,iBAAiB,4BAA4B,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAW;AAC1C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,EAAE;AAC5B;AACA,oBAAoB;AACpB;AACA,qBAAqB,EAAE;AACvB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,QAAQ,kDAAK;AACb,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,+KAA+K,QAAQ;AACvL;AACA,gDAAgD,0BAA0B,WAAW;AACrF,iBAAiB;AACjB;AACA;AACA,sDAAsD;AACtD,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA,iBAAiB,+BAA+B,EAAE;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,EAAE;AAC5B;AACA,oBAAoB;AACpB;AACA,qBAAqB,EAAE;AACvB,6CAA6C;AAC7C;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kBAAkB,gEAAS;AAC3B,oBAAoB;AACpB;AACA,qBAAqB,QAAQ,kDAAK,GAAG,EAAE;AACvC;AACA,oBAAoB;AACpB;AACA,qBAAqB,gDAAgD,EAAE;AACvE;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,iCAAiC,mCAAmC,EAAE;AACtE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,qBAAqB,2DAAS;AAC9B;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kBAAkB,mEAAY;AAC9B;AACA,oBAAoB;AACpB;AACA,qBAAqB,4BAA4B,EAAE;AACnD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,yDAAyD;AACzD,SAAS,sBAAsB;AAC/B,SAAS,OAAO,0DAAW;AAC3B,MAAM;AACN;AACA,mBAAmB,OAAO,mDAAK,EAAE;AACjC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA,iBAAiB,+BAA+B,EAAE;AAClD;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAW;AAC1C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,EAAE;AAC5B;AACA,oBAAoB;AACpB;AACA,qBAAqB,EAAE;AACvB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,QAAQ,kDAAK;AACb,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,wLAAwL,WAAW;AACnM;AACA,gDAAgD,0BAA0B,WAAW;AACrF,iBAAiB;AACjB;AACA;AACA,yDAAyD;AACzD,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC,6BAA6B,0DAAW,GAAG;AAC3C;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,0BAA0B,yDAAU,UAAU,yDAAU,WAAW,yDAAU;AAC7E,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB,2DAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,40BAA40B,WAAW,4LAA4L;AACnhC,+CAA+C,6BAA6B,WAAW,+BAA+B,8BAA8B,WAAW,+BAA+B,+CAA+C,WAAW,uCAAuC,4BAA4B,WAAW,yBAAyB,6CAA6C,WAAW,0CAA0C,2BAA2B,WAAW;AACve,iBAAiB;AACjB;AACA;AACA,yDAAyD;AACzD,SAAS,OAAO,0DAAW,EAAE;AAC7B,SAAS,6BAA6B;AACtC,SAAS;AACT,MAAM;AACN;AACA,oBAAoB,OAAO,uDAAS,oBAAoB;AACxD,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,oBAAoB,OAAO,oDAAM,EAAE;AACnC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC,6BAA6B,0DAAW,GAAG;AAC3C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,+BAA+B,EAAE;AACjC,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB,2DAAS;AACjC;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB,2DAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,oVAAoV,gGAAgG,WAAW,MAAM,MAAM,wZAAwZ,WAAW,oLAAoL;AACliC,gDAAgD,kCAAkC,WAAW,kBAAkB,8BAA8B,WAAW,qBAAqB,wCAAwC,uCAAuC,qCAAqC,oCAAoC,gCAAgC,WAAW;AAChX,iBAAiB;AACjB;AACA;AACA,0DAA0D;AAC1D,SAAS,6BAA6B;AACtC,SAAS;AACT,MAAM;AACN;AACA,oBAAoB,OAAO,uDAAS,oBAAoB;AACxD,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,oBAAoB,OAAO,oDAAM,EAAE;AACnC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB,2DAAS;AAC7B,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,uBAAuB,kBAAkB,EAAE,mBAAmB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,kDAAI,UAAU,kBAAkB;AAChD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,wCAAwC,qBAAqB;AAC7D;AACA;AACA;AACA,iBAAiB,UAAU,0EAA4B,+DAA+D;AACtH,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,0DAAW;AACnC,wBAAwB,kEAAmB;AAC3C,wBAAwB,6DAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"main.js","sourcesContent":["import { cloneDeep, get, set, unset } from 'lodash-es';\nimport { __extends, __values } from 'tslib';\nimport { CommonModule } from '@angular/common';\nimport { FieldWrapper, FormlyConfig, FormlyForm, FormlyModule } from '@ngx-formly/core';\nimport { catchError, tap, debounceTime, switchMap } from 'rxjs/operators';\nimport { BehaviorSubject, timer, NEVER, merge } from 'rxjs';\nimport { FormArray, FormGroup, FormControl, FormBuilder, NG_VALUE_ACCESSOR, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Component, ViewChild, ViewContainerRef, Injectable, Inject, InjectionToken, ChangeDetectorRef, ElementRef, NgZone, EventEmitter, Input, Output, ViewEncapsulation, forwardRef, Pipe, NgModule, ANALYZE_FOR_ENTRY_COMPONENTS } from '@angular/core';\nimport 'jquery';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar FormlyDesignerWrapperComponent = /** @class */ (function (_super) {\r\n    __extends(FormlyDesignerWrapperComponent, _super);\r\n    function FormlyDesignerWrapperComponent() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FormlyDesignerWrapperComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'formly-designer-wrapper',\r\n                    template: \"\\n        <ng-template #fieldComponent></ng-template>\\n    \"\r\n                }] }\r\n    ];\r\n    FormlyDesignerWrapperComponent.propDecorators = {\r\n        fieldComponent: [{ type: ViewChild, args: ['fieldComponent', { read: ViewContainerRef },] }]\r\n    };\r\n    return FormlyDesignerWrapperComponent;\r\n}(FieldWrapper));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar FORMLY_DESIGNER_CONFIG_TOKEN = new InjectionToken('FORMLY_DESIGNER_CONFIG_TOKEN');\r\nvar FormlyDesignerConfig = /** @class */ (function () {\r\n    function FormlyDesignerConfig(configs, formlyConfig) {\r\n        if (configs === void 0) { configs = []; }\r\n        var _this = this;\r\n        this.formlyConfig = formlyConfig;\r\n        this.types = {};\r\n        this.wrappers = {};\r\n        this.settings = { showClassName: true };\r\n        configs.forEach((/**\r\n         * @param {?} config\r\n         * @return {?}\r\n         */\r\n        function (config) { return _this.addConfig(config); }));\r\n    }\r\n    /**\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerConfig.prototype.addConfig = /**\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    function (config) {\r\n        if (config.settings) {\r\n            this.setSettings(config.settings);\r\n        }\r\n        if (config.types) {\r\n            this.setType(config.types);\r\n        }\r\n        if (config.wrappers) {\r\n            this.setWrapper(config.wrappers);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} settings\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerConfig.prototype.setSettings = /**\r\n     * @param {?} settings\r\n     * @return {?}\r\n     */\r\n    function (settings) {\r\n        if (settings.showClassName !== undefined) {\r\n            this.settings.showClassName = !!settings.showClassName;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} options\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerConfig.prototype.setType = /**\r\n     * @param {?} options\r\n     * @return {?}\r\n     */\r\n    function (options) {\r\n        var _this = this;\r\n        if (Array.isArray(options)) {\r\n            options.forEach((/**\r\n             * @param {?} option\r\n             * @return {?}\r\n             */\r\n            function (option) {\r\n                _this.setType(option);\r\n            }));\r\n        }\r\n        else {\r\n            // Throw if type isn't part of the formly config\r\n            this.formlyConfig.getType(options.name);\r\n            if (!this.types[options.name]) {\r\n                this.types[options.name] = (/** @type {?} */ ({}));\r\n            }\r\n            /** @type {?} */\r\n            var type = this.types[options.name];\r\n            type.name = options.name;\r\n            type.fieldArray = !!options.fieldArray;\r\n            type.fields = options.fields;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} options\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerConfig.prototype.setWrapper = /**\r\n     * @param {?} options\r\n     * @return {?}\r\n     */\r\n    function (options) {\r\n        var _this = this;\r\n        if (Array.isArray(options)) {\r\n            options.forEach((/**\r\n             * @param {?} option\r\n             * @return {?}\r\n             */\r\n            function (option) {\r\n                _this.setWrapper(option);\r\n            }));\r\n        }\r\n        else {\r\n            // Throw if wrapper isn't part of the formly config\r\n            this.formlyConfig.getWrapper(options.name);\r\n            if (!this.wrappers[options.name]) {\r\n                this.wrappers[options.name] = (/** @type {?} */ ({}));\r\n            }\r\n            /** @type {?} */\r\n            var wrapper = this.wrappers[options.name];\r\n            wrapper.name = options.name;\r\n            wrapper.fields = options.fields;\r\n        }\r\n    };\r\n    FormlyDesignerConfig.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    FormlyDesignerConfig.ctorParameters = function () { return [\r\n        { type: Array, decorators: [{ type: Inject, args: [FORMLY_DESIGNER_CONFIG_TOKEN,] }] },\r\n        { type: FormlyConfig }\r\n    ]; };\r\n    return FormlyDesignerConfig;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar keyPathMemberName = '_formlyDesignerKeyPath';\r\n// Source: https://github.com/formly-js/ngx-formly/blob/master/src/core/src/lib/utils.ts\r\n/**\r\n * @param {?} field\r\n * @return {?}\r\n */\r\nfunction getKeyPath(field) {\r\n    var e_1, _a;\r\n    /* We store the keyPath in the field for performance reasons. This function will be called frequently. */\r\n    if (!((/** @type {?} */ (field)))[keyPathMemberName] || ((/** @type {?} */ (field)))[keyPathMemberName].key !== field.key) {\r\n        /** @type {?} */\r\n        var keyPath = [];\r\n        if (field.key) {\r\n            /* Also allow for an array key, hence the type check  */\r\n            /** @type {?} */\r\n            var pathElements = typeof field.key === 'string' ? field.key.split('.') : field.key;\r\n            try {\r\n                for (var pathElements_1 = __values(pathElements), pathElements_1_1 = pathElements_1.next(); !pathElements_1_1.done; pathElements_1_1 = pathElements_1.next()) {\r\n                    var pathElement = pathElements_1_1.value;\r\n                    if (typeof pathElement === 'string') {\r\n                        /* replace paths of the form names[2] by names.2, cfr. angular formly */\r\n                        pathElement = pathElement.replace(/\\[(\\w+)\\]/g, '.$1');\r\n                        keyPath = keyPath.concat(pathElement.split('.'));\r\n                    }\r\n                    else {\r\n                        keyPath.push(pathElement);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (pathElements_1_1 && !pathElements_1_1.done && (_a = pathElements_1.return)) _a.call(pathElements_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            for (var i = 0; i < keyPath.length; i++) {\r\n                /** @type {?} */\r\n                var pathElement = keyPath[i];\r\n                if (typeof pathElement === 'string' && /^\\d+$/.test(pathElement)) {\r\n                    keyPath[i] = parseInt(pathElement, 10);\r\n                }\r\n            }\r\n        }\r\n        ((/** @type {?} */ (field)))[keyPathMemberName] = {\r\n            key: field.key,\r\n            path: keyPath,\r\n        };\r\n    }\r\n    return ((/** @type {?} */ (field)))[keyPathMemberName].path.slice();\r\n}\r\n/**\r\n * @param {?} a\r\n * @param {?} b\r\n * @return {?}\r\n */\r\nfunction equalType(a, b) {\r\n    return (!a.fieldArray === !b.fieldArray) && (!a.fieldGroup === !b.fieldGroup);\r\n}\r\n/**\r\n * @param {?} fields\r\n * @param {?} callback\r\n * @param {?=} path\r\n * @param {?=} parent\r\n * @return {?}\r\n */\r\nfunction traverseFields(fields, callback, path, parent) {\r\n    var e_2, _a;\r\n    path = path || [];\r\n    try {\r\n        for (var fields_1 = __values(fields), fields_1_1 = fields_1.next(); !fields_1_1.done; fields_1_1 = fields_1.next()) {\r\n            var field = fields_1_1.value;\r\n            if (callback(field, path, parent)) {\r\n                return true;\r\n            }\r\n            if (field.fieldArray) {\r\n                if (traverseFields([field.fieldArray], callback, path.concat(getKeyPath(field)), field)) {\r\n                    return true;\r\n                }\r\n            }\r\n            else if (field.fieldGroup) {\r\n                if (traverseFields(field.fieldGroup, callback, path.concat(getKeyPath(field)), field)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n    finally {\r\n        try {\r\n            if (fields_1_1 && !fields_1_1.done && (_a = fields_1.return)) _a.call(fields_1);\r\n        }\r\n        finally { if (e_2) throw e_2.error; }\r\n    }\r\n}\r\n// https://stackoverflow.com/a/40294058\r\n// export const cloneDeep = (obj, hash = new WeakMap()): typeof obj => {\r\n//   if (Object(obj) !== obj) return obj; // primitives\r\n//   if (hash.has(obj)) return hash.get(obj); // cyclic reference\r\n//   const result = obj instanceof Date ? new Date(obj)\r\n//     : obj instanceof RegExp ? new RegExp(obj.source, obj.flags)\r\n//       : obj.constructor ? new obj.constructor()\r\n//         : Object.create(null);\r\n//   hash.set(obj, result);\r\n//   if (obj instanceof Map)\r\n//     Array.from(obj, ([key, val]) => result.set(key, cloneDeep(val, hash)));\r\n//   return Object.assign(result, ...Object.keys(obj).map(\r\n//     key => ({ [key]: cloneDeep(obj[key], hash) })));\r\n// };\r\n/** @type {?} */\r\nvar isArray = Array.isArray;\r\n// https://stackoverflow.com/a/28953167\r\n/** @type {?} */\r\nvar isEmpty = (/**\r\n * @param {?} val\r\n * @return {?}\r\n */\r\nfunction (val) {\r\n    if (val === undefined)\r\n        return true;\r\n    else if (typeof (val) === 'function' || typeof (val) === 'number' || typeof (val) === 'boolean'\r\n        || Object.prototype.toString.call(val) === '[object Date]')\r\n        return false;\r\n    else if (val == null || val.length === 0) // null or 0 length array\r\n        return true;\r\n    else if (typeof (val) === 'object') {\r\n        // empty object\r\n        /** @type {?} */\r\n        var r = void 0;\r\n        for (var _1 in val)\r\n            r = false;\r\n        return r;\r\n    }\r\n    return false;\r\n});\r\n/** @type {?} */\r\nvar isFunction = (/**\r\n * @param {?} val\r\n * @return {?}\r\n */\r\nfunction (val) { return typeof val === 'function'; });\r\n/** @type {?} */\r\nvar isObject = (/**\r\n * @param {?} val\r\n * @return {?}\r\n */\r\nfunction (val) { return typeof val === 'object' && val != null; });\r\n/** @type {?} */\r\nvar isString = (/**\r\n * @param {?} val\r\n * @return {?}\r\n */\r\nfunction (val) { return typeof val === 'string' || val instanceof String; });\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar FieldsService = /** @class */ (function () {\r\n    function FieldsService(formlyDesignerConfig) {\r\n        this.formlyDesignerConfig = formlyDesignerConfig;\r\n    }\r\n    /**\r\n     * @param {?} field\r\n     * @param {?} fields\r\n     * @return {?}\r\n     */\r\n    FieldsService.prototype.getFullKeyPath = /**\r\n     * @param {?} field\r\n     * @param {?} fields\r\n     * @return {?}\r\n     */\r\n    function (field, fields) {\r\n        /** @type {?} */\r\n        var keyPath = [];\r\n        if (field && field.key) {\r\n            /** @type {?} */\r\n            var parents_1 = new Map();\r\n            traverseFields(fields, (/**\r\n             * @param {?} f\r\n             * @param {?} path\r\n             * @param {?} parent\r\n             * @return {?}\r\n             */\r\n            function (f, path, parent) {\r\n                parents_1.set(f, parent);\r\n            }));\r\n            keyPath = getKeyPath(field);\r\n            /** @type {?} */\r\n            var cur = parents_1.get(field);\r\n            while (cur) {\r\n                keyPath = getKeyPath(cur).concat(keyPath);\r\n                cur = parents_1.get(cur);\r\n            }\r\n        }\r\n        return keyPath;\r\n    };\r\n    /**\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    FieldsService.prototype.getTypeFields = /**\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    function (type) {\r\n        return this.getFields(type, 'type');\r\n    };\r\n    /**\r\n     * @param {?} wrapper\r\n     * @return {?}\r\n     */\r\n    FieldsService.prototype.getWrapperFields = /**\r\n     * @param {?} wrapper\r\n     * @return {?}\r\n     */\r\n    function (wrapper) {\r\n        return this.getFields(wrapper, 'wrapper');\r\n    };\r\n    /** Check the field for control type conflict */\r\n    /**\r\n     * Check the field for control type conflict\r\n     * @param {?} field\r\n     * @param {?} fields\r\n     * @param {?=} parent\r\n     * @return {?}\r\n     */\r\n    FieldsService.prototype.checkField = /**\r\n     * Check the field for control type conflict\r\n     * @param {?} field\r\n     * @param {?} fields\r\n     * @param {?=} parent\r\n     * @return {?}\r\n     */\r\n    function (field, fields, parent) {\r\n        /** @type {?} */\r\n        var fullPathByField = new Map();\r\n        /** @type {?} */\r\n        var newPath = this.getFullKeyPath(parent || {}, fields).concat(getKeyPath(field));\r\n        /** @type {?} */\r\n        var length = newPath.length;\r\n        return !traverseFields(fields, (/**\r\n         * @param {?} f\r\n         * @param {?} p\r\n         * @return {?}\r\n         */\r\n        function (f, p) {\r\n            /** @type {?} */\r\n            var path = fullPathByField.get(f) || fullPathByField.set(f, (p || []).concat(getKeyPath(f))).get(f);\r\n            if (path.length !== length) {\r\n                return;\r\n            }\r\n            for (var i = 0; i < length; i++) {\r\n                if (path[i] !== newPath[i]) {\r\n                    return;\r\n                }\r\n            }\r\n            return !equalType(field, f);\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} field\r\n     * @param {?} designerField\r\n     * @return {?}\r\n     */\r\n    FieldsService.prototype.mutateField = /**\r\n     * @param {?} field\r\n     * @param {?} designerField\r\n     * @return {?}\r\n     */\r\n    function (field, designerField) {\r\n        if (isObject(field.templateOptions)) {\r\n            field.templateOptions['$designerField'] = designerField;\r\n        }\r\n        else {\r\n            field.templateOptions = { $designerField: designerField };\r\n        }\r\n        if (field.fieldGroup) {\r\n            this.mutateFields(field.fieldGroup, designerField);\r\n        }\r\n        else if (field.fieldArray && field.fieldArray.fieldGroup) {\r\n            if (designerField) {\r\n                this.mutateField(field.fieldArray, designerField);\r\n            }\r\n            else {\r\n                // Treating fieldArrays as fieldGroups\r\n                field.templateOptions['$fieldArray'] = { type: field.type };\r\n                field.fieldGroup = field.fieldArray.fieldGroup;\r\n                delete field.fieldArray;\r\n                delete field.type;\r\n                this.mutateFields(field.fieldGroup, designerField);\r\n            }\r\n        }\r\n        return field;\r\n    };\r\n    /**\r\n     * @param {?} fields\r\n     * @param {?} designerFields\r\n     * @return {?}\r\n     */\r\n    FieldsService.prototype.mutateFields = /**\r\n     * @param {?} fields\r\n     * @param {?} designerFields\r\n     * @return {?}\r\n     */\r\n    function (fields, designerFields) {\r\n        var _this = this;\r\n        fields.forEach((/**\r\n         * @param {?} field\r\n         * @return {?}\r\n         */\r\n        function (field) { return _this.mutateField(field, designerFields); }));\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} name\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    FieldsService.prototype.getFields = /**\r\n     * @private\r\n     * @param {?} name\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    function (name, type) {\r\n        /** @type {?} */\r\n        var designerOption = (/** @type {?} */ ((name ? this.getDesignerOptions(type)[name] || {} : {})));\r\n        /** @type {?} */\r\n        var fields = cloneDeep(designerOption.fields || []);\r\n        this.mutateFields(fields, true);\r\n        return fields;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    FieldsService.prototype.getDesignerOptions = /**\r\n     * @private\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    function (type) {\r\n        if (type === 'type') {\r\n            return this.formlyDesignerConfig.types;\r\n        }\r\n        if (type === 'wrapper') {\r\n            return this.formlyDesignerConfig.wrappers;\r\n        }\r\n        return {};\r\n    };\r\n    FieldsService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    FieldsService.ctorParameters = function () { return [\r\n        { type: FormlyDesignerConfig }\r\n    ]; };\r\n    return FieldsService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar FormlyDesignerService = /** @class */ (function () {\r\n    function FormlyDesignerService(designerConfig, fieldsService, formlyConfig) {\r\n        this.designerConfig = designerConfig;\r\n        this.fieldsService = fieldsService;\r\n        this.formlyConfig = formlyConfig;\r\n        this._disabled = new BehaviorSubject(false);\r\n        this._fields = new BehaviorSubject([]);\r\n        this._model = new BehaviorSubject({});\r\n    }\r\n    Object.defineProperty(FormlyDesignerService.prototype, \"disabled\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._disabled.value;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._disabled.next(!!value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormlyDesignerService.prototype, \"disabled$\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._disabled.asObservable();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormlyDesignerService.prototype, \"fields\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._fields.value;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            // Prune the fields because ngx-formly pollutes them with internal state\r\n            // causing incorrect behavior when re-applied.\r\n            /** @type {?} */\r\n            var fields = this.createPrunedFields(isArray(value) ? value : []);\r\n            this._fields.next(fields);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormlyDesignerService.prototype, \"fields$\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._fields.asObservable();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormlyDesignerService.prototype, \"model\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._model.value;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._model.next(value == null ? {} : value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormlyDesignerService.prototype, \"model$\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._model.asObservable();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerService.prototype.addField = /**\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    function (field) {\r\n        this.fieldsService.mutateField(field, false);\r\n        /** @type {?} */\r\n        var fields = cloneDeep(this.fields);\r\n        fields.push(field);\r\n        this.fields = fields;\r\n        this.model = cloneDeep(this.model);\r\n    };\r\n    /**\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerService.prototype.removeField = /**\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    function (field) {\r\n        this.unsetField(field);\r\n        if (this.replaceField(this.fields, field, undefined)) {\r\n            this.removeControl(field.formControl);\r\n        }\r\n        this.fields = cloneDeep(this.fields);\r\n        this.model = cloneDeep(this.model);\r\n    };\r\n    /**\r\n     * @param {?} original\r\n     * @param {?} modified\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerService.prototype.updateField = /**\r\n     * @param {?} original\r\n     * @param {?} modified\r\n     * @return {?}\r\n     */\r\n    function (original, modified) {\r\n        /** @type {?} */\r\n        var pruned = this.fieldsService.mutateField(this.createPrunedField(modified), false);\r\n        if (this.replaceField(this.fields, original, pruned)) {\r\n            if (original.formControl !== pruned.formControl) {\r\n                this.unsetField(original);\r\n                this.removeControl(original.formControl);\r\n            }\r\n            this.fields = cloneDeep(this.fields);\r\n            this.model = cloneDeep(this.model);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerService.prototype.convertField = /**\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    function (field) {\r\n        return this.createPrunedField(field);\r\n    };\r\n    /**\r\n     * @param {?} fields\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerService.prototype.convertFields = /**\r\n     * @param {?} fields\r\n     * @return {?}\r\n     */\r\n    function (fields) {\r\n        return this.createPrunedFields(fields);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerService.prototype.createDesignerFields = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.createPrunedFields(this.fields);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} fields\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerService.prototype.createPrunedFields = /**\r\n     * @private\r\n     * @param {?} fields\r\n     * @return {?}\r\n     */\r\n    function (fields) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var prunedFields = [];\r\n        if (isArray(fields)) {\r\n            fields.forEach((/**\r\n             * @param {?} field\r\n             * @return {?}\r\n             */\r\n            function (field) {\r\n                /** @type {?} */\r\n                var pruned = _this.createPrunedField(field);\r\n                if (field.fieldArray) {\r\n                    pruned.fieldArray = _this.createPrunedField(field.fieldArray);\r\n                }\r\n                else if (field.fieldGroup && !pruned.fieldArray) {\r\n                    pruned.fieldGroup = _this.createPrunedFields(field.fieldGroup);\r\n                }\r\n                if (Object.keys(pruned).length > 0) {\r\n                    prunedFields.push(pruned);\r\n                }\r\n            }));\r\n        }\r\n        return prunedFields;\r\n    };\r\n    /**\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerService.prototype.getWrappers = /**\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    function (field) {\r\n        var _this = this;\r\n        if (!field || !isArray(field.wrappers)) {\r\n            return [];\r\n        }\r\n        /** @type {?} */\r\n        var clonedField = cloneDeep(field);\r\n        /** @type {?} */\r\n        var wrappers = clonedField.wrappers = (clonedField.wrappers || []);\r\n        if (isFunction(this.designerConfig.settings.filterWrapper)) {\r\n            wrappers = wrappers.filter((/**\r\n             * @param {?} w\r\n             * @return {?}\r\n             */\r\n            function (w) { return _this.designerConfig.settings.filterWrapper(w, clonedField); }));\r\n        }\r\n        // Determine wrappers part of the formly configuration (static and dynamic) to exclude them from the result\r\n        /** @type {?} */\r\n        var staticWrappers = field.type ? this.formlyConfig.getType(field.type).wrappers || [] : [];\r\n        /** @type {?} */\r\n        var typeWrappers = staticWrappers\r\n            .concat(this.formlyConfig.templateManipulators.preWrapper.map((/**\r\n         * @param {?} m\r\n         * @return {?}\r\n         */\r\n        function (m) { return m(clonedField); })))\r\n            .concat(this.formlyConfig.templateManipulators.postWrapper.map((/**\r\n         * @param {?} m\r\n         * @return {?}\r\n         */\r\n        function (m) { return m(clonedField); })))\r\n            .filter((/**\r\n         * @param {?} w\r\n         * @return {?}\r\n         */\r\n        function (w) { return w; }));\r\n        // Remove wrappers part of the formly configuration from the result\r\n        if (typeWrappers.length > 0) {\r\n            for (var i = wrappers.length - 1; i >= 0; i--) {\r\n                for (var j = typeWrappers.length - 1; j >= 0; j--) {\r\n                    if (wrappers[i] === typeWrappers[j]) {\r\n                        typeWrappers.splice(j, 1);\r\n                        wrappers.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return wrappers;\r\n    };\r\n    /** Prunes the field of paths not identified in the designer config */\r\n    /**\r\n     * Prunes the field of paths not identified in the designer config\r\n     * @private\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerService.prototype.createPrunedField = /**\r\n     * Prunes the field of paths not identified in the designer config\r\n     * @private\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    function (field) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var pruned;\r\n        /** @type {?} */\r\n        var type = get(field, 'templateOptions.$fieldArray.type', field.type);\r\n        /** @type {?} */\r\n        var designerType = this.designerConfig.types[type];\r\n        if (designerType) {\r\n            pruned = { key: field.key, type: type };\r\n            this.applyProperties(field, pruned, designerType.fields);\r\n            if (designerType.fieldArray) {\r\n                pruned.fieldArray = {\r\n                    fieldGroup: this.createPrunedFields(field.fieldGroup)\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            pruned = isEmpty(field.key) ? {} : { key: field.key };\r\n            if (isArray(field.fieldGroup)) {\r\n                pruned.fieldGroup = this.createPrunedFields(field.fieldGroup);\r\n            }\r\n        }\r\n        /** @type {?} */\r\n        var className;\r\n        if (isString(field.className) && (className = field.className.trim()).length > 0) {\r\n            pruned.className = className;\r\n        }\r\n        /** @type {?} */\r\n        var wrappers = this.getWrappers(field);\r\n        if (wrappers.length > 0) {\r\n            pruned.wrappers = wrappers;\r\n            /** @type {?} */\r\n            var designerWrapperFields = wrappers.map((/**\r\n             * @param {?} wrapper\r\n             * @return {?}\r\n             */\r\n            function (wrapper) { return _this.designerConfig.wrappers[wrapper]; }))\r\n                .filter((/**\r\n             * @param {?} designerOption\r\n             * @return {?}\r\n             */\r\n            function (designerOption) { return designerOption && isArray(designerOption.fields); }))\r\n                .reduce((/**\r\n             * @param {?} previous\r\n             * @param {?} current\r\n             * @return {?}\r\n             */\r\n            function (previous, current) { return previous.concat(current.fields); }), []);\r\n            this.applyProperties(field, pruned, designerWrapperFields);\r\n        }\r\n        return pruned;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} field\r\n     * @param {?} designed\r\n     * @param {?} designerFields\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerService.prototype.applyProperties = /**\r\n     * @private\r\n     * @param {?} field\r\n     * @param {?} designed\r\n     * @param {?} designerFields\r\n     * @return {?}\r\n     */\r\n    function (field, designed, designerFields) {\r\n        if (isArray(designerFields)) {\r\n            designerFields.forEach((/**\r\n             * @param {?} designerField\r\n             * @return {?}\r\n             */\r\n            function (designerField) {\r\n                /** @type {?} */\r\n                var value = get(field, designerField.key);\r\n                if (value != null && (!isString(value) || value.length > 0) && value !== designerField.defaultValue) {\r\n                    set(designed, designerField.key, value);\r\n                }\r\n            }));\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} fields\r\n     * @param {?} original\r\n     * @param {?} modified\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerService.prototype.replaceField = /**\r\n     * @private\r\n     * @param {?} fields\r\n     * @param {?} original\r\n     * @param {?} modified\r\n     * @return {?}\r\n     */\r\n    function (fields, original, modified) {\r\n        if (isArray(fields)) {\r\n            /** @type {?} */\r\n            var l = fields.length;\r\n            for (var i = 0; i < l; i++) {\r\n                /** @type {?} */\r\n                var field = fields[i];\r\n                if (field === original) {\r\n                    if (modified == null) {\r\n                        fields.splice(i, 1);\r\n                    }\r\n                    else {\r\n                        fields[i] = modified;\r\n                    }\r\n                    return true;\r\n                }\r\n                if (field.fieldGroup && this.replaceField(field.fieldGroup, original, modified)) {\r\n                    return true;\r\n                }\r\n                if (field.fieldArray && this.replaceFieldArray(field, original, modified)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} parent\r\n     * @param {?} original\r\n     * @param {?} modified\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerService.prototype.replaceFieldArray = /**\r\n     * @private\r\n     * @param {?} parent\r\n     * @param {?} original\r\n     * @param {?} modified\r\n     * @return {?}\r\n     */\r\n    function (parent, original, modified) {\r\n        /** @type {?} */\r\n        var fieldArray = parent.fieldArray;\r\n        if (fieldArray === original) {\r\n            parent.fieldArray = modified;\r\n            return true;\r\n        }\r\n        if (fieldArray.fieldGroup && this.replaceField(fieldArray.fieldGroup, original, modified)) {\r\n            return true;\r\n        }\r\n        return fieldArray.fieldArray && this.replaceFieldArray(fieldArray, original, modified);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} key\r\n     * @param {?} path\r\n     * @param {?=} arrayNext\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerService.prototype.buildPath = /**\r\n     * @private\r\n     * @param {?} key\r\n     * @param {?} path\r\n     * @param {?=} arrayNext\r\n     * @return {?}\r\n     */\r\n    function (key, path, arrayNext) {\r\n        if (arrayNext === void 0) { arrayNext = false; }\r\n        return path ? key + (arrayNext ? path : '.' + path) : key;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} control\r\n     * @param {?=} includeSelf\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerService.prototype.path = /**\r\n     * @private\r\n     * @param {?} control\r\n     * @param {?=} includeSelf\r\n     * @return {?}\r\n     */\r\n    function (control, includeSelf) {\r\n        if (includeSelf === void 0) { includeSelf = true; }\r\n        /** @type {?} */\r\n        var path = '';\r\n        /** @type {?} */\r\n        var arrayNext = false;\r\n        if (!includeSelf) {\r\n            control = (control || (/** @type {?} */ ({}))).parent;\r\n        }\r\n        for (var child = control, parent_1 = (control || (/** @type {?} */ ({}))).parent; !!parent_1; child = parent_1, parent_1 = parent_1.parent) {\r\n            if (parent_1 instanceof FormGroup) {\r\n                for (var key in parent_1.controls) {\r\n                    if (parent_1.controls[key] === child) {\r\n                        path = this.buildPath(key, path, arrayNext);\r\n                        arrayNext = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else if (parent_1 instanceof FormArray) {\r\n                for (var i = 0; i < parent_1.length; i++) {\r\n                    if (parent_1.at(i) === child) {\r\n                        path = this.buildPath('[' + i + ']', path, arrayNext);\r\n                        arrayNext = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return path;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerService.prototype.unsetField = /**\r\n     * @private\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    function (field) {\r\n        var _this = this;\r\n        if (field) {\r\n            if (field.fieldArray) {\r\n                this.unsetField(field.fieldArray);\r\n            }\r\n            if (field.fieldGroup) {\r\n                field.fieldGroup.forEach((/**\r\n                 * @param {?} f\r\n                 * @return {?}\r\n                 */\r\n                function (f) { return _this.unsetField(f); }));\r\n            }\r\n            if (field.formControl) {\r\n                /** @type {?} */\r\n                var path = this.path(field.formControl);\r\n                unset(this.model, path);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerService.prototype.removeControl = /**\r\n     * @private\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    function (control) {\r\n        /** @type {?} */\r\n        var parent = control ? control.parent : undefined;\r\n        if (parent instanceof FormGroup) {\r\n            for (var key in parent.controls) {\r\n                if (parent.controls[key] === control) {\r\n                    parent.removeControl(key);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        else if (parent instanceof FormArray) {\r\n            for (var i = 0; i < parent.length; i++) {\r\n                if (parent.at(i) === control) {\r\n                    parent.removeAt(i);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    FormlyDesignerService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    FormlyDesignerService.ctorParameters = function () { return [\r\n        { type: FormlyDesignerConfig },\r\n        { type: FieldsService },\r\n        { type: FormlyConfig }\r\n    ]; };\r\n    return FormlyDesignerService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar FormlyDesignerFieldWrapperComponent = /** @class */ (function (_super) {\r\n    __extends(FormlyDesignerFieldWrapperComponent, _super);\r\n    function FormlyDesignerFieldWrapperComponent(changeDetector, designerConfig, elementRef, fieldsService, formlyDesignerService, zone) {\r\n        var _this = _super.call(this) || this;\r\n        _this.changeDetector = changeDetector;\r\n        _this.designerConfig = designerConfig;\r\n        _this.elementRef = elementRef;\r\n        _this.fieldsService = fieldsService;\r\n        _this.formlyDesignerService = formlyDesignerService;\r\n        _this.zone = zone;\r\n        _this.editing = false;\r\n        _this.fieldEdit = new FormControl({});\r\n        _this.fieldWrappers = [];\r\n        _this.wrappers = [];\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldWrapperComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.type = this.field.type;\r\n        this.wrappers = Object.getOwnPropertyNames(this.designerConfig.wrappers);\r\n        this.fieldWrappers = this.formlyDesignerService.getWrappers(this.formlyDesignerService.convertField(this.field)) || [];\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldWrapperComponent.prototype.ngAfterContentInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.zone.runOutsideAngular((/**\r\n         * @return {?}\r\n         */\r\n        function () { return setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        function () { return _this.checkDesigner(); })); }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldWrapperComponent.prototype.ngAfterContentChecked = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.zone.runOutsideAngular((/**\r\n         * @return {?}\r\n         */\r\n        function () { return setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        function () { return _this.checkDesigner(); })); }));\r\n    };\r\n    Object.defineProperty(FormlyDesignerFieldWrapperComponent.prototype, \"disabled\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.formlyDesignerService.disabled;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} wrapper\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldWrapperComponent.prototype.addWrapper = /**\r\n     * @param {?} wrapper\r\n     * @return {?}\r\n     */\r\n    function (wrapper) {\r\n        /** @type {?} */\r\n        var field = cloneDeep(this.field);\r\n        if (field.wrappers) {\r\n            field.wrappers.push(wrapper);\r\n        }\r\n        else {\r\n            field.wrappers = [wrapper];\r\n        }\r\n        this.formlyDesignerService.updateField(this.field, field);\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldWrapperComponent.prototype.removeWrapper = /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function (index) {\r\n        /** @type {?} */\r\n        var field = cloneDeep(this.field);\r\n        this.fieldWrappers.splice(index, 1);\r\n        field.wrappers = this.fieldWrappers;\r\n        this.formlyDesignerService.updateField(this.field, field);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldWrapperComponent.prototype.edit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.editing = true;\r\n        this.formlyDesignerService.disabled = true;\r\n        /** @type {?} */\r\n        var editFields = this.formlyDesignerService.convertField(cloneDeep(this.field));\r\n        this.fieldEdit.setValue(editFields);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldWrapperComponent.prototype.remove = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.formlyDesignerService.removeField(this.field);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldWrapperComponent.prototype.accept = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (!this.fieldsService.checkField(this.fieldEdit.value, this.formlyDesignerService.fields)) {\r\n            return;\r\n        }\r\n        timer().subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.formlyDesignerService.updateField(_this.field, _this.fieldEdit.value);\r\n            _this.formlyDesignerService.disabled = false;\r\n            _this.editing = false;\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldWrapperComponent.prototype.cancel = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.formlyDesignerService.disabled = false;\r\n        this.editing = false;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldWrapperComponent.prototype.checkDesigner = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var element = (/** @type {?} */ (this.elementRef.nativeElement));\r\n        if (element.parentNode == null) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var designerEmpty = element.querySelector('formly-designer-wrapper') == null;\r\n        if (designerEmpty !== element.classList.contains('designerEmpty')) {\r\n            this.changeDetector.detectChanges();\r\n            if (designerEmpty) {\r\n                element.classList.add('designerEmpty');\r\n            }\r\n            else {\r\n                element.classList.remove('designerEmpty');\r\n            }\r\n        }\r\n    };\r\n    FormlyDesignerFieldWrapperComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'formly-designer-field-wrapper',\r\n                    template: \"\\n        <div *ngIf=\\\"!editing\\\" class=\\\"bg-info text-white control-panel\\\">\\n            <span class=\\\"type\\\">{{ type }}</span>\\n            <div class=\\\"btn-group\\\">\\n                <button type=\\\"button\\\" class=\\\"btn\\\" data-toggle=\\\"dropdown\\\"\\n                    aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" title=\\\"wrappers\\\">\\n                    <i class=\\\"fa fa-clone\\\" aria-hidden=\\\"true\\\"></i>\\n                </button>\\n                <div class=\\\"dropdown-menu dropdown-menu-right\\\">\\n                    <button class=\\\"dropdown-item\\\" type=\\\"button\\\" [disabled]=\\\"disabled\\\" title=\\\"add wrapper\\\"\\n                        *ngFor=\\\"let wrapper of wrappers\\\" (click)=\\\"addWrapper(wrapper)\\\">\\n                        {{ wrapper }}\\n                    </button>\\n                    <ng-container *ngIf=\\\"fieldWrappers.length\\\">\\n                        <div *ngIf=\\\"wrappers.length\\\" class=\\\"dropdown-divider\\\"></div>\\n                        <button class=\\\"dropdown-item\\\" type=\\\"button\\\" [disabled]=\\\"disabled\\\"\\n                            *ngFor=\\\"let wrapper of fieldWrappers; let i=index\\\" (click)=\\\"removeWrapper(i)\\\">\\n                            {{ wrapper }}&nbsp;&nbsp;<i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\" title=\\\"remove wrapper\\\"></i>\\n                        </button>\\n                    </ng-container>\\n                </div>\\n            </div>\\n            <button class=\\\"btn\\\" type=\\\"button\\\" [disabled]=\\\"disabled\\\" (click)=\\\"edit()\\\">\\n                <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" title=\\\"edit\\\"></i>\\n            </button>\\n            <button class=\\\"btn\\\" type=\\\"button\\\" [disabled]=\\\"disabled\\\" (click)=\\\"remove()\\\">\\n                <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\" title=\\\"remove\\\"></i>\\n            </button>\\n        </div>\\n        <div class=\\\"content\\\">\\n            <div class=\\\"editor\\\" [hidden]=\\\"!editing\\\">\\n                <formly-designer-field-editor #editor [hasContent]=\\\"true\\\" [showType]=\\\"true\\\" [showWrappers]=\\\"true\\\" [formControl]=\\\"fieldEdit\\\">\\n                    <div class=\\\"footer\\\">\\n                        <button (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary mr-1\\\">Cancel</button>\\n                        <button [disabled]=\\\"editor.invalid\\\" (click)=\\\"accept()\\\" class=\\\"btn btn-primary\\\">Apply</button>\\n                    </div>\\n                </formly-designer-field-editor>\\n            </div>\\n            <div [hidden]=\\\"editing\\\">\\n                <ng-template #fieldComponent></ng-template>\\n            </div>\\n        </div>\\n    \",\r\n                    styles: [\"\\n        :host {\\n            display: flex;\\n            position: relative;\\n            justify-content: flex-start;\\n            align-content: flex-start;\\n            align-items: flex-start;\\n            margin: .25em;\\n        }\\n        :host.designerEmpty {\\n            display:none;\\n        }\\n        .btn:not(:disabled), .dropdown-item:not(:disabled) {\\n            cursor: pointer;\\n        }\\n        .control-panel {\\n            font-size: .8em;\\n            position: absolute;\\n            padding: 0 0 0 .5em;\\n            border-radius: 0 5px 0 0;\\n            right: 0;\\n            top: 0;\\n        }\\n        .control-panel > * {\\n            padding-right: .5em;\\n        }\\n        .control-panel .btn {\\n            font-size: unset;\\n            background-color: unset;\\n            padding: 0 .5em 0 0;\\n            color: #fff;\\n        }\\n        .content {\\n            border: 1px dashed #000;\\n            border-radius: 5px;\\n            min-height: 2em;\\n            padding: 1.5em 1em 0 1em;\\n            width: 100%;\\n        }\\n        .content:first-child {\\n            padding-top: 0;\\n        }\\n        .editor {\\n            margin: 1em 0;\\n        }\\n        .footer {\\n            display: flex;\\n            justify-content: flex-end;\\n        }\\n    \"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    FormlyDesignerFieldWrapperComponent.ctorParameters = function () { return [\r\n        { type: ChangeDetectorRef },\r\n        { type: FormlyDesignerConfig },\r\n        { type: ElementRef },\r\n        { type: FieldsService },\r\n        { type: FormlyDesignerService },\r\n        { type: NgZone }\r\n    ]; };\r\n    FormlyDesignerFieldWrapperComponent.propDecorators = {\r\n        fieldComponent: [{ type: ViewChild, args: ['fieldComponent', { read: ViewContainerRef },] }]\r\n    };\r\n    return FormlyDesignerFieldWrapperComponent;\r\n}(FieldWrapper));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar FormlyDesignerFieldGroupWrapperComponent = /** @class */ (function (_super) {\r\n    __extends(FormlyDesignerFieldGroupWrapperComponent, _super);\r\n    function FormlyDesignerFieldGroupWrapperComponent(changeDetector, designerConfig, elementRef, fieldsService, formlyDesignerService, zone) {\r\n        var _this = _super.call(this) || this;\r\n        _this.changeDetector = changeDetector;\r\n        _this.designerConfig = designerConfig;\r\n        _this.elementRef = elementRef;\r\n        _this.fieldsService = fieldsService;\r\n        _this.formlyDesignerService = formlyDesignerService;\r\n        _this.zone = zone;\r\n        _this.editing = false;\r\n        _this.fieldEdit = new FormControl({});\r\n        _this.fieldWrappers = [];\r\n        _this.wrappers = [];\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldGroupWrapperComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.field.templateOptions.$fieldArray) {\r\n            this.type = this.field.templateOptions.$fieldArray.type || 'fieldArray';\r\n        }\r\n        else if (this.field.type) {\r\n            this.type = this.field.type;\r\n        }\r\n        else if (this.field.fieldGroup) {\r\n            this.type = 'fieldGroup';\r\n        }\r\n        this.wrappers = Object.getOwnPropertyNames(this.designerConfig.wrappers);\r\n        this.fieldWrappers = this.formlyDesignerService.convertField(this.field).wrappers || [];\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldGroupWrapperComponent.prototype.ngAfterContentInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.zone.runOutsideAngular((/**\r\n         * @return {?}\r\n         */\r\n        function () { return setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        function () { return _this.checkDesigner(); })); }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldGroupWrapperComponent.prototype.ngAfterContentChecked = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.zone.runOutsideAngular((/**\r\n         * @return {?}\r\n         */\r\n        function () { return setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        function () { return _this.checkDesigner(); })); }));\r\n    };\r\n    Object.defineProperty(FormlyDesignerFieldGroupWrapperComponent.prototype, \"disabled\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.formlyDesignerService.disabled;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} wrapper\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldGroupWrapperComponent.prototype.addWrapper = /**\r\n     * @param {?} wrapper\r\n     * @return {?}\r\n     */\r\n    function (wrapper) {\r\n        /** @type {?} */\r\n        var field = cloneDeep(this.field);\r\n        if (field.wrappers) {\r\n            field.wrappers.push(wrapper);\r\n        }\r\n        else {\r\n            field.wrappers = [wrapper];\r\n        }\r\n        this.formlyDesignerService.updateField(this.field, field);\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldGroupWrapperComponent.prototype.removeWrapper = /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function (index) {\r\n        /** @type {?} */\r\n        var field = cloneDeep(this.field);\r\n        this.fieldWrappers.splice(index, 1);\r\n        field.wrappers = this.fieldWrappers;\r\n        this.formlyDesignerService.updateField(this.field, field);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldGroupWrapperComponent.prototype.edit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.editing = true;\r\n        this.formlyDesignerService.disabled = true;\r\n        this.fieldEdit.setValue(this.formlyDesignerService.convertField(cloneDeep(this.field)));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldGroupWrapperComponent.prototype.remove = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.formlyDesignerService.removeField(this.field);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldGroupWrapperComponent.prototype.accept = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (!this.fieldsService.checkField(this.fieldEdit.value, this.formlyDesignerService.fields)) {\r\n            return;\r\n        }\r\n        timer().subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.formlyDesignerService.updateField(_this.field, _this.fieldEdit.value);\r\n            _this.formlyDesignerService.disabled = false;\r\n            _this.editing = false;\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldGroupWrapperComponent.prototype.cancel = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.formlyDesignerService.disabled = false;\r\n        this.editing = false;\r\n    };\r\n    /**\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldGroupWrapperComponent.prototype.onFieldSelected = /**\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    function (field) {\r\n        var _this = this;\r\n        if (isArray(this.field.fieldGroup) &&\r\n            !this.fieldsService.checkField(field, this.formlyDesignerService.fields, this.field)) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var updatedField = cloneDeep(this.field);\r\n        updatedField.fieldGroup = isArray(updatedField.fieldGroup) ? updatedField.fieldGroup.slice() : [];\r\n        updatedField.fieldGroup.push(field);\r\n        timer()\r\n            .pipe(tap((/**\r\n         * @return {?}\r\n         */\r\n        function () { return _this.formlyDesignerService.updateField(_this.field, updatedField); })), catchError((/**\r\n         * @return {?}\r\n         */\r\n        function () { return NEVER; })))\r\n            .subscribe();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerFieldGroupWrapperComponent.prototype.checkDesigner = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var element = (/** @type {?} */ (this.elementRef.nativeElement));\r\n        if (element.parentNode == null) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var designerEmpty = element.querySelector('formly-designer-wrapper') == null;\r\n        if (designerEmpty !== element.classList.contains('designerEmpty')) {\r\n            this.changeDetector.detectChanges();\r\n            if (designerEmpty) {\r\n                element.classList.add('designerEmpty');\r\n            }\r\n            else {\r\n                element.classList.remove('designerEmpty');\r\n            }\r\n        }\r\n    };\r\n    FormlyDesignerFieldGroupWrapperComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'formly-designer-field-group-wrapper',\r\n                    template: \"\\n        <div *ngIf=\\\"!editing\\\" class=\\\"bg-info text-white control-panel\\\">\\n            <span class=\\\"type\\\">{{ type }}</span>\\n            <div class=\\\"btn-group\\\">\\n                <button type=\\\"button\\\" class=\\\"btn\\\" data-toggle=\\\"dropdown\\\"\\n                    aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" title=\\\"wrappers\\\">\\n                    <i class=\\\"fa fa-clone\\\" aria-hidden=\\\"true\\\"></i>\\n                </button>\\n                <div class=\\\"dropdown-menu dropdown-menu-right\\\">\\n                    <button class=\\\"dropdown-item\\\" type=\\\"button\\\" [disabled]=\\\"disabled\\\" title=\\\"add wrapper\\\"\\n                        *ngFor=\\\"let wrapper of wrappers\\\" (click)=\\\"addWrapper(wrapper)\\\">\\n                        {{ wrapper }}\\n                    </button>\\n                    <ng-container *ngIf=\\\"fieldWrappers.length\\\">\\n                        <div *ngIf=\\\"wrappers.length\\\" class=\\\"dropdown-divider\\\"></div>\\n                        <button class=\\\"dropdown-item\\\" type=\\\"button\\\" [disabled]=\\\"disabled\\\"\\n                            *ngFor=\\\"let wrapper of fieldWrappers; let i=index\\\" (click)=\\\"removeWrapper(i)\\\">\\n                            {{ wrapper }}&nbsp;&nbsp;<i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\" title=\\\"remove wrapper\\\"></i>\\n                        </button>\\n                    </ng-container>\\n                </div>\\n            </div>\\n            <button [disabled]=\\\"disabled\\\" type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"edit()\\\">\\n                <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" title=\\\"edit\\\"></i>\\n            </button>\\n            <button [disabled]=\\\"disabled\\\" type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"remove()\\\">\\n                <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\" title=\\\"remove\\\"></i>\\n            </button>\\n        </div>\\n        <div class=\\\"content\\\">\\n            <div [hidden]=\\\"!editing\\\">\\n                <formly-designer-field-editor #editor [hasContent]=\\\"true\\\" [showWrappers]=\\\"true\\\" [formControl]=\\\"fieldEdit\\\">\\n                    <div class=\\\"footer\\\">\\n                        <button (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary mr-1\\\">Cancel</button>\\n                        <button [disabled]=\\\"editor.invalid\\\" (click)=\\\"accept()\\\" class=\\\"btn btn-primary\\\">Apply</button>\\n                    </div>\\n                </formly-designer-field-editor>\\n            </div>\\n            <div [hidden]=\\\"editing\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>child</label>\\n                    <formly-designer-field-picker (selected)=\\\"onFieldSelected($event)\\\"></formly-designer-field-picker>\\n                </div>\\n                <ng-template #fieldComponent></ng-template>\\n            </div>\\n        </div>\\n    \",\r\n                    styles: [\"\\n        :host {\\n            display: flex;\\n            position: relative;\\n            justify-content: flex-start;\\n            align-content: flex-start;\\n            align-items: flex-start;\\n            margin: .25em;\\n        }\\n        :host.designerEmpty {\\n            display:none;\\n        }\\n        .btn:not(:disabled), .dropdown-item:not(:disabled) {\\n            cursor: pointer;\\n        }\\n        .control-panel {\\n            font-size: .8em;\\n            position: absolute;\\n            padding: 0 0 0 .5em;\\n            border-radius: 0 5px 0 0;\\n            right: 0;\\n            top: 0;\\n        }\\n        .control-panel > * {\\n            padding-right: .5em;\\n        }\\n        .control-panel .btn {\\n            font-size: unset;\\n            background-color: unset;\\n            padding: 0 .5em 0 0;\\n            color: #fff;\\n        }\\n        .content {\\n            border: 1px dashed #000;\\n            border-radius: 5px;\\n            padding: 1em;\\n            width: 100%;\\n        }\\n        .footer {\\n            display: flex;\\n            justify-content: flex-end;\\n        }\\n    \"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    FormlyDesignerFieldGroupWrapperComponent.ctorParameters = function () { return [\r\n        { type: ChangeDetectorRef },\r\n        { type: FormlyDesignerConfig },\r\n        { type: ElementRef },\r\n        { type: FieldsService },\r\n        { type: FormlyDesignerService },\r\n        { type: NgZone }\r\n    ]; };\r\n    FormlyDesignerFieldGroupWrapperComponent.propDecorators = {\r\n        fieldComponent: [{ type: ViewChild, args: ['fieldComponent', { read: ViewContainerRef },] }]\r\n    };\r\n    return FormlyDesignerFieldGroupWrapperComponent;\r\n}(FieldWrapper));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar TemplateDesigner = /** @class */ (function () {\r\n    function TemplateDesigner() {\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    TemplateDesigner.prototype.isNonDesignerField = /**\r\n     * @private\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    function (field) {\r\n        return field && (!field.templateOptions || field.templateOptions['$designerField'] !== true);\r\n    };\r\n    /**\r\n     * @param {?} fc\r\n     * @return {?}\r\n     */\r\n    TemplateDesigner.prototype.run = /**\r\n     * @param {?} fc\r\n     * @return {?}\r\n     */\r\n    function (fc) {\r\n        var _this = this;\r\n        fc.templateManipulators.preWrapper.push((/**\r\n         * @param {?} field\r\n         * @return {?}\r\n         */\r\n        function (field) {\r\n            if (_this.isNonDesignerField(field)) {\r\n                return field.fieldGroup ? 'fieldGroupDesigner' : 'fieldDesigner';\r\n            }\r\n        }));\r\n        fc.templateManipulators.postWrapper.push((/**\r\n         * @param {?} field\r\n         * @return {?}\r\n         */\r\n        function (field) {\r\n            if (_this.isNonDesignerField(field)) {\r\n                return 'designer';\r\n            }\r\n        }));\r\n    };\r\n    return TemplateDesigner;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar fieldComponents = [];\r\n/** @type {?} */\r\nvar wrapperComponents = [\r\n    FormlyDesignerWrapperComponent,\r\n    FormlyDesignerFieldWrapperComponent,\r\n    FormlyDesignerFieldGroupWrapperComponent\r\n];\r\n/** @type {?} */\r\nvar config = {\r\n    wrappers: [\r\n        { name: 'designer', component: FormlyDesignerWrapperComponent },\r\n        { name: 'fieldDesigner', component: FormlyDesignerFieldWrapperComponent },\r\n        { name: 'fieldGroupDesigner', component: FormlyDesignerFieldGroupWrapperComponent }\r\n    ],\r\n    manipulators: [\r\n        { class: TemplateDesigner, method: 'run' }\r\n    ]\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar FormlyDesignerComponent = /** @class */ (function () {\r\n    function FormlyDesignerComponent(fieldsService, formBuilder, formlyDesignerService) {\r\n        this.fieldsService = fieldsService;\r\n        this.formBuilder = formBuilder;\r\n        this.formlyDesignerService = formlyDesignerService;\r\n        this.fieldsChange = new EventEmitter();\r\n        this.modelChange = new EventEmitter();\r\n        this.types = [];\r\n        this.wrappers = [];\r\n        this.properties = [];\r\n        this.debugFields = [];\r\n        this.options = {};\r\n        this.subscriptions = [];\r\n    }\r\n    Object.defineProperty(FormlyDesignerComponent.prototype, \"disabled\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.formlyDesignerService.disabled;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this.formlyDesignerService.disabled = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormlyDesignerComponent.prototype, \"fields\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.formlyDesignerService.fields;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            /** @type {?} */\r\n            var fields = this.formlyDesignerService.convertFields(value);\r\n            this.fieldsService.mutateFields(fields, false);\r\n            this.formlyDesignerService.fields = fields;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormlyDesignerComponent.prototype, \"model\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.formlyDesignerService.model;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this.formlyDesignerService.model = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        // Designer forms will be restricted to a single field depth; all designer keys should be\r\n        // complex (e.g. \"templateOptions.some.property\")\r\n        this.form = this.formBuilder.group({});\r\n        this.subscriptions.push(this.formlyDesignerService.fields$\r\n            .subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.form = _this.formBuilder.group({});\r\n            _this.fieldsChange.emit(_this.formlyDesignerService.createDesignerFields());\r\n        })));\r\n        this.subscriptions.push(merge(this.formlyDesignerService.model$, this.form.valueChanges)\r\n            .pipe(debounceTime(50))\r\n            .subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () { return _this.modelChange.emit(_this.formlyDesignerService.model); })));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.subscriptions.splice(0).forEach((/**\r\n         * @param {?} subscription\r\n         * @return {?}\r\n         */\r\n        function (subscription) { return subscription.unsubscribe(); }));\r\n    };\r\n    /**\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerComponent.prototype.onFieldSelected = /**\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    function (field) {\r\n        var _this = this;\r\n        timer().pipe(tap((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            if (_this.fieldsService.checkField(field, _this.formlyDesignerService.fields)) {\r\n                _this.formlyDesignerService.addField(field);\r\n            }\r\n        })), catchError((/**\r\n         * @return {?}\r\n         */\r\n        function () { return NEVER; }))).subscribe();\r\n    };\r\n    FormlyDesignerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'formly-designer',\r\n                    template: \"\\n        <formly-designer-field-picker (selected)=\\\"onFieldSelected($event)\\\">\\n        </formly-designer-field-picker>\\n        <form novalidate [formGroup]=\\\"form\\\">\\n            <formly-form [options]=\\\"options\\\" [model]=\\\"model\\\" [form]=\\\"form\\\" [fields]=\\\"fields\\\">\\n            </formly-form>\\n        </form>\\n        <!--<div>\\n            Designer Fields Debug:\\n            <pre>{{ fields | decycle | json }}</pre>\\n        </div>-->\\n    \",\r\n                    encapsulation: ViewEncapsulation.None,\r\n                    providers: [FormlyDesignerService],\r\n                    styles: [\"\\n        formly-designer-field-picker .form-group > .input-group > formly-designer-type-select > select {\\n            border-radius: .25rem 0 0 .25rem;\\n            border-right: 0;\\n        }\\n        formly-designer-wrapper-editor .card > .card-body .form-control {\\n            width: 100%;\\n        }\\n        formly-designer-wrapper-picker .form-group > .input-group > formly-designer-wrapper-select > select {\\n            border-radius: .25rem 0 0 .25rem;\\n            border-right: 0;\\n        }\\n    \"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    FormlyDesignerComponent.ctorParameters = function () { return [\r\n        { type: FieldsService },\r\n        { type: FormBuilder },\r\n        { type: FormlyDesignerService }\r\n    ]; };\r\n    FormlyDesignerComponent.propDecorators = {\r\n        formlyFormContainer: [{ type: ViewChild, args: ['formlyFormContainer', { read: ViewContainerRef },] }],\r\n        fieldsChange: [{ type: Output }],\r\n        modelChange: [{ type: Output }],\r\n        disabled: [{ type: Input }],\r\n        fields: [{ type: Input }],\r\n        model: [{ type: Input }]\r\n    };\r\n    return FormlyDesignerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar FIELD_EDITOR_CONTROL_VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef((/**\r\n     * @return {?}\r\n     */\r\n    function () { return FieldEditorComponent; })),\r\n    multi: true\r\n};\r\nvar FieldEditorComponent = /** @class */ (function () {\r\n    function FieldEditorComponent(fieldsService, formBuilder, formlyDesignerConfig) {\r\n        var _this = this;\r\n        this.fieldsService = fieldsService;\r\n        this.formBuilder = formBuilder;\r\n        this.formlyDesignerConfig = formlyDesignerConfig;\r\n        this.subscriptions = [];\r\n        this.field = {};\r\n        this.fields = [];\r\n        this.onChange = (/**\r\n         * @param {?} _\r\n         * @return {?}\r\n         */\r\n        function (_) { });\r\n        this.onTouched = (/**\r\n         * @return {?}\r\n         */\r\n        function () { });\r\n        this.form = formBuilder.group({\r\n            key: [''],\r\n            className: [''],\r\n            type: ['']\r\n        }, { validator: (/**\r\n             * @param {?} control\r\n             * @return {?}\r\n             */\r\n            function (control) { return _this.validator(control); }) });\r\n        this.fieldForm = formBuilder.group({});\r\n    }\r\n    Object.defineProperty(FieldEditorComponent.prototype, \"key\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return (/** @type {?} */ (this.form.get('key')));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FieldEditorComponent.prototype, \"className\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return (/** @type {?} */ (this.form.get('className')));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FieldEditorComponent.prototype, \"type\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return (/** @type {?} */ (this.form.get('type')));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FieldEditorComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.subscriptions.push(this.type.valueChanges\r\n            .subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () { return _this.onTypeChange(); })));\r\n        this.subscriptions.push(this.form.statusChanges\r\n            .pipe(debounceTime(0))\r\n            .subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () { return _this.invalid = _this.form.invalid; })));\r\n        this.subscribeValueChanges();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FieldEditorComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.valueChangesSubscription.unsubscribe();\r\n        this.subscriptions.splice(0).forEach((/**\r\n         * @param {?} subscription\r\n         * @return {?}\r\n         */\r\n        function (subscription) { return subscription.unsubscribe(); }));\r\n    };\r\n    /**\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    FieldEditorComponent.prototype.writeValue = /**\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    function (obj) {\r\n        this.valueChangesSubscription.unsubscribe();\r\n        this.updateField(obj);\r\n        this.form.markAsPristine();\r\n        this.form.markAsUntouched();\r\n        this.subscribeValueChanges();\r\n    };\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    FieldEditorComponent.prototype.registerOnChange = /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    function (fn) {\r\n        this.onChange = fn;\r\n    };\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    FieldEditorComponent.prototype.registerOnTouched = /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    function (fn) {\r\n        this.onTouched = fn;\r\n    };\r\n    /**\r\n     * @param {?} isDisabled\r\n     * @return {?}\r\n     */\r\n    FieldEditorComponent.prototype.setDisabledState = /**\r\n     * @param {?} isDisabled\r\n     * @return {?}\r\n     */\r\n    function (isDisabled) {\r\n        if (isDisabled) {\r\n            this.form.disable();\r\n        }\r\n        else {\r\n            this.form.enable();\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    FieldEditorComponent.prototype.subscribeValueChanges = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.valueChangesSubscription = merge(this.fieldForm.valueChanges, this.form.valueChanges)\r\n            .pipe(debounceTime(0))\r\n            .subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () { return _this.updateValue(); }));\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    FieldEditorComponent.prototype.updateField = /**\r\n     * @private\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    function (field) {\r\n        if (!isObject(field)) {\r\n            field = {};\r\n        }\r\n        this.key.setValue(isString(field.key) ? field.key : '');\r\n        this.className.setValue(isString(field.className) ? field.className : '');\r\n        this.type.setValue(isString(field.type) ? field.type : '');\r\n        this.fields = this.fieldsService.getTypeFields(this.type.value);\r\n        this.fieldForm = this.formBuilder.group({});\r\n        this.field = cloneDeep(field);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    FieldEditorComponent.prototype.updateValue = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.onChange) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var field = this.field;\r\n        field.key = this.key.value;\r\n        field.className = this.className.value;\r\n        field.type = this.type.value;\r\n        this.onChange(field);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    FieldEditorComponent.prototype.onTypeChange = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.valueChangesSubscription.unsubscribe();\r\n        this.fields = this.fieldsService.getTypeFields(this.type.value);\r\n        /** @type {?} */\r\n        var designerType = this.formlyDesignerConfig.types[this.type.value];\r\n        this.fieldArray = designerType ? designerType.fieldArray : false;\r\n        this.fieldForm = this.formBuilder.group({});\r\n        this.field = Object.assign({}, this.field);\r\n        this.subscribeValueChanges();\r\n    };\r\n    /**\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    FieldEditorComponent.prototype.onWrappersSelected = /**\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    function (field) {\r\n        this.updateField(field);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    FieldEditorComponent.prototype.validator = /**\r\n     * @private\r\n     * @param {?} control\r\n     * @return {?}\r\n     */\r\n    function (control) {\r\n        /** @type {?} */\r\n        var type = (/** @type {?} */ (control.get('type')));\r\n        /** @type {?} */\r\n        var hasType = isString(type.value) && type.value.trim().length > 0;\r\n        /** @type {?} */\r\n        var key = (/** @type {?} */ (control.get('key')));\r\n        /** @type {?} */\r\n        var result = { key: false, type: this.showType && !hasType, conflict: false };\r\n        if (hasType && (!isString(key.value) || key.value.trim().length === 0)) {\r\n            result.key = true;\r\n        }\r\n        return result.key || result.type ? result : null;\r\n    };\r\n    FieldEditorComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'formly-designer-field-editor',\r\n                    template: \"\\n        <form [formGroup]=\\\"form\\\" novalidate>\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\" [ngClass]=\\\"{solo: !hasContent && fields.length === 0}\\\">\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-danger': form.hasError('key') && (key.dirty || key.touched)}\\\">\\n                        <label class=\\\"form-control-label\\\">key</label>\\n                        <input formControlName=\\\"key\\\" class=\\\"form-control\\\">\\n                        <div *ngIf=\\\"form.hasError('key') && (key.dirty || key.touched)\\\" class=\\\"form-control-feedback\\\">\\n                            key required.\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"formlyDesignerConfig.settings.showClassName\\\" class=\\\"form-group\\\">\\n                        <label class=\\\"form-control-label\\\">className</label>\\n                        <input formControlName=\\\"className\\\" class=\\\"form-control\\\">\\n                    </div>\\n                    <div *ngIf=\\\"showType\\\" class=\\\"form-group\\\"\\n                        [ngClass]=\\\"{'has-danger': form.hasError('type') && (type.dirty || type.touched)}\\\">\\n                        <label class=\\\"form-control-label\\\">type</label>\\n                        <formly-designer-type-select formControlName=\\\"type\\\"></formly-designer-type-select>\\n                        <div *ngIf=\\\"form.hasError('type') && (type.dirty || type.touched)\\\" class=\\\"form-control-feedback\\\">\\n                            type required.\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"showWrappers\\\" class=\\\"form-group\\\">\\n                        <label class=\\\"form-control-label\\\">wrappers</label>\\n                        <formly-designer-wrappers-picker [field]=\\\"field\\\"\\n                            (selected)=\\\"onWrappersSelected($event)\\\">\\n                        </formly-designer-wrappers-picker>\\n                    </div>\\n                </div>\\n                <div #block class=\\\"card-body\\\">\\n                    <formly-form *ngIf=\\\"fields.length > 0\\\" [form]=\\\"fieldForm\\\" [fields]=\\\"fields\\\" [model]=\\\"field\\\">\\n                    </formly-form>\\n                    <ng-content></ng-content>\\n                </div>\\n            </div>\\n        </form>\\n    \",\r\n                    providers: [\r\n                        FIELD_EDITOR_CONTROL_VALUE_ACCESSOR\r\n                    ],\r\n                    styles: [\"\\n        .card-header.solo {\\n            border-bottom: 0;\\n        }\\n        .card-header.solo + .card-body {\\n            display: none;\\n        }\\n    \"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    FieldEditorComponent.ctorParameters = function () { return [\r\n        { type: FieldsService },\r\n        { type: FormBuilder },\r\n        { type: FormlyDesignerConfig }\r\n    ]; };\r\n    FieldEditorComponent.propDecorators = {\r\n        showType: [{ type: Input }],\r\n        showWrappers: [{ type: Input }],\r\n        hasContent: [{ type: Input }],\r\n        blockElRef: [{ type: ViewChild, args: ['block',] }]\r\n    };\r\n    return FieldEditorComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar FieldPickerComponent = /** @class */ (function () {\r\n    function FieldPickerComponent(formBuilder, formlyDesignerConfig) {\r\n        this.formBuilder = formBuilder;\r\n        this.formlyDesignerConfig = formlyDesignerConfig;\r\n        this.selected = new EventEmitter();\r\n        this.fieldEdit = new FormControl({});\r\n    }\r\n    Object.defineProperty(FieldPickerComponent.prototype, \"type\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.form.get('type').value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FieldPickerComponent.prototype, \"$modal\", {\r\n        get: /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return (/** @type {?} */ ($(this.modalRef.nativeElement)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FieldPickerComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.form = this.formBuilder.group({\r\n            type: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*\\S.*$/)])]\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FieldPickerComponent.prototype.add = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var type = this.type;\r\n        if (type === 'fieldGroup') {\r\n            this.fieldEdit.setValue({\r\n                fieldGroup: []\r\n            });\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var field = (/** @type {?} */ ({ type: type }));\r\n            if (this.formlyDesignerConfig.types[type].fieldArray) {\r\n                field.fieldArray = { fieldGroup: [] };\r\n            }\r\n            this.fieldEdit.setValue(field);\r\n        }\r\n        this.$modal.modal('show');\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FieldPickerComponent.prototype.onApply = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.selected.emit(this.fieldEdit.value);\r\n        this.$modal.modal('hide');\r\n    };\r\n    FieldPickerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'formly-designer-field-picker',\r\n                    template: \"\\n        <form novalidate [formGroup]=\\\"form\\\">\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"input-group\\\">\\n                    <formly-designer-type-select formControlName=\\\"type\\\">\\n                    </formly-designer-type-select>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"add()\\\">\\n                        Add\\n                    </button>\\n                </div>\\n            </div>\\n            <div #modal class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n                <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n                    <div class=\\\"modal-content\\\">\\n                        <div class=\\\"modal-header\\\">\\n                            <h5 class=\\\"modal-title\\\">Add {{ type }}</h5>\\n                            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Cancel\\\">\\n                                <span aria-hidden=\\\"true\\\">&times;</span>\\n                            </button>\\n                        </div>\\n                        <div class=\\\"modal-body\\\">\\n                            <formly-designer-field-editor #editor [formControl]=\\\"fieldEdit\\\">\\n                            </formly-designer-field-editor>\\n                        </div>\\n                        <div class=\\\"modal-footer\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onApply()\\\"\\n                                [disabled]=\\\"editor.invalid\\\">Apply</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    \",\r\n                    styles: [\"\\n        .btn:not(:disabled) {\\n            cursor: pointer;\\n        }\\n        .input-group > .btn {\\n            border-radius: 0 .25rem .25rem 0;\\n        }\\n        .input-group, .modal-header {\\n            display: flex;\\n        }\\n        .modal-header {\\n            justify-content: space-between;\\n        }\\n        formly-designer-type-select {\\n            flex-grow: 2;\\n        }\\n    \"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    FieldPickerComponent.ctorParameters = function () { return [\r\n        { type: FormBuilder },\r\n        { type: FormlyDesignerConfig }\r\n    ]; };\r\n    FieldPickerComponent.propDecorators = {\r\n        modalRef: [{ type: ViewChild, args: ['modal',] }],\r\n        selected: [{ type: Output }]\r\n    };\r\n    return FieldPickerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar TYPE_SELECT_CONTROL_VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef((/**\r\n     * @return {?}\r\n     */\r\n    function () { return TypeSelectComponent; })),\r\n    multi: true\r\n};\r\nvar TypeSelectComponent = /** @class */ (function () {\r\n    function TypeSelectComponent(formlyDesignerConfig) {\r\n        this.formlyDesignerConfig = formlyDesignerConfig;\r\n        this.formControl = new FormControl();\r\n        this.onChange = (/**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) { });\r\n        this.onTouched = (/**\r\n         * @return {?}\r\n         */\r\n        function () { });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    TypeSelectComponent.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        timer().subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.types = Object.keys(_this.formlyDesignerConfig.types);\r\n            if (_this.types.length > 0) {\r\n                _this.formControl.setValue(_this.types[0]);\r\n            }\r\n            _this.types.push('fieldGroup');\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    TypeSelectComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.valueChangesSubscription = this.formControl.valueChanges.subscribe((/**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            if (_this.onChange) {\r\n                _this.onChange(value);\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    TypeSelectComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.valueChangesSubscription.unsubscribe();\r\n    };\r\n    /**\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    TypeSelectComponent.prototype.writeValue = /**\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    function (obj) {\r\n        this.formControl.setValue(obj);\r\n    };\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    TypeSelectComponent.prototype.registerOnChange = /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    function (fn) {\r\n        this.onChange = fn;\r\n    };\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    TypeSelectComponent.prototype.registerOnTouched = /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    function (fn) {\r\n        this.onTouched = fn;\r\n    };\r\n    /**\r\n     * @param {?} isDisabled\r\n     * @return {?}\r\n     */\r\n    TypeSelectComponent.prototype.setDisabledState = /**\r\n     * @param {?} isDisabled\r\n     * @return {?}\r\n     */\r\n    function (isDisabled) {\r\n        if (isDisabled) {\r\n            this.formControl.disable();\r\n        }\r\n        else {\r\n            this.formControl.enable();\r\n        }\r\n    };\r\n    TypeSelectComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'formly-designer-type-select',\r\n                    template: \"\\n        <select [formControl]=\\\"formControl\\\" class=\\\"custom-select\\\">\\n            <option *ngFor=\\\"let type of types\\\" [ngValue]=\\\"type\\\">{{ type }}</option>\\n        </select>\\n    \",\r\n                    providers: [TYPE_SELECT_CONTROL_VALUE_ACCESSOR],\r\n                    styles: [\"\\n        select {\\n            width: 100%;\\n        }\\n    \"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    TypeSelectComponent.ctorParameters = function () { return [\r\n        { type: FormlyDesignerConfig }\r\n    ]; };\r\n    return TypeSelectComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar WRAPPER_EDITOR_CONTROL_VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef((/**\r\n     * @return {?}\r\n     */\r\n    function () { return WrapperEditorComponent; })),\r\n    multi: true\r\n};\r\nvar WrapperEditorComponent = /** @class */ (function () {\r\n    function WrapperEditorComponent(fieldsService, formBuilder) {\r\n        this.fieldsService = fieldsService;\r\n        this.formBuilder = formBuilder;\r\n        this.subscriptions = [];\r\n        this.fields = [];\r\n        this.onChange = (/**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) { });\r\n        this.onTouched = (/**\r\n         * @return {?}\r\n         */\r\n        function () { });\r\n        this.fieldForm = formBuilder.group({});\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WrapperEditorComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.subscriptions.push(this.fieldForm.statusChanges\r\n            .pipe(switchMap((/**\r\n         * @return {?}\r\n         */\r\n        function () { return timer(); })))\r\n            .subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () { return _this.invalid = _this.fieldForm.invalid; })));\r\n        this.subscribeValueChanges();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WrapperEditorComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.valueChangesSubscription.unsubscribe();\r\n        this.subscriptions.splice(0).forEach((/**\r\n         * @param {?} subscription\r\n         * @return {?}\r\n         */\r\n        function (subscription) { return subscription.unsubscribe(); }));\r\n    };\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    WrapperEditorComponent.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        if (changes.wrapper) {\r\n            if (this.valueChangesSubscription) {\r\n                this.valueChangesSubscription.unsubscribe();\r\n            }\r\n            this.fields = this.fieldsService.getWrapperFields(this.wrapper);\r\n            this.fieldForm = this.formBuilder.group({});\r\n            this.field = Object.assign({}, this.field);\r\n            if (this.valueChangesSubscription) {\r\n                this.subscribeValueChanges();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    WrapperEditorComponent.prototype.writeValue = /**\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    function (obj) {\r\n        this.valueChangesSubscription.unsubscribe();\r\n        if (!isObject(obj)) {\r\n            obj = {};\r\n        }\r\n        this.fields = this.fieldsService.getWrapperFields(this.wrapper);\r\n        this.fieldForm = this.formBuilder.group({});\r\n        this.field = cloneDeep(obj);\r\n        this.subscribeValueChanges();\r\n    };\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    WrapperEditorComponent.prototype.registerOnChange = /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    function (fn) {\r\n        this.onChange = fn;\r\n    };\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    WrapperEditorComponent.prototype.registerOnTouched = /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    function (fn) {\r\n        this.onTouched = fn;\r\n    };\r\n    /**\r\n     * @param {?} isDisabled\r\n     * @return {?}\r\n     */\r\n    WrapperEditorComponent.prototype.setDisabledState = /**\r\n     * @param {?} isDisabled\r\n     * @return {?}\r\n     */\r\n    function (isDisabled) {\r\n        if (isDisabled) {\r\n            this.fieldForm.disable();\r\n        }\r\n        else {\r\n            this.fieldForm.enable();\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    WrapperEditorComponent.prototype.subscribeValueChanges = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.valueChangesSubscription = this.fieldForm.valueChanges\r\n            .pipe(debounceTime(0))\r\n            .subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () { return _this.updateValue(); }));\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    WrapperEditorComponent.prototype.updateValue = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.onChange) {\r\n            return;\r\n        }\r\n        this.onChange(this.field);\r\n    };\r\n    WrapperEditorComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'formly-designer-wrapper-editor',\r\n                    template: \"\\n        <form [formGroup]=\\\"fieldForm\\\" novalidate>\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <formly-form [form]=\\\"fieldForm\\\" [fields]=\\\"fields\\\" [model]=\\\"field\\\">\\n                    </formly-form>\\n                    <ng-content></ng-content>\\n                </div>\\n            </div>\\n        </form>\\n    \",\r\n                    providers: [\r\n                        WRAPPER_EDITOR_CONTROL_VALUE_ACCESSOR\r\n                    ]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    WrapperEditorComponent.ctorParameters = function () { return [\r\n        { type: FieldsService },\r\n        { type: FormBuilder }\r\n    ]; };\r\n    WrapperEditorComponent.propDecorators = {\r\n        wrapper: [{ type: Input }]\r\n    };\r\n    return WrapperEditorComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar WRAPPER_SELECT_CONTROL_VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef((/**\r\n     * @return {?}\r\n     */\r\n    function () { return WrapperSelectComponent; })),\r\n    multi: true\r\n};\r\nvar WrapperSelectComponent = /** @class */ (function () {\r\n    function WrapperSelectComponent(formlyDesignerConfig) {\r\n        this.formlyDesignerConfig = formlyDesignerConfig;\r\n        this.formControl = new FormControl();\r\n        this.onChange = (/**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) { });\r\n        this.onTouched = (/**\r\n         * @return {?}\r\n         */\r\n        function () { });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WrapperSelectComponent.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        timer().subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.wrappers = Object.keys(_this.formlyDesignerConfig.wrappers);\r\n            if (_this.wrappers.length > 0) {\r\n                _this.formControl.setValue(_this.wrappers[0]);\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WrapperSelectComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.valueChangesSubscription = this.formControl.valueChanges.subscribe((/**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            if (_this.onChange) {\r\n                _this.onChange(value);\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WrapperSelectComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.valueChangesSubscription.unsubscribe();\r\n    };\r\n    /**\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    WrapperSelectComponent.prototype.writeValue = /**\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    function (obj) {\r\n        this.formControl.setValue(obj);\r\n    };\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    WrapperSelectComponent.prototype.registerOnChange = /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    function (fn) {\r\n        this.onChange = fn;\r\n    };\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    WrapperSelectComponent.prototype.registerOnTouched = /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    function (fn) {\r\n        this.onTouched = fn;\r\n    };\r\n    /**\r\n     * @param {?} isDisabled\r\n     * @return {?}\r\n     */\r\n    WrapperSelectComponent.prototype.setDisabledState = /**\r\n     * @param {?} isDisabled\r\n     * @return {?}\r\n     */\r\n    function (isDisabled) {\r\n        if (isDisabled) {\r\n            this.formControl.disable();\r\n        }\r\n        else {\r\n            this.formControl.enable();\r\n        }\r\n    };\r\n    WrapperSelectComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'formly-designer-wrapper-select',\r\n                    template: \"\\n        <select [formControl]=\\\"formControl\\\" class=\\\"custom-select\\\">\\n            <option *ngFor=\\\"let wrapper of wrappers\\\" [ngValue]=\\\"wrapper\\\">{{ wrapper }}</option>\\n        </select>\\n    \",\r\n                    providers: [WRAPPER_SELECT_CONTROL_VALUE_ACCESSOR],\r\n                    styles: [\"\\n        select {\\n            width: 100%;\\n        }\\n    \"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    WrapperSelectComponent.ctorParameters = function () { return [\r\n        { type: FormlyDesignerConfig }\r\n    ]; };\r\n    return WrapperSelectComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar WrapperPickerComponent = /** @class */ (function () {\r\n    function WrapperPickerComponent(formBuilder, formlyDesignerConfig, formlyDesignerService) {\r\n        this.formBuilder = formBuilder;\r\n        this.formlyDesignerConfig = formlyDesignerConfig;\r\n        this.formlyDesignerService = formlyDesignerService;\r\n        this.selected = new EventEmitter();\r\n        this.fieldEdit = new FormControl({});\r\n    }\r\n    Object.defineProperty(WrapperPickerComponent.prototype, \"wrapper\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.form.get('wrapper').value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WrapperPickerComponent.prototype, \"$modal\", {\r\n        get: /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return $(this.modalRef.nativeElement);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WrapperPickerComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.form = this.formBuilder.group({\r\n            wrapper: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*\\S.*$/)])]\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WrapperPickerComponent.prototype.add = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (isObject(this.field)) {\r\n            /** @type {?} */\r\n            var field = cloneDeep(this.field);\r\n            if (isArray(field.wrappers) && field.wrappers.length > 0) {\r\n                field.wrappers.splice(field.wrappers.length - 1, 0, this.wrapper);\r\n            }\r\n            else {\r\n                field.wrappers = [this.wrapper];\r\n            }\r\n            this.fieldEdit.setValue(field);\r\n            /** @type {?} */\r\n            var fields = this.formlyDesignerConfig.wrappers[this.wrapper].fields;\r\n            if (isArray(fields) && fields.length > 0) {\r\n                this.$modal.modal('show');\r\n            }\r\n            else {\r\n                this.onApply();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WrapperPickerComponent.prototype.onApply = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.field = this.formlyDesignerService.convertField(this.fieldEdit.value);\r\n        this.selected.emit(this.fieldEdit.value);\r\n        this.$modal.modal('hide');\r\n    };\r\n    WrapperPickerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'formly-designer-wrapper-picker',\r\n                    template: \"\\n        <form novalidate [formGroup]=\\\"form\\\">\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"input-group\\\">\\n                    <formly-designer-wrapper-select formControlName=\\\"wrapper\\\">\\n                    </formly-designer-wrapper-select>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"add()\\\">\\n                        Add\\n                    </button>\\n                </div>\\n            </div>\\n            <div #modal class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n                <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n                    <div class=\\\"modal-content\\\">\\n                        <div class=\\\"modal-header\\\">\\n                            <h5 class=\\\"modal-title\\\">Add {{ wrapper }}</h5>\\n                            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Cancel\\\">\\n                                <span aria-hidden=\\\"true\\\">&times;</span>\\n                            </button>\\n                        </div>\\n                        <div class=\\\"modal-body\\\">\\n                            <formly-designer-wrapper-editor #editor [formControl]=\\\"fieldEdit\\\" [wrapper]=\\\"wrapper\\\">\\n                            </formly-designer-wrapper-editor>\\n                        </div>\\n                        <div class=\\\"modal-footer\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onApply()\\\"\\n                                [disabled]=\\\"editor.invalid\\\">Apply</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    \",\r\n                    styles: [\"\\n        :host {\\n            width: inherit;\\n        }\\n        .btn:not(:disabled) {\\n            cursor: pointer;\\n        }\\n        .input-group > .btn {\\n            border-radius: 0 .25rem .25rem 0;\\n        }\\n        .input-group, .modal-header {\\n            display: flex;\\n        }\\n        .modal-header {\\n            justify-content: space-between;\\n        }\\n        formly-designer-wrapper-select {\\n            flex-grow: 2;\\n        }\\n    \"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    WrapperPickerComponent.ctorParameters = function () { return [\r\n        { type: FormBuilder },\r\n        { type: FormlyDesignerConfig },\r\n        { type: FormlyDesignerService }\r\n    ]; };\r\n    WrapperPickerComponent.propDecorators = {\r\n        modalRef: [{ type: ViewChild, args: ['modal',] }],\r\n        field: [{ type: Input }],\r\n        selected: [{ type: Output }]\r\n    };\r\n    return WrapperPickerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar WrappersPickerComponent = /** @class */ (function () {\r\n    function WrappersPickerComponent(formlyDesignerConfig, formlyDesignerService) {\r\n        this.formlyDesignerConfig = formlyDesignerConfig;\r\n        this.formlyDesignerService = formlyDesignerService;\r\n        this.selected = new EventEmitter();\r\n        this.fieldEdit = new FormControl({});\r\n        this.wrappers = [];\r\n    }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    WrappersPickerComponent.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        if (changes.field) {\r\n            this.wrappers = this.formlyDesignerService.getWrappers(changes.field.currentValue);\r\n        }\r\n    };\r\n    Object.defineProperty(WrappersPickerComponent.prototype, \"$modal\", {\r\n        get: /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return (/** @type {?} */ ($(this.modalRef.nativeElement)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    WrappersPickerComponent.prototype.onWrapperSelected = /**\r\n     * @param {?} field\r\n     * @return {?}\r\n     */\r\n    function (field) {\r\n        this.selected.emit(field);\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    WrappersPickerComponent.prototype.edit = /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function (index) {\r\n        this.wrapper = this.wrappers[index];\r\n        if (isObject(this.field)) {\r\n            /** @type {?} */\r\n            var field = cloneDeep(this.field);\r\n            if (isArray(field.wrappers)) {\r\n                this.fieldEdit.setValue(field);\r\n                /** @type {?} */\r\n                var fields = this.formlyDesignerConfig.wrappers[this.wrapper].fields;\r\n                if (isArray(fields) && fields.length > 0) {\r\n                    this.$modal.modal('show');\r\n                }\r\n                else {\r\n                    this.onApply();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    WrappersPickerComponent.prototype.remove = /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function (index) {\r\n        /** @type {?} */\r\n        var fieldWrappersIndex = this.field.wrappers.indexOf(this.wrappers[index]);\r\n        if (fieldWrappersIndex < 0) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var field = cloneDeep(this.field);\r\n        field.wrappers.splice(fieldWrappersIndex, 1);\r\n        this.field = this.formlyDesignerService.convertField(field);\r\n        this.selected.emit(this.field);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WrappersPickerComponent.prototype.onApply = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.field = this.formlyDesignerService.convertField(this.fieldEdit.value);\r\n        this.selected.emit(this.field);\r\n        this.$modal.modal('hide');\r\n    };\r\n    WrappersPickerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'formly-designer-wrappers-picker',\r\n                    template: \"\\n        <div class=\\\"form-group\\\">\\n            <div class=\\\"input-group\\\">\\n                <formly-designer-wrapper-picker [field]=\\\"field\\\" (selected)=\\\"onWrapperSelected($event)\\\">\\n                </formly-designer-wrapper-picker>\\n            </div>\\n            <div *ngFor=\\\"let wrapper of wrappers; let i = index\\\" class=\\\"badge badge-default noselect\\\" (click)=\\\"edit(i)\\\">\\n                {{ wrapper }}&nbsp;&nbsp;<i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\" (click)=\\\"remove(i)\\\"></i>\\n            </div>\\n        </div>\\n        <div #modal class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n            <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n                <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                        <h5 class=\\\"modal-title\\\">Edit {{ wrapper }}</h5>\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Cancel\\\">\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\n                        </button>\\n                    </div>\\n                    <div class=\\\"modal-body\\\">\\n                        <formly-designer-wrapper-editor #editor [formControl]=\\\"fieldEdit\\\" [wrapper]=\\\"wrapper\\\">\\n                        </formly-designer-wrapper-editor>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onApply()\\\"\\n                            [disabled]=\\\"editor.invalid\\\">Apply</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    \",\r\n                    styles: [\"\\n        .badge {\\n            margin-right: .25em;\\n        }\\n        .badge {\\n            cursor: pointer;\\n        }\\n        .noselect {\\n            -webkit-user-select: none;\\n            -khtml-user-select: none;\\n            -moz-user-select: none;\\n            -ms-user-select: none;\\n            user-select: none;\\n        }\\n    \"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    WrappersPickerComponent.ctorParameters = function () { return [\r\n        { type: FormlyDesignerConfig },\r\n        { type: FormlyDesignerService }\r\n    ]; };\r\n    WrappersPickerComponent.propDecorators = {\r\n        modalRef: [{ type: ViewChild, args: ['modal',] }],\r\n        field: [{ type: Input }],\r\n        selected: [{ type: Output }]\r\n    };\r\n    return WrappersPickerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @template T\r\n * @param {?} value\r\n * @return {?}\r\n */\r\nfunction decycle(value) {\r\n    if (value == null) {\r\n        return value;\r\n    }\r\n    /** @type {?} */\r\n    var nextId = 1;\r\n    /** @type {?} */\r\n    var objects = new Map();\r\n    return traverse(cloneDeep(value), (/**\r\n     * @param {?} key\r\n     * @param {?} v\r\n     * @return {?}\r\n     */\r\n    function (key, v) {\r\n        if (isObject(v)) {\r\n            if (objects.has(v)) {\r\n                /** @type {?} */\r\n                var id = objects.get(v);\r\n                if (!id) {\r\n                    v.$id = id = nextId++;\r\n                    objects.set(v, id);\r\n                }\r\n                return { $ref: id };\r\n            }\r\n            else {\r\n                objects.set(v, 0);\r\n            }\r\n        }\r\n    }));\r\n}\r\n/**\r\n * @template T\r\n * @param {?} obj\r\n * @param {?} replace\r\n * @return {?}\r\n */\r\nfunction traverse(obj, replace) {\r\n    if (isArray(obj)) {\r\n        for (var i = 0; i < ((/** @type {?} */ (obj))).length; i++) {\r\n            traverseValue.bind(obj, i, obj[i], replace)();\r\n        }\r\n    }\r\n    else if (isObject(obj)) {\r\n        for (var key in obj) {\r\n            if (obj.hasOwnProperty(key)) {\r\n                traverseValue.bind(obj, key, obj[key], replace)();\r\n            }\r\n        }\r\n    }\r\n    return obj;\r\n}\r\n/**\r\n * @param {?} key\r\n * @param {?} value\r\n * @param {?} replace\r\n * @return {?}\r\n */\r\nfunction traverseValue(key, value, replace) {\r\n    /** @type {?} */\r\n    var replacement = replace(key, value);\r\n    if (replacement === undefined) {\r\n        traverse(value, replace);\r\n    }\r\n    else {\r\n        this[key] = replacement;\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar DecyclePipe = /** @class */ (function () {\r\n    function DecyclePipe() {\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    DecyclePipe.prototype.transform = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        return decycle(value);\r\n    };\r\n    DecyclePipe.decorators = [\r\n        { type: Pipe, args: [{ name: 'decycle' },] }\r\n    ];\r\n    return DecyclePipe;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar FormlyDesignerModule = /** @class */ (function () {\r\n    function FormlyDesignerModule(formlyConfig) {\r\n        formlyConfig.addConfig(config);\r\n    }\r\n    /**\r\n     * @param {?=} designerConfig\r\n     * @return {?}\r\n     */\r\n    FormlyDesignerModule.forRoot = /**\r\n     * @param {?=} designerConfig\r\n     * @return {?}\r\n     */\r\n    function (designerConfig) {\r\n        if (designerConfig === void 0) { designerConfig = {}; }\r\n        return {\r\n            ngModule: FormlyDesignerModule,\r\n            providers: [\r\n                { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: [fieldComponents, wrapperComponents], multi: true },\r\n                { provide: FORMLY_DESIGNER_CONFIG_TOKEN, useValue: designerConfig, multi: true }\r\n            ]\r\n        };\r\n    };\r\n    FormlyDesignerModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [\r\n                        FieldEditorComponent,\r\n                        FieldPickerComponent,\r\n                        FormlyDesignerComponent,\r\n                        TypeSelectComponent,\r\n                        WrapperEditorComponent,\r\n                        WrapperSelectComponent,\r\n                        WrapperPickerComponent,\r\n                        WrappersPickerComponent,\r\n                        DecyclePipe,\r\n                        fieldComponents,\r\n                        wrapperComponents\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                        FormsModule,\r\n                        ReactiveFormsModule,\r\n                        FormlyModule.forChild()\r\n                    ],\r\n                    exports: [\r\n                        FormlyDesignerComponent\r\n                    ],\r\n                    providers: [\r\n                        FormlyDesignerConfig,\r\n                        FieldsService\r\n                    ],\r\n                    entryComponents: [FormlyForm]\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    FormlyDesignerModule.ctorParameters = function () { return [\r\n        { type: FormlyConfig }\r\n    ]; };\r\n    return FormlyDesignerModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { fieldComponents, wrapperComponents, config, FieldsService, FORMLY_DESIGNER_CONFIG_TOKEN, FormlyDesignerConfig, FormlyDesignerService, FormlyDesignerComponent, FormlyDesignerModule, decycle, FieldEditorComponent as ɵe, FieldPickerComponent as ɵf, TypeSelectComponent as ɵg, WrapperEditorComponent as ɵh, WrapperPickerComponent as ɵj, WrapperSelectComponent as ɵi, WrappersPickerComponent as ɵk, DecyclePipe as ɵl, TemplateDesigner as ɵd, FormlyDesignerWrapperComponent as ɵa, FormlyDesignerFieldWrapperComponent as ɵb, FormlyDesignerFieldGroupWrapperComponent as ɵc };\n\n//# sourceMappingURL=ngx-formly-designer.js.map","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row\\\" style=\\\"margin:2em\\\">\\r\\n    <div class=\\\"col-sm-12 col-md-8 col-lg-6\\\">\\r\\n        <formly-designer [model]=\\\"model\\\" [fields]=\\\"fields\\\" class=\\\"container-fluid\\\"\\r\\n            (modelChange)=\\\"onModelChange($event)\\\" (fieldsChange)=\\\"onFieldsChange($event)\\\">\\r\\n        </formly-designer>\\r\\n        <div>\\r\\n            Fields:\\r\\n            <pre>{{ designerFields | json }}</pre>\\r\\n\\r\\n            Model:\\r\\n            <pre>{{ designerModel | json }}</pre>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { FormlyFieldConfig } from '@ngx-formly/core';\r\n\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    fields: FormlyFieldConfig[] = [];\r\n    model: any = {};\r\n    designerFields: FormlyFieldConfig[] = [];\r\n    designerModel: any;\r\n\r\n    onFieldsChange(fields: FormlyFieldConfig[]): void {\r\n        this.designerFields = fields;\r\n    }\r\n\r\n    onModelChange(model: any): void {\r\n        this.designerModel = model;\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { FormlyModule } from '@ngx-formly/core';\r\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\r\nimport { FormlyTabsModule } from 'ngx-formly-tabs';\r\n\r\nimport { FormlyDesignerModule } from 'ngx-formly-designer';\r\n\r\nimport { config, fieldComponents } from './config';\r\nimport { designerConfig } from './designer-config';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ExpanderComponent } from './components/expander.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        ExpanderComponent,\r\n\r\n        fieldComponents\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n\r\n        FormlyTabsModule,\r\n        FormlyBootstrapModule,\r\n        FormlyModule.forRoot(config),\r\n\r\n        FormlyDesignerModule.forRoot(designerConfig)\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'expander',\r\n    template: `\r\n        <div class=\"header\">\r\n            <span class=\"toggle noselect\" (click)=\"toggle()\" [attr.title]=\"title\" (dblclick)=\"$event.stopPropagation()\">\r\n                <i [ngClass]=\"iconClass\"></i>&nbsp;&nbsp;<span class=\"h4\">{{heading}}</span>\r\n            </span>\r\n        </div>\r\n        <div class=\"content\" [class.expanded]=\"showContent\">\r\n            <ng-content></ng-content>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        :host {\r\n            margin-top: 1em;\r\n        }\r\n        .toggle {\r\n            cursor: pointer;\r\n            cursor: hand;\r\n        }\r\n        .noselect {\r\n            -webkit-user-select: none;\r\n            -khtml-user-select: none;\r\n            -moz-user-select: none;\r\n            -ms-user-select: none;\r\n            user-select: none;\r\n        }\r\n        .content {\r\n            display: none;\r\n            padding-bottom: 1em;\r\n        }\r\n        .content.expanded {\r\n            display: block;\r\n        }\r\n    `]\r\n})\r\nexport class ExpanderComponent implements OnChanges, OnInit {\r\n    private static expandedState = {\r\n        title: 'Select to collapse',\r\n        iconClass: ['fa', 'fa-chevron-up']\r\n    };\r\n\r\n    private static collapsedState = {\r\n        title: 'Select to expand',\r\n        iconClass: ['fa', 'fa-chevron-down']\r\n    };\r\n\r\n    @Input() heading: string;\r\n    @Input() expanded: boolean;\r\n\r\n    title: string;\r\n    iconClass: any;\r\n\r\n    private _showContent: boolean;\r\n\r\n    get showContent(): boolean {\r\n        return this._showContent;\r\n    }\r\n\r\n    set showContent(value: boolean) {\r\n        this._showContent = !!value;\r\n        this.onShowContentChanged();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.showContent = this.expanded;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.expanded) {\r\n            this.showContent = this.expanded;\r\n        }\r\n    }\r\n\r\n    toggle(): void {\r\n        this.showContent = !this.showContent;\r\n    }\r\n\r\n    private onShowContentChanged(): void {\r\n        this.title = this.showContent ? ExpanderComponent.expandedState.title : ExpanderComponent.collapsedState.title;\r\n        this.iconClass = this.showContent ? ExpanderComponent.expandedState.iconClass : ExpanderComponent.collapsedState.iconClass;\r\n    }\r\n}\r\n","import { ConfigOption } from '@ngx-formly/core';\r\nimport { FormlyFieldMultiCheckbox, FormlyFieldSelect } from '@ngx-formly/bootstrap';\r\n\r\nimport { FormlyFieldCustomInputComponent } from './types/custom-input';\r\nimport { FormlyFieldRepeatSectionComponent } from './types/repeat-section';\r\nimport { FormlyWrapperExpanderComponent } from './wrappers/expander';\r\n\r\nexport const fieldComponents = [\r\n    FormlyFieldCustomInputComponent,\r\n    FormlyFieldRepeatSectionComponent,\r\n    FormlyWrapperExpanderComponent\r\n];\r\n\r\nexport const config: ConfigOption = {\r\n    types: [\r\n        { name: 'extended-input', extends: 'input' },\r\n        { name: 'customInput', component: FormlyFieldCustomInputComponent },\r\n        { name: 'repeatSection', component: FormlyFieldRepeatSectionComponent },\r\n        { name: 'multicheckbox', component: FormlyFieldMultiCheckbox,\r\n            defaultOptions: {\r\n                templateOptions: {\r\n                    options: []\r\n                }\r\n            }\r\n        },\r\n        { name: 'select', component: FormlyFieldSelect,\r\n            defaultOptions: {\r\n                templateOptions: {\r\n                    options: []\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    wrappers: [\r\n        { name: 'expander', component: FormlyWrapperExpanderComponent }\r\n    ]\r\n};\r\n","import { DesignerConfigOption } from 'ngx-formly-designer';\r\n\r\nconst reserved = new Set(['label', 'fieldset', 'description', 'validation-message']);\r\n\r\nexport function formlyBootstrapfilterWrapper(wrapper: string) {\r\n    return reserved.has(wrapper);\r\n}\r\n\r\nexport const designerConfig: DesignerConfigOption = {\r\n    settings: {\r\n        filterWrapper: formlyBootstrapfilterWrapper\r\n    },\r\n    types: [\r\n        {\r\n            name: 'input',\r\n            fields: [\r\n                {\r\n                    key: 'templateOptions.label',\r\n                    type: 'input',\r\n                    templateOptions: {\r\n                        label: 'label'\r\n                    }\r\n                },\r\n                {\r\n                    key: 'templateOptions.type',\r\n                    type: 'select',\r\n                    templateOptions: {\r\n                        label: 'type',\r\n                        options: [\r\n                            {\r\n                                label: 'text',\r\n                                value: 'text'\r\n                            },\r\n                            {\r\n                                label: 'number',\r\n                                value: 'number'\r\n                            }\r\n                        ]\r\n                    },\r\n                    defaultValue: 'text'\r\n                },\r\n                {\r\n                    key: 'templateOptions.placeholder',\r\n                    type: 'input',\r\n                    templateOptions: {\r\n                        label: 'placeholder'\r\n                    }\r\n                },\r\n                {\r\n                    key: 'defaultValue',\r\n                    type: 'input',\r\n                    templateOptions: {\r\n                        label: 'default value'\r\n                    }\r\n                },\r\n                {\r\n                    key: 'templateOptions.description',\r\n                    type: 'input',\r\n                    templateOptions: {\r\n                        label: 'description'\r\n                    }\r\n                },\r\n                {\r\n                    key: 'templateOptions.pattern',\r\n                    type: 'input',\r\n                    templateOptions: {\r\n                        label: 'pattern'\r\n                    }\r\n                },\r\n                {\r\n                    key: 'templateOptions.required',\r\n                    type: 'checkbox',\r\n                    templateOptions: {\r\n                        label: 'required'\r\n                    },\r\n                    defaultValue: false\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'checkbox',\r\n            fields: [\r\n                {\r\n                    key: 'templateOptions.label',\r\n                    type: 'input',\r\n                    templateOptions: {\r\n                        label: 'label'\r\n                    }\r\n                },\r\n                {\r\n                    key: 'defaultValue',\r\n                    type: 'checkbox',\r\n                    templateOptions: {\r\n                        label: 'default value'\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'select',\r\n            fields: [\r\n                {\r\n                    key: 'templateOptions.label',\r\n                    type: 'input',\r\n                    templateOptions: {\r\n                        label: 'label'\r\n                    }\r\n                },\r\n                {\r\n                    template: '<div class=\"mb-3\">options</div>'\r\n                },\r\n                {\r\n                    key: 'templateOptions.options',\r\n                    type: 'repeatSection',\r\n                    templateOptions: {\r\n                        canAdd: true,\r\n                        canRemove: true\r\n                    },\r\n                    fieldArray: {\r\n                        className: 'ml-3',\r\n                        fieldGroup: [\r\n                            {\r\n                                key: 'label',\r\n                                type: 'input',\r\n                                templateOptions: {\r\n                                    label: 'label'\r\n                                }\r\n                            },\r\n                            {\r\n                                key: 'value',\r\n                                type: 'input',\r\n                                templateOptions: {\r\n                                    label: 'value'\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    template: '<div class=\"mb-3\"></div>'\r\n                },\r\n                {\r\n                    key: 'templateOptions.required',\r\n                    type: 'checkbox',\r\n                    templateOptions: {\r\n                        label: 'required'\r\n                    },\r\n                    defaultValue: false\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'multicheckbox',\r\n            fields: [\r\n                {\r\n                    key: 'templateOptions.label',\r\n                    type: 'input',\r\n                    templateOptions: {\r\n                        label: 'label'\r\n                    }\r\n                },\r\n                {\r\n                    key: 'templateOptions.options',\r\n                    type: 'repeatSection',\r\n                    templateOptions: {\r\n                        canAdd: true,\r\n                        canRemove: true\r\n                    },\r\n                    fieldArray: {\r\n                        className: 'ml-3',\r\n                        fieldGroup: [\r\n                            {\r\n                                key: 'value',\r\n                                type: 'input',\r\n                                templateOptions: {\r\n                                    label: 'label'\r\n                                }\r\n                            },\r\n                            {\r\n                                key: 'key',\r\n                                type: 'input',\r\n                                templateOptions: {\r\n                                    label: 'value'\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'repeatSection',\r\n            fieldArray: true\r\n        }\r\n    ],\r\n    wrappers: [\r\n        {\r\n            name: 'expander',\r\n            fields: [\r\n                {\r\n                    key: 'templateOptions.label',\r\n                    type: 'input',\r\n                    templateOptions: {\r\n                        label: 'label'\r\n                    }\r\n                },\r\n                {\r\n                    key: 'templateOptions.expanded',\r\n                    type: 'checkbox',\r\n                    templateOptions: {\r\n                        label: 'expanded'\r\n                    },\r\n                    defaultValue: true\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'tabset',\r\n            fields: []\r\n        },\r\n        {\r\n            name: 'tab',\r\n            fields: [\r\n                {\r\n                    key: 'templateOptions.tabTitle',\r\n                    type: 'input',\r\n                    templateOptions: {\r\n                        label: 'tabTitle'\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\n","import { Component } from '@angular/core';\r\nimport { FieldType } from '@ngx-formly/core';\r\n\r\n@Component({\r\n    selector: 'custom-formly-field-input',\r\n    template: `\r\n        <input [type]=\"type\" [formControl]=\"formControl\" class=\"form-control\"\r\n            [formlyAttributes]=\"field\" [ngClass]=\"{'form-control-danger': formControl.valid}\">\r\n    `,\r\n})\r\nexport class FormlyFieldCustomInputComponent extends FieldType {\r\n    get type(): string {\r\n        return this.to.type || 'text';\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormGroup } from '@angular/forms';\r\nimport { FieldType, FormlyFieldConfig } from '@ngx-formly/core';\r\n\r\nimport { cloneDeep, isArray, isFunction } from 'lodash-es';\r\n\r\n@Component({\r\n    selector: 'formly-field-repeat-section',\r\n    template: `\r\n        <div class=\"header\" *ngIf=\"canAdd()\">\r\n            <button type=\"button\" class=\"add-btn btn btn-sm btn-primary\" (click)=\"add()\">\r\n                <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n            </button>\r\n        </div>\r\n        <div class=\"body\" [ngClass]=\"{interactive: canAdd()}\">\r\n            <div class=\"section flex-container\" *ngFor=\"let control of formArray.controls; index as i\"\r\n                [ngClass]=\"{interactive: canRemove(i)}\">\r\n                <button type=\"button\" class=\"remove-btn btn btn-sm btn-danger\" (click)=\"remove(i)\" *ngIf=\"canRemove(i)\">\r\n                    <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                <formly-form [model]=\"model[i]\" [fields]=\"fields(i)\" [options]=\"newOptions\"\r\n                    [form]=\"formArray.at(i)\" [ngClass]=\"field.fieldArray.className\">\r\n                </formly-form>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .header {\r\n            margin-top: .5em;\r\n        }\r\n        .flex-container.interactive {\r\n            display: flex;\r\n            align-items: flex-start;\r\n            flex-wrap: nowrap;\r\n        }\r\n        formly-form {\r\n            flex-grow: 1;\r\n        }\r\n        .body.interactive {\r\n            margin-top: 0.5em;\r\n        }\r\n        .section {\r\n            margin-bottom: .25em;\r\n        }\r\n        .section>button {\r\n            margin-top: .25em;\r\n        }\r\n    `]\r\n})\r\nexport class FormlyFieldRepeatSectionComponent extends FieldType implements OnInit {\r\n    private _fields: FormlyFieldConfig[][] = [];\r\n\r\n    static createControl(model: any, field: FormlyFieldConfig): AbstractControl {\r\n        return new FormArray(\r\n            [],\r\n            field.validators ? field.validators.validation : undefined,\r\n            field.asyncValidators ? field.asyncValidators.validation : undefined\r\n        );\r\n    }\r\n\r\n    get formArray(): FormArray {\r\n        return this.formControl as FormArray;\r\n    }\r\n\r\n    get newOptions(): any {\r\n        return Object.assign({}, this.options);\r\n    }\r\n\r\n    fields(index): FormlyFieldConfig[] {\r\n        if (this._fields[index]) {\r\n            return this._fields[index];\r\n        }\r\n\r\n        this._fields.splice(index, 0, cloneDeep(this.field.fieldArray.fieldGroup));\r\n\r\n        return this._fields[index];\r\n    }\r\n\r\n    canAdd(): boolean {\r\n        const canAdd = this.to['canAdd'] as Function | boolean;\r\n        return canAdd === undefined || (isFunction(canAdd) ? (canAdd as Function).apply(this) : canAdd) === true;\r\n    }\r\n\r\n    canRemove(index: number): boolean {\r\n        const canRemove = this.to['canRemove'] as Function | boolean;\r\n        if (canRemove === false) {\r\n            return false;\r\n        }\r\n\r\n        const value = this.model[index];\r\n        if (value && value.canRemove === false) {\r\n            return false;\r\n        }\r\n\r\n        return !isFunction(canRemove) || (canRemove as Function).apply(this, [index]) === true;\r\n    }\r\n\r\n    add(): void {\r\n        const formGroup = new FormGroup({});\r\n        const added = {};\r\n        const onSectionAdded = this.to['onSectionAdded'] as Function;\r\n        if (isFunction(onSectionAdded)) {\r\n            onSectionAdded.apply(this, [added]);\r\n        }\r\n        this.model.push(added);\r\n        this._fields.push(cloneDeep(this.field.fieldArray.fieldGroup));\r\n        (<FormArray>this.formControl).push(formGroup);\r\n    }\r\n\r\n    remove(index: number): void {\r\n        (<FormArray>this.formControl).removeAt(index);\r\n        const removed = this.model.splice(index, 1);\r\n        const onSectionRemoved = this.to['onSectionRemoved'];\r\n        if (isFunction(onSectionRemoved)) {\r\n            onSectionRemoved.apply(this, [removed, index]);\r\n        }\r\n        this._fields.splice(index, 1);\r\n    }\r\n}\r\n","import { Component, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { FieldWrapper } from '@ngx-formly/core';\r\n\r\n\r\n@Component({\r\n    selector: 'formly-wrapper-expander',\r\n    template: `\r\n        <expander [heading]=\"label\" [expanded]=\"expanded\">\r\n            <ng-template #fieldComponent></ng-template>\r\n        </expander>\r\n    `\r\n})\r\nexport class FormlyWrapperExpanderComponent extends FieldWrapper {\r\n    @ViewChild('fieldComponent', {read: ViewContainerRef}) fieldComponent: ViewContainerRef;\r\n\r\n    get expanded(): boolean {\r\n        return !this.to || this.to['expanded'] === undefined || this.to['expanded'];\r\n    }\r\n\r\n    get label(): string {\r\n        return this.to ? this.to.label : undefined;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}
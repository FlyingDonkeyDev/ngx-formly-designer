{"version":3,"file":"ngx-formly-designer.js.map","sources":["ng://ngx-formly-designer/lib/wrappers/designer.ts","ng://ngx-formly-designer/lib/formly-designer-config.ts","ng://ngx-formly-designer/lib/util.ts","ng://ngx-formly-designer/lib/fields.service.ts","ng://ngx-formly-designer/lib/formly-designer.service.ts","ng://ngx-formly-designer/lib/wrappers/field-designer.ts","ng://ngx-formly-designer/lib/wrappers/field-group-designer.ts","ng://ngx-formly-designer/lib/run/designer.ts","ng://ngx-formly-designer/lib/config.ts","ng://ngx-formly-designer/lib/formly-designer.component.ts","ng://ngx-formly-designer/lib/components/field-editor.ts","ng://ngx-formly-designer/lib/components/field-picker.ts","ng://ngx-formly-designer/lib/components/type-select.ts","ng://ngx-formly-designer/lib/components/wrapper-editor.ts","ng://ngx-formly-designer/lib/components/wrapper-select.ts","ng://ngx-formly-designer/lib/components/wrapper-picker.ts","ng://ngx-formly-designer/lib/components/wrappers-picker.ts","ng://ngx-formly-designer/lib/json-helper.ts","ng://ngx-formly-designer/lib/pipes/decycle.ts","ng://ngx-formly-designer/lib/formly-designer.module.ts"],"sourcesContent":["import { Component, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n    selector: 'formly-designer-wrapper',\n    template: `\n        <ng-template #fieldComponent></ng-template>\n    `\n})\nexport class FormlyDesignerWrapperComponent extends FieldWrapper {\n    @ViewChild('fieldComponent', { read: ViewContainerRef }) fieldComponent: ViewContainerRef;\n}\n","import { Injectable, Inject, InjectionToken } from '@angular/core';\nimport { FormlyConfig, FormlyFieldConfig } from '@ngx-formly/core';\n\nexport const FORMLY_DESIGNER_CONFIG_TOKEN = new InjectionToken<string>('FORMLY_DESIGNER_CONFIG_TOKEN');\n\n@Injectable()\nexport class FormlyDesignerConfig {\n    constructor(\n        @Inject(FORMLY_DESIGNER_CONFIG_TOKEN) configs: DesignerConfigOption[] = [],\n        private formlyConfig: FormlyConfig\n    ) {\n        configs.forEach(config => this.addConfig(config));\n    }\n\n    types: {[name: string]: DesignerTypeOption} = {};\n    wrappers: {[name: string]: DesignerOption} = {};\n    settings: DesignerSettings = { showClassName: true };\n\n    addConfig(config: DesignerConfigOption): void {\n        if (config.settings) {\n            this.setSettings(config.settings);\n        }\n        if (config.types) {\n            this.setType(config.types);\n        }\n        if (config.wrappers) {\n            this.setWrapper(config.wrappers);\n        }\n    }\n\n    setSettings(settings: DesignerSettings): void {\n        if (settings.showClassName !== undefined) {\n            this.settings.showClassName = !!settings.showClassName;\n        }\n    }\n\n    setType(options: DesignerTypeOption | DesignerTypeOption[]): void {\n        if (Array.isArray(options)) {\n            options.forEach((option) => {\n                this.setType(option);\n            });\n        } else {\n            // Throw if type isn't part of the formly config\n            this.formlyConfig.getType(options.name);\n\n            if (!this.types[options.name]) {\n                this.types[options.name] = <DesignerTypeOption>{};\n            }\n\n            const type = this.types[options.name];\n            type.name = options.name;\n            type.fieldArray = !!options.fieldArray;\n            type.fieldGroup = !!options.fieldGroup;\n            type.fields = options.fields;\n        }\n    }\n\n    setWrapper(options: DesignerOption | DesignerOption[]): void {\n        if (Array.isArray(options)) {\n            options.forEach((option) => {\n                this.setWrapper(option);\n            });\n        } else {\n            // Throw if wrapper isn't part of the formly config\n            this.formlyConfig.getWrapper(options.name);\n\n            if (!this.wrappers[options.name]) {\n                this.wrappers[options.name] = <DesignerOption>{};\n            }\n\n            const wrapper = this.wrappers[options.name];\n            wrapper.name = options.name;\n            wrapper.fields = options.fields;\n        }\n    }\n}\n\nexport interface DesignerOption {\n    name: string;\n    fields?: FormlyFieldConfig[];\n}\n\nexport interface DesignerTypeOption extends DesignerOption {\n    fieldArray?: boolean;\n    fieldGroup?: boolean;\n}\n\nexport interface DesignerSettings {\n    showClassName?: boolean;\n    filterWrapper?: (wrapper: string, field: FormlyFieldConfig) => boolean;\n}\n\nexport interface DesignerConfigOption {\n    settings?: DesignerSettings;\n    types?: DesignerTypeOption[];\n    wrappers?: DesignerOption[];\n}\n","import { FormlyFieldConfig } from '@ngx-formly/core';\n\nexport { cloneDeep, get, set, unset } from 'lodash-es';\n\nconst keyPathMemberName = '_formlyDesignerKeyPath';\n\n// Source: https://github.com/formly-js/ngx-formly/blob/master/src/core/src/lib/utils.ts\nexport function getKeyPath(field: { key?: string | string[], fieldGroup?: any, fieldArray?: any }): (string | number)[] {\n    /* We store the keyPath in the field for performance reasons. This function will be called frequently. */\n    if (!(<any>field)[keyPathMemberName] || (<any>field)[keyPathMemberName].key !== field.key) {\n        let keyPath: (string | number)[] = [];\n        if (field.key) {\n            /* Also allow for an array key, hence the type check  */\n            const pathElements = typeof field.key === 'string' ? field.key.split('.') : field.key;\n            for (let pathElement of pathElements) {\n                if (typeof pathElement === 'string') {\n                    /* replace paths of the form names[2] by names.2, cfr. angular formly */\n                    pathElement = pathElement.replace(/\\[(\\w+)\\]/g, '.$1');\n                    keyPath = keyPath.concat(pathElement.split('.'));\n                } else {\n                    keyPath.push(pathElement);\n                }\n            }\n            for (let i = 0; i < keyPath.length; i++) {\n                const pathElement = keyPath[i];\n                if (typeof pathElement === 'string' && /^\\d+$/.test(pathElement)) {\n                    keyPath[i] = parseInt(pathElement, 10);\n                }\n            }\n        }\n        (<any>field)[keyPathMemberName] = {\n            key: field.key,\n            path: keyPath,\n        };\n    }\n\n    return (<any>field)[keyPathMemberName].path.slice();\n}\n\n\nexport function equalType(a: FormlyFieldConfig, b: FormlyFieldConfig): boolean {\n    return (!a.fieldArray === !b.fieldArray) && (!a.fieldGroup === !b.fieldGroup);\n}\n\nexport function traverseFields(fields: FormlyFieldConfig[],\n    callback: (field: FormlyFieldConfig, path?: (string | number)[], parent?: FormlyFieldConfig) => boolean | any,\n    path?: (string | number)[],\n    parent?: FormlyFieldConfig): boolean | any {\n    path = path || [];\n    for (const field of fields) {\n        if (callback(field, path, parent)) {\n            return true;\n        }\n        if (field.fieldArray) {\n            if (traverseFields([field.fieldArray], callback, path.concat(getKeyPath(field)), field)) {\n                return true;\n            }\n        } else if (field.fieldGroup) {\n            if (traverseFields(field.fieldGroup, callback, path.concat(getKeyPath(field)), field)) {\n                return true;\n            }\n        }\n    }\n}\n\n// https://stackoverflow.com/a/40294058\n// export const cloneDeep = (obj, hash = new WeakMap()): typeof obj => {\n//   if (Object(obj) !== obj) return obj; // primitives\n//   if (hash.has(obj)) return hash.get(obj); // cyclic reference\n//   const result = obj instanceof Date ? new Date(obj)\n//     : obj instanceof RegExp ? new RegExp(obj.source, obj.flags)\n//       : obj.constructor ? new obj.constructor()\n//         : Object.create(null);\n//   hash.set(obj, result);\n//   if (obj instanceof Map)\n//     Array.from(obj, ([key, val]) => result.set(key, cloneDeep(val, hash)));\n//   return Object.assign(result, ...Object.keys(obj).map(\n//     key => ({ [key]: cloneDeep(obj[key], hash) })));\n// };\n\nexport const isArray = Array.isArray;\n\n\n// https://stackoverflow.com/a/28953167\nexport const isEmpty = (val: any): boolean => {\n    if (val === undefined)\n        return true;\n\n    else if (typeof (val) === 'function' || typeof (val) === 'number' || typeof (val) === 'boolean'\n        || Object.prototype.toString.call(val) === '[object Date]')\n        return false;\n\n    else if (val == null || val.length === 0)        // null or 0 length array\n        return true;\n\n    else if (typeof (val) === 'object') {\n        // empty object\n\n        let r;\n\n        for (const _ in val)\n            r = false;\n\n        return r;\n    }\n\n    return false;\n};\n\nexport const isFunction = (val: any): boolean => typeof val === 'function';\n\nexport const isObject = (val: any): boolean => typeof val === 'object' && val != null;\n\nexport const isString = (val: any): boolean => typeof val === 'string' || val instanceof String;\n","import { Injectable } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { DesignerOption, FormlyDesignerConfig } from './formly-designer-config';\nimport { cloneDeep, equalType, getKeyPath, isObject, traverseFields } from './util';\n\n@Injectable()\nexport class FieldsService {\n    constructor(\n        private formlyDesignerConfig: FormlyDesignerConfig\n    ) { }\n\n    getFullKeyPath(field: FormlyFieldConfig, fields: FormlyFieldConfig[]): (string | number)[] {\n        let keyPath = [];\n        if (field && field.key) {\n            const parents = new Map<FormlyFieldConfig, FormlyFieldConfig>();\n            traverseFields(fields, (f, path, parent) => {\n                parents.set(f, parent);\n            });\n\n            keyPath = getKeyPath(field);\n            let cur = parents.get(field);\n            while (cur) {\n                keyPath = getKeyPath(cur).concat(keyPath);\n                cur = parents.get(cur);\n            }\n        }\n        return keyPath;\n    }\n\n    getTypeFields(type: string): FormlyFieldConfig[] {\n        return this.getFields(type, 'type');\n    }\n\n    getWrapperFields(wrapper: string): FormlyFieldConfig[] {\n        return this.getFields(wrapper, 'wrapper');\n    }\n\n    /** Check the field for control type conflict */\n    checkField(field: FormlyFieldConfig, fields: FormlyFieldConfig[], parent?: FormlyFieldConfig): boolean {\n        const fullPathByField = new Map<FormlyFieldConfig, (string | number)[]>();\n\n        const newPath = this.getFullKeyPath(parent || {}, fields).concat(getKeyPath(field));\n        const length = newPath.length;\n        return !traverseFields(fields, (f, p) => {\n            const path = fullPathByField.get(f) || fullPathByField.set(f, (p || []).concat(getKeyPath(f))).get(f);\n            if (path.length !== length) {\n                return;\n            }\n            for (let i = 0; i < length; i++) {\n                if (path[i] !== newPath[i]) {\n                    return;\n                }\n            }\n            return !equalType(field, f);\n        });\n    }\n\n    mutateField(field: FormlyFieldConfig, designerField: boolean): FormlyFieldConfig {\n        if (isObject(field.templateOptions)) {\n            field.templateOptions['$designerField'] = designerField;\n        } else {\n            field.templateOptions = { $designerField: designerField };\n        }\n        if (field.fieldGroup) {\n            this.mutateFields(field.fieldGroup, designerField);\n        } else if (field.fieldArray && field.fieldArray.fieldGroup) {\n            if (designerField) {\n                this.mutateField(field.fieldArray, designerField);\n            } else {\n                // Treating fieldArrays as fieldGroups\n                field.templateOptions['$fieldArray'] = { type: field.type };\n                field.fieldGroup = field.fieldArray.fieldGroup;\n                delete field.fieldArray;\n                delete field.type;\n\n                this.mutateFields(field.fieldGroup, designerField);\n            }\n        }\n        return field;\n    }\n\n    mutateFields(fields: FormlyFieldConfig[], designerFields: boolean): void {\n        fields.forEach(field => this.mutateField(field, designerFields));\n    }\n\n    private getFields(name: string, type: string): FormlyFieldConfig[] {\n        const designerOption = (name ? this.getDesignerOptions(type)[name] || {} : {}) as DesignerOption;\n        const fields = cloneDeep(designerOption.fields || []);\n        this.mutateFields(fields, true);\n        return fields;\n    }\n\n    private getDesignerOptions(type: string): { [name: string]: DesignerOption } {\n        if (type === 'type') {\n            return this.formlyDesignerConfig.types;\n        }\n        if (type === 'wrapper') {\n            return this.formlyDesignerConfig.wrappers;\n        }\n        return {};\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, FormArray, FormGroup } from '@angular/forms';\nimport { FieldsService } from './fields.service';\nimport { FormlyConfig, FormlyFieldConfig } from '@ngx-formly/core';\nimport { FormlyDesignerConfig } from './formly-designer-config';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { cloneDeep, get, isArray, isEmpty, isFunction, isString, set, unset } from './util';\n\n@Injectable()\nexport class FormlyDesignerService {\n  constructor(\n    private designerConfig: FormlyDesignerConfig,\n    private fieldsService: FieldsService,\n    private formlyConfig: FormlyConfig\n  ) { }\n\n  private readonly _disabled = new BehaviorSubject<boolean>(false);\n  private readonly _fields = new BehaviorSubject<FormlyFieldConfig[]>([]);\n  private readonly _model = new BehaviorSubject<any>({});\n\n  get disabled(): boolean {\n    return this._disabled.value;\n  }\n\n  set disabled(value: boolean) {\n    this._disabled.next(!!value);\n  }\n\n  get disabled$(): Observable<boolean> {\n    return this._disabled.asObservable();\n  }\n\n  get fields(): FormlyFieldConfig[] {\n    return this._fields.value;\n  }\n\n  set fields(value: FormlyFieldConfig[]) {\n    // Prune the fields because ngx-formly pollutes them with internal state\n    // causing incorrect behavior when re-applied.\n    const fields = this.createPrunedFields(isArray(value) ? value : []);\n    this._fields.next(fields);\n  }\n\n  get fields$(): Observable<FormlyFieldConfig[]> {\n    return this._fields.asObservable();\n  }\n\n  get model(): any {\n    return this._model.value;\n  }\n\n  set model(value: any) {\n    this._model.next(value == null ? {} : value);\n  }\n\n  get model$(): Observable<any> {\n    return this._model.asObservable();\n  }\n\n  addField(field: FormlyFieldConfig): void {\n    this.fieldsService.mutateField(field, false);\n\n    const fields = cloneDeep(this.fields);\n    fields.push(field);\n\n    this.fields = fields;\n    this.model = cloneDeep(this.model);\n  }\n\n  removeField(field: FormlyFieldConfig): void {\n    this.unsetField(field);\n    if (this.replaceField(this.fields, field, undefined)) {\n      this.removeControl(field.formControl);\n    }\n\n    this.fields = cloneDeep(this.fields);\n    this.model = cloneDeep(this.model);\n  }\n\n  updateField(original: FormlyFieldConfig, modified: FormlyFieldConfig): void {\n    const pruned = this.fieldsService.mutateField(this.createPrunedField(modified), false);\n\n    if (this.replaceField(this.fields, original, pruned)) {\n      if (original.formControl !== pruned.formControl) {\n        this.unsetField(original);\n        this.removeControl(original.formControl);\n      }\n\n      this.fields = cloneDeep(this.fields);\n      this.model = cloneDeep(this.model);\n    }\n  }\n\n  convertField(field: FormlyFieldConfig): FormlyFieldConfig {\n    return this.createPrunedField(field);\n  }\n\n  convertFields(fields: FormlyFieldConfig[]): FormlyFieldConfig[] {\n    return this.createPrunedFields(fields);\n  }\n\n  createDesignerFields(): FormlyFieldConfig[] {\n    return this.createPrunedFields(this.fields);\n  }\n\n  private createPrunedFields(fields: FormlyFieldConfig[]): FormlyFieldConfig[] {\n    const prunedFields: FormlyFieldConfig[] = [];\n    if (isArray(fields)) {\n      fields.forEach(field => {\n        const pruned = this.createPrunedField(field);\n        if (field.fieldArray) {\n          pruned.fieldArray = this.createPrunedField(field.fieldArray);\n        } else if (field.fieldGroup && !pruned.fieldArray) {\n          pruned.fieldGroup = this.createPrunedFields(field.fieldGroup);\n        }\n        if (Object.keys(pruned).length > 0) {\n          prunedFields.push(pruned);\n        }\n      });\n    }\n    return prunedFields;\n  }\n\n  getWrappers(field: FormlyFieldConfig): string[] {\n    if (!field || !isArray(field.wrappers)) {\n      return [];\n    }\n\n    const clonedField = cloneDeep(field);\n    let wrappers = clonedField.wrappers = (clonedField.wrappers || []);\n    if (isFunction(this.designerConfig.settings.filterWrapper)) {\n      wrappers = wrappers.filter(w => this.designerConfig.settings.filterWrapper(w, clonedField));\n    }\n\n    // Determine wrappers part of the formly configuration (static and dynamic) to exclude them from the result\n    const staticWrappers = field.type ? this.formlyConfig.getType(field.type).wrappers || [] : [];\n    const typeWrappers = staticWrappers\n      .concat(this.formlyConfig.templateManipulators.preWrapper.map(m => m(clonedField)))\n      .concat(this.formlyConfig.templateManipulators.postWrapper.map(m => m(clonedField)))\n      .filter(w => w);\n\n    // Remove wrappers part of the formly configuration from the result\n    if (typeWrappers.length > 0) {\n      for (let i = wrappers.length - 1; i >= 0; i--) {\n        for (let j = typeWrappers.length - 1; j >= 0; j--) {\n          if (wrappers[i] === typeWrappers[j]) {\n            typeWrappers.splice(j, 1);\n            wrappers.splice(i, 1);\n            break;\n          }\n        }\n      }\n    }\n    return wrappers;\n  }\n\n  /** Prunes the field of paths not identified in the designer config */\n  private createPrunedField(field: FormlyFieldConfig): FormlyFieldConfig {\n    const type = get(field, 'templateOptions.$fieldArray.type', field.type);\n    const designerType = this.designerConfig.types[type];\n    const pruned: FormlyFieldConfig = isEmpty(field.key) ? {} : { key: field.key };\n\n    if (designerType) {\n      pruned.type = type;\n      this.applyProperties(field, pruned, designerType.fields);\n      if (designerType.fieldArray) {\n        pruned.fieldArray = {\n          fieldGroup: this.createPrunedFields(field.fieldGroup)\n        };\n      }\n    }\n\n    if (isArray(field.fieldGroup) && !isArray(pruned.fieldArray)) {\n      pruned.fieldGroup = this.createPrunedFields(field.fieldGroup);\n\n      let fieldGroupClassName: string;\n      if (isString(field.fieldGroupClassName) && (fieldGroupClassName = field.fieldGroupClassName.trim()).length > 0) {\n        pruned.fieldGroupClassName = fieldGroupClassName;\n      }\n    }\n\n    let className: string;\n    if (isString(field.className) && (className = field.className.trim()).length > 0) {\n      pruned.className = className;\n    }\n\n    const wrappers = this.getWrappers(field);\n    if (wrappers.length > 0) {\n      pruned.wrappers = wrappers;\n      const designerWrapperFields = wrappers.map(wrapper => this.designerConfig.wrappers[wrapper])\n        .filter(designerOption => designerOption && isArray(designerOption.fields))\n        .reduce<FormlyFieldConfig[]>((previous, current) => previous.concat(current.fields), []);\n      this.applyProperties(field, pruned, designerWrapperFields);\n    }\n    return pruned;\n  }\n\n  private applyProperties(field: FormlyFieldConfig, designed: FormlyFieldConfig, designerFields: FormlyFieldConfig[]): void {\n    if (isArray(designerFields)) {\n      designerFields.forEach(designerField => {\n        const value = get(field, designerField.key);\n        if (value != null && (!isString(value) || value.length > 0) && value !== designerField.defaultValue) {\n          set(designed, designerField.key, value);\n        }\n      });\n    }\n  }\n\n  private replaceField(fields: FormlyFieldConfig[], original: FormlyFieldConfig, modified: FormlyFieldConfig): boolean {\n    if (isArray(fields)) {\n      const l = fields.length;\n      for (let i = 0; i < l; i++) {\n        const field = fields[i];\n        if (field === original) {\n          if (modified == null) {\n            fields.splice(i, 1);\n          } else {\n            fields[i] = modified;\n          }\n          return true;\n        }\n        if (field.fieldGroup && this.replaceField(field.fieldGroup, original, modified)) {\n          return true;\n        }\n        if (field.fieldArray && this.replaceFieldArray(field, original, modified)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  private replaceFieldArray(parent: FormlyFieldConfig, original: FormlyFieldConfig, modified: FormlyFieldConfig): boolean {\n    const fieldArray = parent.fieldArray;\n    if (fieldArray === original) {\n      parent.fieldArray = modified;\n      return true;\n    }\n    if (fieldArray.fieldGroup && this.replaceField(fieldArray.fieldGroup, original, modified)) {\n      return true;\n    }\n    return fieldArray.fieldArray && this.replaceFieldArray(fieldArray, original, modified);\n  }\n\n  private buildPath(key: string, path: string, arrayNext: boolean = false) {\n    return path ? key + (arrayNext ? path : '.' + path) : key;\n  }\n\n  private path(control: AbstractControl, includeSelf: boolean = true): string {\n    let path = '';\n    let arrayNext = false;\n\n    if (!includeSelf) {\n      control = (control || {} as AbstractControl).parent;\n    }\n    for (let child = control, parent = (control || {} as AbstractControl).parent; !!parent; child = parent, parent = parent.parent) {\n      if (parent instanceof FormGroup) {\n        for (const key in parent.controls) {\n          if (parent.controls[key] === child) {\n            path = this.buildPath(key, path, arrayNext);\n            arrayNext = false;\n            break;\n          }\n        }\n      } else if (parent instanceof FormArray) {\n        for (let i = 0; i < parent.length; i++) {\n          if (parent.at(i) === child) {\n            path = this.buildPath('[' + i + ']', path, arrayNext);\n            arrayNext = true;\n            break;\n          }\n        }\n      }\n    }\n    return path;\n  }\n\n  private unsetField(field: FormlyFieldConfig): void {\n    if (field) {\n      if (field.fieldArray) {\n        this.unsetField(field.fieldArray);\n      }\n      if (field.fieldGroup) {\n        field.fieldGroup.forEach(f => this.unsetField(f));\n      }\n      if (field.formControl) {\n        const path = this.path(field.formControl);\n        unset(this.model, path);\n      }\n    }\n  }\n\n  private removeControl(control: AbstractControl): void {\n    const parent = control ? control.parent : undefined;\n    if (parent instanceof FormGroup) {\n      for (const key in parent.controls) {\n        if (parent.controls[key] === control) {\n          parent.removeControl(key);\n          return;\n        }\n      }\n    } else if (parent instanceof FormArray) {\n      for (let i = 0; i < parent.length; i++) {\n        if (parent.at(i) === control) {\n          parent.removeAt(i);\n          return;\n        }\n      }\n    }\n  }\n}\n","import { AfterContentChecked, AfterContentInit, ChangeDetectorRef, Component, ElementRef,\n    NgZone, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { FieldWrapper } from '@ngx-formly/core';\nimport { FieldsService } from '../fields.service';\nimport { FormlyDesignerConfig } from '../formly-designer-config';\nimport { FormlyDesignerService } from '../formly-designer.service';\nimport { cloneDeep } from '../util';\nimport { timer } from 'rxjs';\n\n@Component({\n    selector: 'formly-designer-field-wrapper',\n    template: `\n        <div *ngIf=\"!editing\" class=\"bg-info text-white control-panel\">\n            <span class=\"type\">{{ type }}</span>\n            <div class=\"btn-group\">\n                <button type=\"button\" class=\"btn\" data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\" aria-expanded=\"false\" title=\"wrappers\">\n                    <i class=\"fa fa-clone\" aria-hidden=\"true\"></i>\n                </button>\n                <div class=\"dropdown-menu dropdown-menu-right\">\n                    <button class=\"dropdown-item\" type=\"button\" [disabled]=\"disabled\" title=\"add wrapper\"\n                        *ngFor=\"let wrapper of wrappers\" (click)=\"addWrapper(wrapper)\">\n                        {{ wrapper }}\n                    </button>\n                    <ng-container *ngIf=\"fieldWrappers.length\">\n                        <div *ngIf=\"wrappers.length\" class=\"dropdown-divider\"></div>\n                        <button class=\"dropdown-item\" type=\"button\" [disabled]=\"disabled\"\n                            *ngFor=\"let wrapper of fieldWrappers; let i=index\" (click)=\"removeWrapper(i)\">\n                            {{ wrapper }}&nbsp;&nbsp;<i class=\"fa fa-times\" aria-hidden=\"true\" title=\"remove wrapper\"></i>\n                        </button>\n                    </ng-container>\n                </div>\n            </div>\n            <button class=\"btn\" type=\"button\" [disabled]=\"disabled\" (click)=\"edit()\">\n                <i class=\"fa fa-pencil\" aria-hidden=\"true\" title=\"edit\"></i>\n            </button>\n            <button class=\"btn\" type=\"button\" [disabled]=\"disabled\" (click)=\"remove()\">\n                <i class=\"fa fa-times\" aria-hidden=\"true\" title=\"remove\"></i>\n            </button>\n        </div>\n        <div class=\"content\">\n            <div class=\"editor\" [hidden]=\"!editing\">\n                <formly-designer-field-editor #editor [hasContent]=\"true\" [showType]=\"true\" [showWrappers]=\"true\" [formControl]=\"fieldEdit\">\n                    <div class=\"footer\">\n                        <button (click)=\"cancel()\" class=\"btn btn-secondary mr-1\">Cancel</button>\n                        <button [disabled]=\"editor.invalid\" (click)=\"accept()\" class=\"btn btn-primary\">Apply</button>\n                    </div>\n                </formly-designer-field-editor>\n            </div>\n            <div [hidden]=\"editing\">\n                <ng-template #fieldComponent></ng-template>\n            </div>\n        </div>\n    `,\n    styles: [`\n        :host {\n            display: flex;\n            position: relative;\n            justify-content: flex-start;\n            align-content: flex-start;\n            align-items: flex-start;\n            margin: .25em;\n        }\n        :host.designerEmpty {\n            display:none;\n        }\n        .btn:not(:disabled), .dropdown-item:not(:disabled) {\n            cursor: pointer;\n        }\n        .control-panel {\n            font-size: .8em;\n            position: absolute;\n            padding: 0 0 0 .5em;\n            border-radius: 0 5px 0 0;\n            right: 0;\n            top: 0;\n        }\n        .control-panel > * {\n            padding-right: .5em;\n        }\n        .control-panel .btn {\n            font-size: unset;\n            background-color: unset;\n            padding: 0 .5em 0 0;\n            color: #fff;\n        }\n        .content {\n            border: 1px dashed #000;\n            border-radius: 5px;\n            min-height: 2em;\n            padding: 1.5em 1em 0 1em;\n            width: 100%;\n        }\n        .content:first-child {\n            padding-top: 0;\n        }\n        .editor {\n            margin: 1em 0;\n        }\n        .footer {\n            display: flex;\n            justify-content: flex-end;\n        }\n    `]\n})\nexport class FormlyDesignerFieldWrapperComponent extends FieldWrapper\n    implements AfterContentInit, AfterContentChecked, OnInit {\n    @ViewChild('fieldComponent', { read: ViewContainerRef }) fieldComponent: ViewContainerRef;\n\n    editing = false;\n    fieldEdit = new FormControl({});\n    fieldWrappers: string[] = [];\n    wrappers: string[] = [];\n    type: string;\n\n    constructor(\n        private changeDetector: ChangeDetectorRef,\n        private designerConfig: FormlyDesignerConfig,\n        private elementRef: ElementRef,\n        private fieldsService: FieldsService,\n        private formlyDesignerService: FormlyDesignerService,\n        private zone: NgZone\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.type = this.field.type;\n        this.wrappers = Object.getOwnPropertyNames(this.designerConfig.wrappers);\n        this.fieldWrappers = this.formlyDesignerService.getWrappers(this.formlyDesignerService.convertField(this.field)) || [];\n    }\n\n    ngAfterContentInit(): void {\n        this.zone.runOutsideAngular(() => setTimeout(() => this.checkDesigner()));\n    }\n\n    ngAfterContentChecked(): void {\n        this.zone.runOutsideAngular(() => setTimeout(() => this.checkDesigner()));\n    }\n\n    get disabled(): boolean {\n        return this.formlyDesignerService.disabled;\n    }\n\n    addWrapper(wrapper: string): void {\n        const field = cloneDeep(this.field);\n        if (field.wrappers) {\n            field.wrappers.push(wrapper);\n        } else {\n            field.wrappers = [wrapper];\n        }\n        this.formlyDesignerService.updateField(this.field, field);\n    }\n\n    removeWrapper(index: number): void {\n        const field = cloneDeep(this.field);\n        this.fieldWrappers.splice(index, 1);\n        field.wrappers = this.fieldWrappers;\n        this.formlyDesignerService.updateField(this.field, field);\n    }\n\n    edit(): void {\n        this.editing = true;\n        this.formlyDesignerService.disabled = true;\n        this.fieldEdit.setValue(this.formlyDesignerService.convertField(cloneDeep(this.field)));\n    }\n\n    remove(): void {\n        this.formlyDesignerService.removeField(this.field);\n    }\n\n    accept(): void {\n        if (!this.fieldsService.checkField(this.fieldEdit.value, this.formlyDesignerService.fields)) {\n            return;\n        }\n        timer().subscribe(() => {\n            this.formlyDesignerService.updateField(this.field, this.fieldEdit.value);\n            this.formlyDesignerService.disabled = false;\n            this.editing = false;\n        });\n    }\n\n    cancel(): void {\n        this.formlyDesignerService.disabled = false;\n        this.editing = false;\n    }\n\n    private checkDesigner(): void {\n        const element = this.elementRef.nativeElement as HTMLElement;\n        if (element.parentNode == null) {\n            return;\n        }\n\n        const designerEmpty = element.querySelector('formly-designer-wrapper') == null;\n        if (designerEmpty !== element.classList.contains('designerEmpty')) {\n            this.changeDetector.detectChanges();\n            if (designerEmpty) {\n                element.classList.add('designerEmpty');\n            } else {\n                element.classList.remove('designerEmpty');\n            }\n        }\n    }\n}\n","import { AfterContentChecked, AfterContentInit, ChangeDetectorRef, Component, ElementRef,\n    NgZone, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { FieldWrapper, FormlyFieldConfig } from '@ngx-formly/core';\nimport { FieldsService } from '../fields.service';\nimport { FormlyDesignerConfig } from '../formly-designer-config';\nimport { FormlyDesignerService } from '../formly-designer.service';\nimport { cloneDeep, isArray } from '../util';\nimport { NEVER, timer } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'formly-designer-field-group-wrapper',\n    template: `\n        <div *ngIf=\"!editing\" class=\"bg-info text-white control-panel\">\n            <span class=\"type\">{{ type }}</span>\n            <div class=\"btn-group\">\n                <button type=\"button\" class=\"btn\" data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\" aria-expanded=\"false\" title=\"wrappers\">\n                    <i class=\"fa fa-clone\" aria-hidden=\"true\"></i>\n                </button>\n                <div class=\"dropdown-menu dropdown-menu-right\">\n                    <button class=\"dropdown-item\" type=\"button\" [disabled]=\"disabled\" title=\"add wrapper\"\n                        *ngFor=\"let wrapper of wrappers\" (click)=\"addWrapper(wrapper)\">\n                        {{ wrapper }}\n                    </button>\n                    <ng-container *ngIf=\"fieldWrappers.length\">\n                        <div *ngIf=\"wrappers.length\" class=\"dropdown-divider\"></div>\n                        <button class=\"dropdown-item\" type=\"button\" [disabled]=\"disabled\"\n                            *ngFor=\"let wrapper of fieldWrappers; let i=index\" (click)=\"removeWrapper(i)\">\n                            {{ wrapper }}&nbsp;&nbsp;<i class=\"fa fa-times\" aria-hidden=\"true\" title=\"remove wrapper\"></i>\n                        </button>\n                    </ng-container>\n                </div>\n            </div>\n            <button [disabled]=\"disabled\" type=\"button\" class=\"btn\" (click)=\"edit()\">\n                <i class=\"fa fa-pencil\" aria-hidden=\"true\" title=\"edit\"></i>\n            </button>\n            <button [disabled]=\"disabled\" type=\"button\" class=\"btn\" (click)=\"remove()\">\n                <i class=\"fa fa-times\" aria-hidden=\"true\" title=\"remove\"></i>\n            </button>\n        </div>\n        <div class=\"content\">\n            <div [hidden]=\"!editing\">\n                <formly-designer-field-editor #editor [fieldGroup]=\"true\" [hasContent]=\"true\" [showWrappers]=\"true\"\n                    [formControl]=\"fieldEdit\">\n                    <div class=\"footer\">\n                        <button (click)=\"cancel()\" class=\"btn btn-secondary mr-1\">Cancel</button>\n                        <button [disabled]=\"editor.invalid\" (click)=\"accept()\" class=\"btn btn-primary\">Apply</button>\n                    </div>\n                </formly-designer-field-editor>\n            </div>\n            <div [hidden]=\"editing\">\n                <div class=\"form-group\">\n                    <label>child</label>\n                    <formly-designer-field-picker (selected)=\"onFieldSelected($event)\"></formly-designer-field-picker>\n                </div>\n                <ng-template #fieldComponent></ng-template>\n            </div>\n        </div>\n    `,\n    styles: [`\n        :host {\n            display: flex;\n            position: relative;\n            justify-content: flex-start;\n            align-content: flex-start;\n            align-items: flex-start;\n            margin: .25em;\n        }\n        :host.designerEmpty {\n            display:none;\n        }\n        .btn:not(:disabled), .dropdown-item:not(:disabled) {\n            cursor: pointer;\n        }\n        .control-panel {\n            font-size: .8em;\n            position: absolute;\n            padding: 0 0 0 .5em;\n            border-radius: 0 5px 0 0;\n            right: 0;\n            top: 0;\n        }\n        .control-panel > * {\n            padding-right: .5em;\n        }\n        .control-panel .btn {\n            font-size: unset;\n            background-color: unset;\n            padding: 0 .5em 0 0;\n            color: #fff;\n        }\n        .content {\n            border: 1px dashed #000;\n            border-radius: 5px;\n            padding: 1em;\n            width: 100%;\n        }\n        .footer {\n            display: flex;\n            justify-content: flex-end;\n        }\n    `]\n})\nexport class FormlyDesignerFieldGroupWrapperComponent extends FieldWrapper\n    implements AfterContentInit, AfterContentChecked, OnInit {\n    @ViewChild('fieldComponent', { read: ViewContainerRef }) fieldComponent: ViewContainerRef;\n\n    type: string;\n    editing = false;\n    fieldEdit = new FormControl({});\n    fieldWrappers: string[] = [];\n    wrappers: string[] = [];\n\n    constructor(\n        private changeDetector: ChangeDetectorRef,\n        private designerConfig: FormlyDesignerConfig,\n        private elementRef: ElementRef,\n        private fieldsService: FieldsService,\n        private formlyDesignerService: FormlyDesignerService,\n        private zone: NgZone\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        if (this.field.templateOptions.$fieldArray) {\n            this.type = this.field.templateOptions.$fieldArray.type || 'fieldArray';\n        } else if (this.field.type) {\n            this.type = this.field.type;\n        } else if (this.field.fieldGroup) {\n            this.type = 'fieldGroup';\n        }\n        this.wrappers = Object.getOwnPropertyNames(this.designerConfig.wrappers);\n        this.fieldWrappers = this.formlyDesignerService.convertField(this.field).wrappers || [];\n    }\n\n    ngAfterContentInit(): void {\n        this.zone.runOutsideAngular(() => setTimeout(() => this.checkDesigner()));\n    }\n\n    ngAfterContentChecked(): void {\n        this.zone.runOutsideAngular(() => setTimeout(() => this.checkDesigner()));\n    }\n\n    get disabled(): boolean {\n        return this.formlyDesignerService.disabled;\n    }\n\n    addWrapper(wrapper: string): void {\n        const field = cloneDeep(this.field);\n        if (field.wrappers) {\n            field.wrappers.push(wrapper);\n        } else {\n            field.wrappers = [wrapper];\n        }\n        this.formlyDesignerService.updateField(this.field, field);\n    }\n\n    removeWrapper(index: number): void {\n        const field = cloneDeep(this.field);\n        this.fieldWrappers.splice(index, 1);\n        field.wrappers = this.fieldWrappers;\n        this.formlyDesignerService.updateField(this.field, field);\n    }\n\n    edit(): void {\n        this.editing = true;\n        this.formlyDesignerService.disabled = true;\n        this.fieldEdit.setValue(this.formlyDesignerService.convertField(cloneDeep(this.field)));\n    }\n\n    remove(): void {\n        this.formlyDesignerService.removeField(this.field);\n    }\n\n    accept(): void {\n        if (!this.fieldsService.checkField(this.fieldEdit.value, this.formlyDesignerService.fields)) {\n            return;\n        }\n\n        timer().subscribe(() => {\n            this.formlyDesignerService.updateField(this.field, this.fieldEdit.value);\n            this.formlyDesignerService.disabled = false;\n            this.editing = false;\n        });\n    }\n\n    cancel(): void {\n        this.formlyDesignerService.disabled = false;\n        this.editing = false;\n    }\n\n    onFieldSelected(field: FormlyFieldConfig): void {\n        if (isArray(this.field.fieldGroup) &&\n            !this.fieldsService.checkField(field, this.formlyDesignerService.fields, this.field)) {\n            return;\n        }\n\n        const updatedField = cloneDeep(this.field);\n        updatedField.fieldGroup = isArray(updatedField.fieldGroup) ? updatedField.fieldGroup.slice() : [];\n        updatedField.fieldGroup.push(field);\n\n        timer()\n            .pipe(\n                tap(() => this.formlyDesignerService.updateField(this.field, updatedField)),\n                catchError(() => NEVER)\n            )\n            .subscribe();\n    }\n\n    private checkDesigner(): void {\n        const element = this.elementRef.nativeElement as HTMLElement;\n        if (element.parentNode == null) {\n            return;\n        }\n\n        const designerEmpty = element.querySelector('formly-designer-wrapper') == null;\n        if (designerEmpty !== element.classList.contains('designerEmpty')) {\n            this.changeDetector.detectChanges();\n            if (designerEmpty) {\n                element.classList.add('designerEmpty');\n            } else {\n                element.classList.remove('designerEmpty');\n            }\n        }\n    }\n}\n","import { FormlyFieldConfig, FormlyConfig } from '@ngx-formly/core';\n\nexport class TemplateDesigner {\n    private isNonDesignerField(field: FormlyFieldConfig): boolean {\n        return field && (!field.templateOptions || field.templateOptions['$designerField'] !== true);\n    }\n\n    run(fc: FormlyConfig) {\n        fc.templateManipulators.preWrapper.push((field: FormlyFieldConfig) => {\n            if (this.isNonDesignerField(field)) {\n                return field.fieldGroup ? 'fieldGroupDesigner' : 'fieldDesigner';\n            }\n        });\n        fc.templateManipulators.postWrapper.push((field: FormlyFieldConfig) => {\n            if (this.isNonDesignerField(field)) {\n                return 'designer';\n            }\n        });\n    }\n}\n","import { ConfigOption } from '@ngx-formly/core';\nimport { FormlyDesignerWrapperComponent } from './wrappers/designer';\nimport { FormlyDesignerFieldWrapperComponent } from './wrappers/field-designer';\nimport { FormlyDesignerFieldGroupWrapperComponent } from './wrappers/field-group-designer';\nimport { TemplateDesigner } from './run/designer';\n\nexport const fieldComponents = [];\n\nexport const wrapperComponents = [\n    FormlyDesignerWrapperComponent,\n    FormlyDesignerFieldWrapperComponent,\n    FormlyDesignerFieldGroupWrapperComponent\n];\n\nexport const config: ConfigOption = {\n    wrappers: [\n        { name: 'designer', component: FormlyDesignerWrapperComponent },\n        { name: 'fieldDesigner', component: FormlyDesignerFieldWrapperComponent },\n        { name: 'fieldGroupDesigner', component: FormlyDesignerFieldGroupWrapperComponent }\n    ],\n    manipulators: [\n        { class: TemplateDesigner, method: 'run' }\n    ]\n};\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { FieldsService } from './fields.service';\nimport { FormlyDesignerService } from './formly-designer.service';\nimport { merge, NEVER, Subscription, timer } from 'rxjs';\nimport { catchError, debounceTime, tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'formly-designer',\n    template: `\n        <formly-designer-field-picker (selected)=\"onFieldSelected($event)\">\n        </formly-designer-field-picker>\n        <form novalidate [formGroup]=\"form\">\n            <formly-form [options]=\"options\" [model]=\"model\" [form]=\"form\" [fields]=\"fields\">\n            </formly-form>\n        </form>\n        <!--<div>\n            Designer Fields Debug:\n            <pre>{{ fields | decycle | json }}</pre>\n        </div>-->\n    `,\n    styles: [`\n        formly-designer-field-picker .form-group > .input-group > formly-designer-type-select > select {\n            border-radius: .25rem 0 0 .25rem;\n            border-right: 0;\n        }\n        formly-designer-wrapper-editor .card > .card-body .form-control {\n            width: 100%;\n        }\n        formly-designer-wrapper-picker .form-group > .input-group > formly-designer-wrapper-select > select {\n            border-radius: .25rem 0 0 .25rem;\n            border-right: 0;\n        }\n    `],\n    encapsulation: ViewEncapsulation.None,\n    providers: [FormlyDesignerService]\n})\nexport class FormlyDesignerComponent implements OnDestroy, OnInit {\n    @ViewChild('formlyFormContainer', { read: ViewContainerRef }) formlyFormContainer;\n    @Output() fieldsChange = new EventEmitter<FormlyFieldConfig[]>();\n    @Output() modelChange = new EventEmitter<any>();\n\n    types: string[] = [];\n    wrappers: string[] = [];\n    properties: string[] = [];\n    debugFields: FormlyFieldConfig[] = [];\n\n    form: FormGroup;\n    options: any = {};\n\n    private readonly subscriptions: Subscription[] = [];\n\n    constructor(\n        private fieldsService: FieldsService,\n        private formBuilder: FormBuilder,\n        private formlyDesignerService: FormlyDesignerService\n    ) { }\n\n    @Input()\n    get disabled(): boolean {\n        return this.formlyDesignerService.disabled;\n    }\n\n    set disabled(value: boolean) {\n        this.formlyDesignerService.disabled = value;\n    }\n\n    @Input()\n    get fields(): FormlyFieldConfig[] {\n        return this.formlyDesignerService.fields;\n    }\n\n    set fields(value: FormlyFieldConfig[]) {\n        const fields = this.formlyDesignerService.convertFields(value);\n        this.fieldsService.mutateFields(fields, false);\n        this.formlyDesignerService.fields = fields;\n    }\n\n    @Input()\n    get model(): any {\n        return this.formlyDesignerService.model;\n    }\n\n    set model(value: any) {\n        this.formlyDesignerService.model = value;\n    }\n\n    ngOnInit(): void {\n        // Designer forms will be restricted to a single field depth; all designer keys should be\n        // complex (e.g. \"templateOptions.some.property\")\n        this.form = this.formBuilder.group({});\n\n        this.subscriptions.push(this.formlyDesignerService.fields$\n            .subscribe(() => {\n                this.form = this.formBuilder.group({});\n                this.fieldsChange.emit(this.formlyDesignerService.createDesignerFields());\n            }));\n\n        this.subscriptions.push(merge(\n            this.formlyDesignerService.model$,\n            this.form.valueChanges\n        )\n            .pipe(debounceTime(50))\n            .subscribe(() => this.modelChange.emit(this.formlyDesignerService.model)));\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.splice(0).forEach(subscription => subscription.unsubscribe());\n    }\n\n    onFieldSelected(field: FormlyFieldConfig): void {\n        timer().pipe(\n            tap(() => {\n                if (this.fieldsService.checkField(field, this.formlyDesignerService.fields)) {\n                    this.formlyDesignerService.addField(field);\n                }\n            }),\n            catchError(() => NEVER)).subscribe();\n    }\n}\n","import { Component, ElementRef, forwardRef, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, FormBuilder, FormControl, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { FieldsService } from '../fields.service';\nimport { FormlyDesignerConfig } from '../formly-designer-config';\nimport { merge, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { cloneDeep, isArray, isObject, isString } from '../util';\n\nconst FIELD_EDITOR_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => FieldEditorComponent),\n    multi: true\n};\n\n@Component({\n    selector: 'formly-designer-field-editor',\n    template: `\n        <form [formGroup]=\"form\" novalidate>\n            <div class=\"card\">\n                <div class=\"card-header\" [ngClass]=\"{solo: !hasContent && fields.length === 0}\">\n                    <div class=\"form-group\" [ngClass]=\"{'has-danger': form.hasError('key') && (key.dirty || key.touched)}\">\n                        <label class=\"form-control-label\">key</label>\n                        <input formControlName=\"key\" class=\"form-control\">\n                        <div *ngIf=\"form.hasError('key') && (key.dirty || key.touched)\" class=\"form-control-feedback\">\n                            key required.\n                        </div>\n                    </div>\n                    <div *ngIf=\"formlyDesignerConfig.settings.showClassName\" class=\"form-group\">\n                        <label class=\"form-control-label\">className</label>\n                        <input formControlName=\"className\" class=\"form-control\">\n                    </div>\n                    <div *ngIf=\"fieldGroup && formlyDesignerConfig.settings.showClassName\" class=\"form-group\">\n                        <label class=\"form-control-label\">fieldGroupClassName</label>\n                        <input formControlName=\"fieldGroupClassName\" class=\"form-control\">\n                    </div>\n                    <div *ngIf=\"showType\" class=\"form-group\"\n                        [ngClass]=\"{'has-danger': form.hasError('type') && (type.dirty || type.touched)}\">\n                        <label class=\"form-control-label\">type</label>\n                        <formly-designer-type-select formControlName=\"type\"></formly-designer-type-select>\n                        <div *ngIf=\"form.hasError('type') && (type.dirty || type.touched)\" class=\"form-control-feedback\">\n                            type required.\n                        </div>\n                    </div>\n                    <div *ngIf=\"showWrappers\" class=\"form-group\">\n                        <label class=\"form-control-label\">wrappers</label>\n                        <formly-designer-wrappers-picker [field]=\"field\"\n                            (selected)=\"onWrappersSelected($event)\">\n                        </formly-designer-wrappers-picker>\n                    </div>\n                </div>\n                <div #block class=\"card-body\">\n                    <formly-form *ngIf=\"fields.length > 0\" [form]=\"fieldForm\" [fields]=\"fields\" [model]=\"field\">\n                    </formly-form>\n                    <ng-content></ng-content>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [`\n        .card-header.solo {\n            border-bottom: 0;\n        }\n        .card-header.solo + .card-body {\n            display: none;\n        }\n    `],\n    providers: [\n        FIELD_EDITOR_CONTROL_VALUE_ACCESSOR\n    ]\n})\nexport class FieldEditorComponent implements ControlValueAccessor, OnDestroy, OnInit {\n    @Input() fieldGroup: boolean;\n    @Input() showType: boolean;\n    @Input() showWrappers: boolean;\n    @Input() hasContent: boolean;\n    @ViewChild('block') blockElRef: ElementRef;\n\n    private readonly subscriptions: Subscription[] = [];\n    private valueChangesSubscription: Subscription;\n\n    constructor(\n        private fieldsService: FieldsService,\n        private fb: FormBuilder,\n        public formlyDesignerConfig: FormlyDesignerConfig\n    ) {\n        this.form = fb.group({\n            key: this.key = fb.control(''),\n            className: this.className = fb.control(''),\n            fieldGroupClassName: this.fieldGroupClassName = fb.control(''),\n            type: this.type = fb.control('')\n        }, { validator: (control) => this.validator(control) });\n        this.fieldForm = fb.group({});\n    }\n\n    readonly form: FormGroup;\n    readonly key: FormControl;\n    readonly className: FormControl;\n    readonly fieldGroupClassName: FormControl;\n    readonly type: FormControl;\n\n    fieldForm: FormGroup;\n    field: FormlyFieldConfig = {};\n    fields: FormlyFieldConfig[] = [];\n    fieldArray: boolean;\n    invalid: boolean;\n\n    protected onChange = (_: any) => { };\n    protected onTouched = () => { };\n\n    ngOnInit(): void {\n        this.subscriptions.push(this.type.valueChanges\n            .subscribe(() => this.onTypeChange()));\n\n        this.subscriptions.push(this.form.statusChanges\n            .pipe(debounceTime(0))\n            .subscribe(() => this.invalid = this.form.invalid));\n\n        this.subscribeValueChanges();\n    }\n\n    ngOnDestroy(): void {\n        this.valueChangesSubscription.unsubscribe();\n        this.subscriptions.splice(0).forEach(subscription => subscription.unsubscribe());\n    }\n\n    writeValue(obj: any) {\n        this.valueChangesSubscription.unsubscribe();\n        this.updateField(obj);\n        this.form.markAsPristine();\n        this.form.markAsUntouched();\n        this.subscribeValueChanges();\n    }\n\n    registerOnChange(fn: any) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        if (isDisabled) {\n            this.form.disable();\n        } else {\n            this.form.enable();\n        }\n    }\n\n    private subscribeValueChanges(): void {\n        this.valueChangesSubscription = merge(this.fieldForm.valueChanges, this.form.valueChanges)\n            .pipe(debounceTime(0))\n            .subscribe(() => this.updateValue());\n    }\n\n    private updateField(field: FormlyFieldConfig): void {\n        if (!isObject(field)) {\n            field = {};\n        }\n        this.key.setValue(isString(field.key) ? field.key : '');\n        this.className.setValue(isString(field.className) ? field.className : '');\n        this.fieldGroupClassName.setValue(isString(field.fieldGroupClassName) ? field.fieldGroupClassName : '');\n        this.type.setValue(isString(field.type) ? field.type : '');\n        this.fields = this.fieldsService.getTypeFields(this.type.value);\n        this.fieldForm = this.fb.group({});\n        this.field = cloneDeep(field);\n    }\n\n    private updateValue(): void {\n        if (!this.onChange) {\n            return;\n        }\n\n        const field = this.field;\n        field.key = this.key.value;\n        field.className = this.className.value;\n        field.fieldGroupClassName = this.fieldGroupClassName.value;\n        field.type = this.type.value;\n        this.onChange(field);\n    }\n\n    private onTypeChange(): void {\n        this.valueChangesSubscription.unsubscribe();\n        const type = this.type.value;\n        this.fields = this.fieldsService.getTypeFields(type);\n        const designerType = this.formlyDesignerConfig.types[type];\n        this.fieldArray = designerType && designerType.fieldArray;\n        this.fieldForm = this.fb.group({});\n        this.field = Object.assign({}, this.field);\n        this.subscribeValueChanges();\n    }\n\n    onWrappersSelected(field: FormlyFieldConfig): void {\n        this.updateField(field);\n    }\n\n    private validator(control: FormGroup): { [key: string]: boolean } {\n        const type = control.get('type') as FormControl;\n        const hasType = isString(type.value) && type.value.trim().length > 0;\n\n        const key = control.get('key') as FormControl;\n        const result = { key: false, type: this.showType && !hasType, conflict: false };\n        if (hasType && (!isString(key.value) || key.value.trim().length === 0)) {\n            result.key = true;\n        }\n\n        return result.key || result.type ? result : null;\n    }\n}\n","import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { DesignerTypeOption, FormlyDesignerConfig } from '../formly-designer-config';\n\n@Component({\n    selector: 'formly-designer-field-picker',\n    template: `\n        <form novalidate [formGroup]=\"form\">\n            <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <formly-designer-type-select formControlName=\"type\">\n                    </formly-designer-type-select>\n                    <button type=\"button\" class=\"btn btn-secondary\" [disabled]=\"form.invalid\" (click)=\"add()\">\n                        Add\n                    </button>\n                </div>\n            </div>\n            <div #modal class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n                <div class=\"modal-dialog modal-lg\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\">Add {{ type.value }}</h5>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Cancel\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <formly-designer-field-editor #editor [fieldGroup]=\"fieldEdit.value.fieldGroup\" [formControl]=\"fieldEdit\">\n                            </formly-designer-field-editor>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"onApply()\"\n                                [disabled]=\"editor.invalid\">Apply</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [`\n        .btn:not(:disabled) {\n            cursor: pointer;\n        }\n        .input-group > .btn {\n            border-radius: 0 .25rem .25rem 0;\n        }\n        .input-group, .modal-header {\n            display: flex;\n        }\n        .modal-header {\n            justify-content: space-between;\n        }\n        formly-designer-type-select {\n            flex-grow: 2;\n        }\n    `]\n})\nexport class FieldPickerComponent {\n    @ViewChild('modal') modalRef: ElementRef;\n    @Output() selected = new EventEmitter<FormlyFieldConfig>();\n\n    constructor(\n        fb: FormBuilder,\n        private formlyDesignerConfig: FormlyDesignerConfig\n    ) {\n      this.form = fb.group({\n          type: this.type = fb.control('', Validators.compose([Validators.required, Validators.pattern(/^\\s*\\S.*$/)]))\n      });\n    }\n\n    form: FormGroup;\n    readonly fieldEdit = new FormControl({});\n    readonly type: FormControl;\n    fieldGroup: boolean;\n\n    private get $modal(): JQuery & { modal: (command: string) => void } {\n        return $(this.modalRef.nativeElement) as any;\n    }\n\n    add(): void {\n        const type = this.type.value;\n        const field = {} as FormlyFieldConfig;\n        if (type !== 'fieldGroup') {\n          field.type = type;\n        }\n        const designerType = this.formlyDesignerConfig.types[type] || {} as DesignerTypeOption;\n        if (designerType.fieldArray) {\n            field.fieldArray = { fieldGroup: [] };\n        }\n        if (this.fieldGroup = (type === 'fieldGroup' || designerType.fieldGroup)) {\n            field.fieldGroup = [];\n        }\n        this.fieldEdit.setValue(field);\n        this.$modal.modal('show');\n    }\n\n    onApply(): void {\n        this.selected.emit(this.fieldEdit.value);\n        this.$modal.modal('hide');\n    }\n}\n","import { AfterViewInit, Component, forwardRef, OnDestroy, OnInit } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormlyDesignerConfig } from '../formly-designer-config';\nimport { Subscription, timer } from 'rxjs';\n\nconst TYPE_SELECT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TypeSelectComponent),\n    multi: true\n};\n\n@Component({\n    selector: 'formly-designer-type-select',\n    template: `\n        <select [formControl]=\"formControl\" class=\"custom-select\">\n            <option *ngFor=\"let type of types\" [ngValue]=\"type\">{{ type }}</option>\n        </select>\n    `,\n    styles: [`\n        select {\n            width: 100%;\n        }\n    `],\n    providers: [TYPE_SELECT_CONTROL_VALUE_ACCESSOR]\n})\nexport class TypeSelectComponent implements AfterViewInit, ControlValueAccessor, OnDestroy, OnInit {\n    private valueChangesSubscription: Subscription;\n\n    formControl = new FormControl();\n    types: string[];\n\n    constructor(\n        private formlyDesignerConfig: FormlyDesignerConfig\n    ) { }\n\n    protected onChange = (value: any) => { };\n    protected onTouched = () => { };\n\n    ngAfterViewInit(): void {\n        timer().subscribe(() => {\n            this.types = Object.keys(this.formlyDesignerConfig.types);\n            if (this.types.length > 0) {\n                this.formControl.setValue(this.types[0]);\n            }\n            this.types.push('fieldGroup');\n        });\n    }\n\n    ngOnInit(): void {\n        this.valueChangesSubscription = this.formControl.valueChanges.subscribe(value => {\n            if (this.onChange) {\n                this.onChange(value);\n            }\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.valueChangesSubscription.unsubscribe();\n    }\n\n    writeValue(obj: any) {\n        this.formControl.setValue(obj);\n    }\n\n    registerOnChange(fn: any) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        if (isDisabled) {\n            this.formControl.disable();\n        } else {\n            this.formControl.enable();\n        }\n    }\n}\n","import { Component, forwardRef, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, FormBuilder, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { FieldsService } from '../fields.service';\nimport { Subscription, timer } from 'rxjs';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport { cloneDeep, isObject } from '../util';\n\nconst WRAPPER_EDITOR_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => WrapperEditorComponent),\n    multi: true\n};\n\n@Component({\n    selector: 'formly-designer-wrapper-editor',\n    template: `\n        <form [formGroup]=\"fieldForm\" novalidate>\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <formly-form [form]=\"fieldForm\" [fields]=\"fields\" [model]=\"field\">\n                    </formly-form>\n                    <ng-content></ng-content>\n                </div>\n            </div>\n        </form>\n    `,\n    providers: [\n        WRAPPER_EDITOR_CONTROL_VALUE_ACCESSOR\n    ]\n})\nexport class WrapperEditorComponent implements ControlValueAccessor, OnChanges, OnDestroy, OnInit {\n    @Input() wrapper: string;\n\n    private readonly subscriptions: Subscription[] = [];\n    private valueChangesSubscription: Subscription;\n\n    constructor(\n        private fieldsService: FieldsService,\n        private formBuilder: FormBuilder\n    ) {\n        this.fieldForm = formBuilder.group({});\n    }\n\n    invalid: boolean;\n    fieldForm: FormGroup;\n    field: FormlyFieldConfig;\n    fields: FormlyFieldConfig[] = [];\n\n    protected onChange = (value: any) => { };\n    protected onTouched = () => { };\n\n    ngOnInit(): void {\n        this.subscriptions.push(this.fieldForm.statusChanges\n            .pipe(switchMap(() => timer()))\n            .subscribe(() => this.invalid = this.fieldForm.invalid));\n\n        this.subscribeValueChanges();\n    }\n\n    ngOnDestroy(): void {\n        this.valueChangesSubscription.unsubscribe();\n        this.subscriptions.splice(0).forEach(subscription => subscription.unsubscribe());\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.wrapper) {\n            if (this.valueChangesSubscription) {\n                this.valueChangesSubscription.unsubscribe();\n            }\n            this.fields = this.fieldsService.getWrapperFields(this.wrapper);\n            this.fieldForm = this.formBuilder.group({});\n            this.field = Object.assign({}, this.field);\n            if (this.valueChangesSubscription) {\n                this.subscribeValueChanges();\n            }\n        }\n    }\n\n    writeValue(obj: any) {\n        this.valueChangesSubscription.unsubscribe();\n        if (!isObject(obj)) {\n            obj = {};\n        }\n        this.fields = this.fieldsService.getWrapperFields(this.wrapper);\n        this.fieldForm = this.formBuilder.group({});\n        this.field = cloneDeep(obj);\n        this.subscribeValueChanges();\n    }\n\n    registerOnChange(fn: any) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        if (isDisabled) {\n            this.fieldForm.disable();\n        } else {\n            this.fieldForm.enable();\n        }\n    }\n\n    private subscribeValueChanges(): void {\n        this.valueChangesSubscription = this.fieldForm.valueChanges\n            .pipe(debounceTime(0))\n            .subscribe(() => this.updateValue());\n    }\n\n    private updateValue(): void {\n        if (!this.onChange) {\n            return;\n        }\n\n        this.onChange(this.field);\n    }\n}\n","import { AfterViewInit, Component, forwardRef, OnDestroy, OnInit } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormlyDesignerConfig } from '../formly-designer-config';\nimport { Subscription, timer } from 'rxjs';\n\nconst WRAPPER_SELECT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => WrapperSelectComponent),\n    multi: true\n};\n\n@Component({\n    selector: 'formly-designer-wrapper-select',\n    template: `\n        <select [formControl]=\"formControl\" class=\"custom-select\">\n            <option *ngFor=\"let wrapper of wrappers\" [ngValue]=\"wrapper\">{{ wrapper }}</option>\n        </select>\n    `,\n    styles: [`\n        select {\n            width: 100%;\n        }\n    `],\n    providers: [WRAPPER_SELECT_CONTROL_VALUE_ACCESSOR]\n})\nexport class WrapperSelectComponent implements AfterViewInit, ControlValueAccessor, OnDestroy, OnInit {\n    private valueChangesSubscription: Subscription;\n\n    constructor(\n        private formlyDesignerConfig: FormlyDesignerConfig\n    ) { }\n\n    formControl = new FormControl();\n    wrappers: string[];\n\n    protected onChange = (value: any) => { };\n    protected onTouched = () => { };\n\n    ngAfterViewInit(): void {\n        timer().subscribe(() => {\n            this.wrappers = Object.keys(this.formlyDesignerConfig.wrappers);\n            if (this.wrappers.length > 0) {\n                this.formControl.setValue(this.wrappers[0]);\n            }\n        });\n    }\n\n    ngOnInit(): void {\n        this.valueChangesSubscription = this.formControl.valueChanges.subscribe(value => {\n            if (this.onChange) {\n                this.onChange(value);\n            }\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.valueChangesSubscription.unsubscribe();\n    }\n\n    writeValue(obj: any) {\n        this.formControl.setValue(obj);\n    }\n\n    registerOnChange(fn: any) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        if (isDisabled) {\n            this.formControl.disable();\n        } else {\n            this.formControl.enable();\n        }\n    }\n}\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { FormlyDesignerConfig } from '../formly-designer-config';\nimport { FormlyDesignerService } from '../formly-designer.service';\nimport { cloneDeep, isArray, isObject } from '../util';\n\ndeclare var $;\n\n@Component({\n    selector: 'formly-designer-wrapper-picker',\n    template: `\n        <form novalidate [formGroup]=\"form\">\n            <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <formly-designer-wrapper-select formControlName=\"wrapper\">\n                    </formly-designer-wrapper-select>\n                    <button type=\"button\" class=\"btn btn-secondary\" [disabled]=\"form.invalid\" (click)=\"add()\">\n                        Add\n                    </button>\n                </div>\n            </div>\n            <div #modal class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n                <div class=\"modal-dialog modal-lg\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\">Add {{ wrapper }}</h5>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Cancel\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <formly-designer-wrapper-editor #editor [formControl]=\"fieldEdit\" [wrapper]=\"wrapper\">\n                            </formly-designer-wrapper-editor>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"onApply()\"\n                                [disabled]=\"editor.invalid\">Apply</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [`\n        :host {\n            width: inherit;\n        }\n        .btn:not(:disabled) {\n            cursor: pointer;\n        }\n        .input-group > .btn {\n            border-radius: 0 .25rem .25rem 0;\n        }\n        .input-group, .modal-header {\n            display: flex;\n        }\n        .modal-header {\n            justify-content: space-between;\n        }\n        formly-designer-wrapper-select {\n            flex-grow: 2;\n        }\n    `]\n})\nexport class WrapperPickerComponent implements OnInit {\n    @ViewChild('modal') modalRef: ElementRef;\n    @Input() field: FormlyFieldConfig;\n    @Output() selected = new EventEmitter<FormlyFieldConfig>();\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private formlyDesignerConfig: FormlyDesignerConfig,\n        private formlyDesignerService: FormlyDesignerService\n    ) { }\n\n    form: FormGroup;\n    fieldEdit = new FormControl({});\n\n    get wrapper(): string {\n        return this.form.get('wrapper').value;\n    }\n\n    private get $modal(): JQuery & { modal: (command: string) => void } {\n        return $(this.modalRef.nativeElement);\n    }\n\n    ngOnInit(): void {\n        this.form = this.formBuilder.group({\n            wrapper: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*\\S.*$/)])]\n        });\n    }\n\n    add(): void {\n        if (isObject(this.field)) {\n            const field = cloneDeep(this.field);\n            if (isArray(field.wrappers) && field.wrappers.length > 0) {\n                field.wrappers.splice(field.wrappers.length - 1, 0, this.wrapper);\n            } else {\n                field.wrappers = [this.wrapper];\n            }\n            this.fieldEdit.setValue(field);\n\n            const fields = this.formlyDesignerConfig.wrappers[this.wrapper].fields;\n            if (isArray(fields) && fields.length > 0) {\n                this.$modal.modal('show');\n            } else {\n                this.onApply();\n            }\n        }\n    }\n\n    onApply(): void {\n        this.field = this.formlyDesignerService.convertField(this.fieldEdit.value);\n        this.selected.emit(this.fieldEdit.value);\n        this.$modal.modal('hide');\n    }\n}\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { FormlyDesignerConfig } from '../formly-designer-config';\nimport { FormlyDesignerService } from '../formly-designer.service';\nimport { cloneDeep, isArray, isObject } from '../util';\n\n@Component({\n    selector: 'formly-designer-wrappers-picker',\n    template: `\n        <div class=\"form-group\">\n            <div class=\"input-group\">\n                <formly-designer-wrapper-picker [field]=\"field\" (selected)=\"onWrapperSelected($event)\">\n                </formly-designer-wrapper-picker>\n            </div>\n            <div *ngFor=\"let wrapper of wrappers; let i = index\" class=\"badge badge-default noselect\" (click)=\"edit(i)\">\n                {{ wrapper }}&nbsp;&nbsp;<i class=\"fa fa-times\" aria-hidden=\"true\" (click)=\"remove(i)\"></i>\n            </div>\n        </div>\n        <div #modal class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n            <div class=\"modal-dialog modal-lg\" role=\"document\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\">Edit {{ wrapper }}</h5>\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Cancel\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <formly-designer-wrapper-editor #editor [formControl]=\"fieldEdit\" [wrapper]=\"wrapper\">\n                        </formly-designer-wrapper-editor>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onApply()\"\n                            [disabled]=\"editor.invalid\">Apply</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [`\n        .badge {\n            margin-right: .25em;\n        }\n        .badge {\n            cursor: pointer;\n        }\n        .noselect {\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n        }\n    `]\n})\nexport class WrappersPickerComponent implements OnChanges {\n    @ViewChild('modal') modalRef: ElementRef;\n    @Input() field: FormlyFieldConfig;\n    @Output() selected = new EventEmitter<FormlyFieldConfig>();\n\n    wrapper: string;\n    fieldEdit = new FormControl({});\n\n    wrappers: string[] = [];\n\n    constructor(\n        private formlyDesignerConfig: FormlyDesignerConfig,\n        private formlyDesignerService: FormlyDesignerService\n    ) { }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.field) {\n            this.wrappers = this.formlyDesignerService.getWrappers(changes.field.currentValue);\n        }\n    }\n\n    private get $modal(): JQuery & { modal: (command: string) => void } {\n        return $(this.modalRef.nativeElement) as any;\n    }\n\n    onWrapperSelected(field: FormlyFieldConfig): void {\n        this.selected.emit(field);\n    }\n\n    edit(index: number): void {\n        this.wrapper = this.wrappers[index];\n        if (isObject(this.field)) {\n            const field = cloneDeep(this.field);\n            if (isArray(field.wrappers)) {\n                this.fieldEdit.setValue(field);\n\n                const fields = this.formlyDesignerConfig.wrappers[this.wrapper].fields;\n                if (isArray(fields) && fields.length > 0) {\n                    this.$modal.modal('show');\n                } else {\n                    this.onApply();\n                }\n            }\n        }\n    }\n\n    remove(index: number): void {\n        const fieldWrappersIndex = this.field.wrappers.indexOf(this.wrappers[index]);\n        if (fieldWrappersIndex < 0) {\n            return;\n        }\n\n        const field = cloneDeep(this.field);\n        field.wrappers.splice(fieldWrappersIndex, 1);\n        this.field = this.formlyDesignerService.convertField(field);\n        this.selected.emit(this.field);\n    }\n\n    onApply(): void {\n        this.field = this.formlyDesignerService.convertField(this.fieldEdit.value);\n        this.selected.emit(this.field);\n        this.$modal.modal('hide');\n    }\n}\n","import { cloneDeep, isArray, isObject } from './util';\n\nexport function decycle<T>(value: T): T {\n    if (value == null) {\n        return value;\n    }\n\n    let nextId = 1;\n    const objects = new Map<any, number>();\n    return traverse(cloneDeep(value), (key, v) => {\n        if (isObject(v)) {\n            if (objects.has(v)) {\n                let id = objects.get(v);\n                if (!id) {\n                    v.$id = id = nextId++;\n                    objects.set(v, id);\n                }\n                return { $ref: id };\n            } else {\n                objects.set(v, 0);\n            }\n        }\n    });\n}\n\nfunction traverse<T>(obj: T, replace: (key, value) => any): T {\n    if (isArray(obj)) {\n        for (let i = 0; i < (obj as any).length; i++) {\n            traverseValue.bind(obj, i, obj[i], replace)();\n        }\n    } else if (isObject(obj)) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                traverseValue.bind(obj, key, obj[key], replace)();\n            }\n        }\n    }\n    return obj;\n}\n\nfunction traverseValue(key: any, value: any, replace: (key, value) => any): void {\n    const replacement = replace(key, value);\n    if (replacement === undefined) {\n        traverse(value, replace);\n    } else {\n        this[key] = replacement;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { decycle } from '../json-helper';\n\n@Pipe({ name: 'decycle' })\nexport class DecyclePipe implements PipeTransform {\n    transform(value: any): any {\n        return decycle(value);\n    }\n}\n","import { NgModule, ModuleWithProviders, ANALYZE_FOR_ENTRY_COMPONENTS } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FieldEditorComponent } from './components/field-editor';\nimport { FieldPickerComponent } from './components/field-picker';\nimport { FieldsService } from './fields.service';\nimport { FormlyConfig, FormlyForm, FormlyModule } from '@ngx-formly/core';\nimport { FormlyDesignerComponent } from './formly-designer.component';\nimport { DesignerConfigOption, FormlyDesignerConfig, FORMLY_DESIGNER_CONFIG_TOKEN } from './formly-designer-config';\nimport { config, fieldComponents, wrapperComponents } from './config';\nimport { TypeSelectComponent } from './components/type-select';\nimport { WrapperEditorComponent } from './components/wrapper-editor';\nimport { WrapperSelectComponent } from './components/wrapper-select';\nimport { WrapperPickerComponent } from './components/wrapper-picker';\nimport { WrappersPickerComponent } from './components/wrappers-picker';\nimport { DecyclePipe } from './pipes/decycle';\nimport 'jquery';\n\n@NgModule({\n    declarations: [\n        FieldEditorComponent,\n        FieldPickerComponent,\n        FormlyDesignerComponent,\n        TypeSelectComponent,\n        WrapperEditorComponent,\n        WrapperSelectComponent,\n        WrapperPickerComponent,\n        WrappersPickerComponent,\n\n        DecyclePipe,\n\n        fieldComponents,\n        wrapperComponents\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n\n        FormlyModule.forChild()\n    ],\n    exports: [\n        FormlyDesignerComponent\n    ],\n    providers: [\n        FormlyDesignerConfig,\n        FieldsService\n    ],\n    entryComponents: [FormlyForm]\n})\nexport class FormlyDesignerModule {\n    constructor(\n        formlyConfig: FormlyConfig\n    ) {\n        formlyConfig.addConfig(config);\n    }\n\n    static forRoot(designerConfig: DesignerConfigOption = {}): ModuleWithProviders {\n        return {\n            ngModule: FormlyDesignerModule,\n            providers: [\n                { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: [fieldComponents, wrapperComponents], multi: true },\n                { provide: FORMLY_DESIGNER_CONFIG_TOKEN, useValue: designerConfig, multi: true }\n            ]\n        };\n    }\n}\n"],"names":["tslib_1.__extends","tslib_1.__values"],"mappings":"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"}

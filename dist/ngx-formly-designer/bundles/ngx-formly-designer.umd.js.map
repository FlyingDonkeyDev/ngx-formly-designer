{"version":3,"file":"ngx-formly-designer.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://ngx-formly-designer/lib/wrappers/designer.ts","ng://ngx-formly-designer/lib/formly-designer-config.ts","ng://ngx-formly-designer/lib/util.ts","ng://ngx-formly-designer/lib/fields.service.ts","ng://ngx-formly-designer/lib/formly-designer.service.ts","ng://ngx-formly-designer/lib/wrappers/field-designer.ts","ng://ngx-formly-designer/lib/wrappers/field-group-designer.ts","ng://ngx-formly-designer/lib/run/designer.ts","ng://ngx-formly-designer/lib/config.ts","ng://ngx-formly-designer/lib/formly-designer.component.ts","ng://ngx-formly-designer/lib/components/field-editor.ts","ng://ngx-formly-designer/lib/components/field-picker.ts","ng://ngx-formly-designer/lib/components/type-select.ts","ng://ngx-formly-designer/lib/components/wrapper-editor.ts","ng://ngx-formly-designer/lib/components/wrapper-select.ts","ng://ngx-formly-designer/lib/components/wrapper-picker.ts","ng://ngx-formly-designer/lib/components/wrappers-picker.ts","ng://ngx-formly-designer/lib/json-helper.ts","ng://ngx-formly-designer/lib/pipes/decycle.ts","ng://ngx-formly-designer/lib/formly-designer.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n    selector: 'formly-designer-wrapper',\n    template: `\n        <ng-template #fieldComponent></ng-template>\n    `\n})\nexport class FormlyDesignerWrapperComponent extends FieldWrapper {\n    @ViewChild('fieldComponent', { read: ViewContainerRef }) fieldComponent: ViewContainerRef;\n}\n","import { Injectable, Inject, InjectionToken } from '@angular/core';\nimport { FormlyConfig, FormlyFieldConfig } from '@ngx-formly/core';\n\nexport const FORMLY_DESIGNER_CONFIG_TOKEN = new InjectionToken<string>('FORMLY_DESIGNER_CONFIG_TOKEN');\n\n@Injectable()\nexport class FormlyDesignerConfig {\n    constructor(\n        @Inject(FORMLY_DESIGNER_CONFIG_TOKEN) configs: DesignerConfigOption[] = [],\n        private formlyConfig: FormlyConfig\n    ) {\n        configs.forEach(config => this.addConfig(config));\n    }\n\n    types: {[name: string]: DesignerTypeOption} = {};\n    wrappers: {[name: string]: DesignerOption} = {};\n    settings: DesignerSettings = { showClassName: true };\n\n    addConfig(config: DesignerConfigOption): void {\n        if (config.settings) {\n            this.setSettings(config.settings);\n        }\n        if (config.types) {\n            this.setType(config.types);\n        }\n        if (config.wrappers) {\n            this.setWrapper(config.wrappers);\n        }\n    }\n\n    setSettings(settings: DesignerSettings): void {\n        if (settings.showClassName !== undefined) {\n            this.settings.showClassName = !!settings.showClassName;\n        }\n    }\n\n    setType(options: DesignerTypeOption | DesignerTypeOption[]): void {\n        if (Array.isArray(options)) {\n            options.forEach((option) => {\n                this.setType(option);\n            });\n        } else {\n            // Throw if type isn't part of the formly config\n            this.formlyConfig.getType(options.name);\n\n            if (!this.types[options.name]) {\n                this.types[options.name] = <DesignerTypeOption>{};\n            }\n\n            const type = this.types[options.name];\n            type.name = options.name;\n            type.fieldArray = !!options.fieldArray;\n            type.fieldGroup = !!options.fieldGroup;\n            type.fields = options.fields;\n        }\n    }\n\n    setWrapper(options: DesignerOption | DesignerOption[]): void {\n        if (Array.isArray(options)) {\n            options.forEach((option) => {\n                this.setWrapper(option);\n            });\n        } else {\n            // Throw if wrapper isn't part of the formly config\n            this.formlyConfig.getWrapper(options.name);\n\n            if (!this.wrappers[options.name]) {\n                this.wrappers[options.name] = <DesignerOption>{};\n            }\n\n            const wrapper = this.wrappers[options.name];\n            wrapper.name = options.name;\n            wrapper.fields = options.fields;\n        }\n    }\n}\n\nexport interface DesignerOption {\n    name: string;\n    fields?: FormlyFieldConfig[];\n}\n\nexport interface DesignerTypeOption extends DesignerOption {\n    fieldArray?: boolean;\n    fieldGroup?: boolean;\n}\n\nexport interface DesignerSettings {\n    showClassName?: boolean;\n    filterWrapper?: (wrapper: string, field: FormlyFieldConfig) => boolean;\n}\n\nexport interface DesignerConfigOption {\n    settings?: DesignerSettings;\n    types?: DesignerTypeOption[];\n    wrappers?: DesignerOption[];\n}\n","import { FormlyFieldConfig } from '@ngx-formly/core';\n\nexport { cloneDeep, get, set, unset } from 'lodash-es';\n\nconst keyPathMemberName = '_formlyDesignerKeyPath';\n\n// Source: https://github.com/formly-js/ngx-formly/blob/master/src/core/src/lib/utils.ts\nexport function getKeyPath(field: { key?: string | string[], fieldGroup?: any, fieldArray?: any }): (string | number)[] {\n    /* We store the keyPath in the field for performance reasons. This function will be called frequently. */\n    if (!(<any>field)[keyPathMemberName] || (<any>field)[keyPathMemberName].key !== field.key) {\n        let keyPath: (string | number)[] = [];\n        if (field.key) {\n            /* Also allow for an array key, hence the type check  */\n            const pathElements = typeof field.key === 'string' ? field.key.split('.') : field.key;\n            for (let pathElement of pathElements) {\n                if (typeof pathElement === 'string') {\n                    /* replace paths of the form names[2] by names.2, cfr. angular formly */\n                    pathElement = pathElement.replace(/\\[(\\w+)\\]/g, '.$1');\n                    keyPath = keyPath.concat(pathElement.split('.'));\n                } else {\n                    keyPath.push(pathElement);\n                }\n            }\n            for (let i = 0; i < keyPath.length; i++) {\n                const pathElement = keyPath[i];\n                if (typeof pathElement === 'string' && /^\\d+$/.test(pathElement)) {\n                    keyPath[i] = parseInt(pathElement, 10);\n                }\n            }\n        }\n        (<any>field)[keyPathMemberName] = {\n            key: field.key,\n            path: keyPath,\n        };\n    }\n\n    return (<any>field)[keyPathMemberName].path.slice();\n}\n\n\nexport function equalType(a: FormlyFieldConfig, b: FormlyFieldConfig): boolean {\n    return (!a.fieldArray === !b.fieldArray) && (!a.fieldGroup === !b.fieldGroup);\n}\n\nexport function traverseFields(fields: FormlyFieldConfig[],\n    callback: (field: FormlyFieldConfig, path?: (string | number)[], parent?: FormlyFieldConfig) => boolean | any,\n    path?: (string | number)[],\n    parent?: FormlyFieldConfig): boolean | any {\n    path = path || [];\n    for (const field of fields) {\n        if (callback(field, path, parent)) {\n            return true;\n        }\n        if (field.fieldArray) {\n            if (traverseFields([field.fieldArray], callback, path.concat(getKeyPath(field)), field)) {\n                return true;\n            }\n        } else if (field.fieldGroup) {\n            if (traverseFields(field.fieldGroup, callback, path.concat(getKeyPath(field)), field)) {\n                return true;\n            }\n        }\n    }\n}\n\n// https://stackoverflow.com/a/40294058\n// export const cloneDeep = (obj, hash = new WeakMap()): typeof obj => {\n//   if (Object(obj) !== obj) return obj; // primitives\n//   if (hash.has(obj)) return hash.get(obj); // cyclic reference\n//   const result = obj instanceof Date ? new Date(obj)\n//     : obj instanceof RegExp ? new RegExp(obj.source, obj.flags)\n//       : obj.constructor ? new obj.constructor()\n//         : Object.create(null);\n//   hash.set(obj, result);\n//   if (obj instanceof Map)\n//     Array.from(obj, ([key, val]) => result.set(key, cloneDeep(val, hash)));\n//   return Object.assign(result, ...Object.keys(obj).map(\n//     key => ({ [key]: cloneDeep(obj[key], hash) })));\n// };\n\nexport const isArray = Array.isArray;\n\n\n// https://stackoverflow.com/a/28953167\nexport const isEmpty = (val: any): boolean => {\n    if (val === undefined)\n        return true;\n\n    else if (typeof (val) === 'function' || typeof (val) === 'number' || typeof (val) === 'boolean'\n        || Object.prototype.toString.call(val) === '[object Date]')\n        return false;\n\n    else if (val == null || val.length === 0)        // null or 0 length array\n        return true;\n\n    else if (typeof (val) === 'object') {\n        // empty object\n\n        let r;\n\n        for (const _ in val)\n            r = false;\n\n        return r;\n    }\n\n    return false;\n};\n\nexport const isFunction = (val: any): boolean => typeof val === 'function';\n\nexport const isObject = (val: any): boolean => typeof val === 'object' && val != null;\n\nexport const isString = (val: any): boolean => typeof val === 'string' || val instanceof String;\n","import { Injectable } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { DesignerOption, FormlyDesignerConfig } from './formly-designer-config';\nimport { cloneDeep, equalType, getKeyPath, isObject, traverseFields } from './util';\n\n@Injectable()\nexport class FieldsService {\n    constructor(\n        private formlyDesignerConfig: FormlyDesignerConfig\n    ) { }\n\n    getFullKeyPath(field: FormlyFieldConfig, fields: FormlyFieldConfig[]): (string | number)[] {\n        let keyPath = [];\n        if (field && field.key) {\n            const parents = new Map<FormlyFieldConfig, FormlyFieldConfig>();\n            traverseFields(fields, (f, path, parent) => {\n                parents.set(f, parent);\n            });\n\n            keyPath = getKeyPath(field);\n            let cur = parents.get(field);\n            while (cur) {\n                keyPath = getKeyPath(cur).concat(keyPath);\n                cur = parents.get(cur);\n            }\n        }\n        return keyPath;\n    }\n\n    getTypeFields(type: string): FormlyFieldConfig[] {\n        return this.getFields(type, 'type');\n    }\n\n    getWrapperFields(wrapper: string): FormlyFieldConfig[] {\n        return this.getFields(wrapper, 'wrapper');\n    }\n\n    /** Check the field for control type conflict */\n    checkField(field: FormlyFieldConfig, fields: FormlyFieldConfig[], parent?: FormlyFieldConfig): boolean {\n        const fullPathByField = new Map<FormlyFieldConfig, (string | number)[]>();\n\n        const newPath = this.getFullKeyPath(parent || {}, fields).concat(getKeyPath(field));\n        const length = newPath.length;\n        return !traverseFields(fields, (f, p) => {\n            const path = fullPathByField.get(f) || fullPathByField.set(f, (p || []).concat(getKeyPath(f))).get(f);\n            if (path.length !== length) {\n                return;\n            }\n            for (let i = 0; i < length; i++) {\n                if (path[i] !== newPath[i]) {\n                    return;\n                }\n            }\n            return !equalType(field, f);\n        });\n    }\n\n    mutateField(field: FormlyFieldConfig, designerField: boolean): FormlyFieldConfig {\n        if (isObject(field.templateOptions)) {\n            field.templateOptions['$designerField'] = designerField;\n        } else {\n            field.templateOptions = { $designerField: designerField };\n        }\n        if (field.fieldGroup) {\n            this.mutateFields(field.fieldGroup, designerField);\n        } else if (field.fieldArray && field.fieldArray.fieldGroup) {\n            if (designerField) {\n                this.mutateField(field.fieldArray, designerField);\n            } else {\n                // Treating fieldArrays as fieldGroups\n                field.templateOptions['$fieldArray'] = { type: field.type };\n                field.fieldGroup = field.fieldArray.fieldGroup;\n                delete field.fieldArray;\n                delete field.type;\n\n                this.mutateFields(field.fieldGroup, designerField);\n            }\n        }\n        return field;\n    }\n\n    mutateFields(fields: FormlyFieldConfig[], designerFields: boolean): void {\n        fields.forEach(field => this.mutateField(field, designerFields));\n    }\n\n    private getFields(name: string, type: string): FormlyFieldConfig[] {\n        const designerOption = (name ? this.getDesignerOptions(type)[name] || {} : {}) as DesignerOption;\n        const fields = cloneDeep(designerOption.fields || []);\n        this.mutateFields(fields, true);\n        return fields;\n    }\n\n    private getDesignerOptions(type: string): { [name: string]: DesignerOption } {\n        if (type === 'type') {\n            return this.formlyDesignerConfig.types;\n        }\n        if (type === 'wrapper') {\n            return this.formlyDesignerConfig.wrappers;\n        }\n        return {};\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, FormArray, FormGroup } from '@angular/forms';\nimport { FieldsService } from './fields.service';\nimport { FormlyConfig, FormlyFieldConfig } from '@ngx-formly/core';\nimport { FormlyDesignerConfig } from './formly-designer-config';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { cloneDeep, get, isArray, isEmpty, isFunction, isString, set, unset } from './util';\n\n@Injectable()\nexport class FormlyDesignerService {\n  constructor(\n    private designerConfig: FormlyDesignerConfig,\n    private fieldsService: FieldsService,\n    private formlyConfig: FormlyConfig\n  ) { }\n\n  private readonly _disabled = new BehaviorSubject<boolean>(false);\n  private readonly _fields = new BehaviorSubject<FormlyFieldConfig[]>([]);\n  private readonly _model = new BehaviorSubject<any>({});\n\n  get disabled(): boolean {\n    return this._disabled.value;\n  }\n\n  set disabled(value: boolean) {\n    this._disabled.next(!!value);\n  }\n\n  get disabled$(): Observable<boolean> {\n    return this._disabled.asObservable();\n  }\n\n  get fields(): FormlyFieldConfig[] {\n    return this._fields.value;\n  }\n\n  set fields(value: FormlyFieldConfig[]) {\n    // Prune the fields because ngx-formly pollutes them with internal state\n    // causing incorrect behavior when re-applied.\n    const fields = this.createPrunedFields(isArray(value) ? value : []);\n    this._fields.next(fields);\n  }\n\n  get fields$(): Observable<FormlyFieldConfig[]> {\n    return this._fields.asObservable();\n  }\n\n  get model(): any {\n    return this._model.value;\n  }\n\n  set model(value: any) {\n    this._model.next(value == null ? {} : value);\n  }\n\n  get model$(): Observable<any> {\n    return this._model.asObservable();\n  }\n\n  addField(field: FormlyFieldConfig): void {\n    this.fieldsService.mutateField(field, false);\n\n    const fields = cloneDeep(this.fields);\n    fields.push(field);\n\n    this.fields = fields;\n    this.model = cloneDeep(this.model);\n  }\n\n  removeField(field: FormlyFieldConfig): void {\n    this.unsetField(field);\n    if (this.replaceField(this.fields, field, undefined)) {\n      this.removeControl(field.formControl);\n    }\n\n    this.fields = cloneDeep(this.fields);\n    this.model = cloneDeep(this.model);\n  }\n\n  updateField(original: FormlyFieldConfig, modified: FormlyFieldConfig): void {\n    const pruned = this.fieldsService.mutateField(this.createPrunedField(modified), false);\n\n    if (this.replaceField(this.fields, original, pruned)) {\n      if (original.formControl !== pruned.formControl) {\n        this.unsetField(original);\n        this.removeControl(original.formControl);\n      }\n\n      this.fields = cloneDeep(this.fields);\n      this.model = cloneDeep(this.model);\n    }\n  }\n\n  convertField(field: FormlyFieldConfig): FormlyFieldConfig {\n    return this.createPrunedField(field);\n  }\n\n  convertFields(fields: FormlyFieldConfig[]): FormlyFieldConfig[] {\n    return this.createPrunedFields(fields);\n  }\n\n  createDesignerFields(): FormlyFieldConfig[] {\n    return this.createPrunedFields(this.fields);\n  }\n\n  private createPrunedFields(fields: FormlyFieldConfig[]): FormlyFieldConfig[] {\n    const prunedFields: FormlyFieldConfig[] = [];\n    if (isArray(fields)) {\n      fields.forEach(field => {\n        const pruned = this.createPrunedField(field);\n        if (field.fieldArray) {\n          pruned.fieldArray = this.createPrunedField(field.fieldArray);\n        } else if (field.fieldGroup && !pruned.fieldArray) {\n          pruned.fieldGroup = this.createPrunedFields(field.fieldGroup);\n        }\n        if (Object.keys(pruned).length > 0) {\n          prunedFields.push(pruned);\n        }\n      });\n    }\n    return prunedFields;\n  }\n\n  getWrappers(field: FormlyFieldConfig): string[] {\n    if (!field || !isArray(field.wrappers)) {\n      return [];\n    }\n\n    const clonedField = cloneDeep(field);\n    let wrappers = clonedField.wrappers = (clonedField.wrappers || []);\n    if (isFunction(this.designerConfig.settings.filterWrapper)) {\n      wrappers = wrappers.filter(w => this.designerConfig.settings.filterWrapper(w, clonedField));\n    }\n\n    // Determine wrappers part of the formly configuration (static and dynamic) to exclude them from the result\n    const staticWrappers = field.type ? this.formlyConfig.getType(field.type).wrappers || [] : [];\n    const typeWrappers = staticWrappers\n      .concat(this.formlyConfig.templateManipulators.preWrapper.map(m => m(clonedField)))\n      .concat(this.formlyConfig.templateManipulators.postWrapper.map(m => m(clonedField)))\n      .filter(w => w);\n\n    // Remove wrappers part of the formly configuration from the result\n    if (typeWrappers.length > 0) {\n      for (let i = wrappers.length - 1; i >= 0; i--) {\n        for (let j = typeWrappers.length - 1; j >= 0; j--) {\n          if (wrappers[i] === typeWrappers[j]) {\n            typeWrappers.splice(j, 1);\n            wrappers.splice(i, 1);\n            break;\n          }\n        }\n      }\n    }\n    return wrappers;\n  }\n\n  /** Prunes the field of paths not identified in the designer config */\n  private createPrunedField(field: FormlyFieldConfig): FormlyFieldConfig {\n    const type = get(field, 'templateOptions.$fieldArray.type', field.type);\n    const designerType = this.designerConfig.types[type];\n    const pruned: FormlyFieldConfig = isEmpty(field.key) ? {} : { key: field.key };\n\n    if (designerType) {\n      pruned.type = type;\n      this.applyProperties(field, pruned, designerType.fields);\n      if (designerType.fieldArray) {\n        pruned.fieldArray = {\n          fieldGroup: this.createPrunedFields(field.fieldGroup)\n        };\n      }\n    }\n\n    if (isArray(field.fieldGroup) && !isArray(pruned.fieldArray)) {\n      pruned.fieldGroup = this.createPrunedFields(field.fieldGroup);\n\n      let fieldGroupClassName: string;\n      if (isString(field.fieldGroupClassName) && (fieldGroupClassName = field.fieldGroupClassName.trim()).length > 0) {\n        pruned.fieldGroupClassName = fieldGroupClassName;\n      }\n    }\n\n    let className: string;\n    if (isString(field.className) && (className = field.className.trim()).length > 0) {\n      pruned.className = className;\n    }\n\n    const wrappers = this.getWrappers(field);\n    if (wrappers.length > 0) {\n      pruned.wrappers = wrappers;\n      const designerWrapperFields = wrappers.map(wrapper => this.designerConfig.wrappers[wrapper])\n        .filter(designerOption => designerOption && isArray(designerOption.fields))\n        .reduce<FormlyFieldConfig[]>((previous, current) => previous.concat(current.fields), []);\n      this.applyProperties(field, pruned, designerWrapperFields);\n    }\n    return pruned;\n  }\n\n  private applyProperties(field: FormlyFieldConfig, designed: FormlyFieldConfig, designerFields: FormlyFieldConfig[]): void {\n    if (isArray(designerFields)) {\n      designerFields.forEach(designerField => {\n        const value = get(field, designerField.key);\n        if (value != null && (!isString(value) || value.length > 0) && value !== designerField.defaultValue) {\n          set(designed, designerField.key, value);\n        }\n      });\n    }\n  }\n\n  private replaceField(fields: FormlyFieldConfig[], original: FormlyFieldConfig, modified: FormlyFieldConfig): boolean {\n    if (isArray(fields)) {\n      const l = fields.length;\n      for (let i = 0; i < l; i++) {\n        const field = fields[i];\n        if (field === original) {\n          if (modified == null) {\n            fields.splice(i, 1);\n          } else {\n            fields[i] = modified;\n          }\n          return true;\n        }\n        if (field.fieldGroup && this.replaceField(field.fieldGroup, original, modified)) {\n          return true;\n        }\n        if (field.fieldArray && this.replaceFieldArray(field, original, modified)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  private replaceFieldArray(parent: FormlyFieldConfig, original: FormlyFieldConfig, modified: FormlyFieldConfig): boolean {\n    const fieldArray = parent.fieldArray;\n    if (fieldArray === original) {\n      parent.fieldArray = modified;\n      return true;\n    }\n    if (fieldArray.fieldGroup && this.replaceField(fieldArray.fieldGroup, original, modified)) {\n      return true;\n    }\n    return fieldArray.fieldArray && this.replaceFieldArray(fieldArray, original, modified);\n  }\n\n  private buildPath(key: string, path: string, arrayNext: boolean = false) {\n    return path ? key + (arrayNext ? path : '.' + path) : key;\n  }\n\n  private path(control: AbstractControl, includeSelf: boolean = true): string {\n    let path = '';\n    let arrayNext = false;\n\n    if (!includeSelf) {\n      control = (control || {} as AbstractControl).parent;\n    }\n    for (let child = control, parent = (control || {} as AbstractControl).parent; !!parent; child = parent, parent = parent.parent) {\n      if (parent instanceof FormGroup) {\n        for (const key in parent.controls) {\n          if (parent.controls[key] === child) {\n            path = this.buildPath(key, path, arrayNext);\n            arrayNext = false;\n            break;\n          }\n        }\n      } else if (parent instanceof FormArray) {\n        for (let i = 0; i < parent.length; i++) {\n          if (parent.at(i) === child) {\n            path = this.buildPath('[' + i + ']', path, arrayNext);\n            arrayNext = true;\n            break;\n          }\n        }\n      }\n    }\n    return path;\n  }\n\n  private unsetField(field: FormlyFieldConfig): void {\n    if (field) {\n      if (field.fieldArray) {\n        this.unsetField(field.fieldArray);\n      }\n      if (field.fieldGroup) {\n        field.fieldGroup.forEach(f => this.unsetField(f));\n      }\n      if (field.formControl) {\n        const path = this.path(field.formControl);\n        unset(this.model, path);\n      }\n    }\n  }\n\n  private removeControl(control: AbstractControl): void {\n    const parent = control ? control.parent : undefined;\n    if (parent instanceof FormGroup) {\n      for (const key in parent.controls) {\n        if (parent.controls[key] === control) {\n          parent.removeControl(key);\n          return;\n        }\n      }\n    } else if (parent instanceof FormArray) {\n      for (let i = 0; i < parent.length; i++) {\n        if (parent.at(i) === control) {\n          parent.removeAt(i);\n          return;\n        }\n      }\n    }\n  }\n}\n","import { AfterContentChecked, AfterContentInit, ChangeDetectorRef, Component, ElementRef,\n    NgZone, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { FieldWrapper } from '@ngx-formly/core';\nimport { FieldsService } from '../fields.service';\nimport { FormlyDesignerConfig } from '../formly-designer-config';\nimport { FormlyDesignerService } from '../formly-designer.service';\nimport { cloneDeep } from '../util';\nimport { timer } from 'rxjs';\n\n@Component({\n    selector: 'formly-designer-field-wrapper',\n    template: `\n        <div *ngIf=\"!editing\" class=\"bg-info text-white control-panel\">\n            <span class=\"type\">{{ type }}</span>\n            <div class=\"btn-group\">\n                <button type=\"button\" class=\"btn\" data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\" aria-expanded=\"false\" title=\"wrappers\">\n                    <i class=\"fa fa-clone\" aria-hidden=\"true\"></i>\n                </button>\n                <div class=\"dropdown-menu dropdown-menu-right\">\n                    <button class=\"dropdown-item\" type=\"button\" [disabled]=\"disabled\" title=\"add wrapper\"\n                        *ngFor=\"let wrapper of wrappers\" (click)=\"addWrapper(wrapper)\">\n                        {{ wrapper }}\n                    </button>\n                    <ng-container *ngIf=\"fieldWrappers.length\">\n                        <div *ngIf=\"wrappers.length\" class=\"dropdown-divider\"></div>\n                        <button class=\"dropdown-item\" type=\"button\" [disabled]=\"disabled\"\n                            *ngFor=\"let wrapper of fieldWrappers; let i=index\" (click)=\"removeWrapper(i)\">\n                            {{ wrapper }}&nbsp;&nbsp;<i class=\"fa fa-times\" aria-hidden=\"true\" title=\"remove wrapper\"></i>\n                        </button>\n                    </ng-container>\n                </div>\n            </div>\n            <button class=\"btn\" type=\"button\" [disabled]=\"disabled\" (click)=\"edit()\">\n                <i class=\"fa fa-pencil\" aria-hidden=\"true\" title=\"edit\"></i>\n            </button>\n            <button class=\"btn\" type=\"button\" [disabled]=\"disabled\" (click)=\"remove()\">\n                <i class=\"fa fa-times\" aria-hidden=\"true\" title=\"remove\"></i>\n            </button>\n        </div>\n        <div class=\"content\">\n            <div class=\"editor\" [hidden]=\"!editing\">\n                <formly-designer-field-editor #editor [hasContent]=\"true\" [showType]=\"true\" [showWrappers]=\"true\" [formControl]=\"fieldEdit\">\n                    <div class=\"footer\">\n                        <button (click)=\"cancel()\" class=\"btn btn-secondary mr-1\">Cancel</button>\n                        <button [disabled]=\"editor.invalid\" (click)=\"accept()\" class=\"btn btn-primary\">Apply</button>\n                    </div>\n                </formly-designer-field-editor>\n            </div>\n            <div [hidden]=\"editing\">\n                <ng-template #fieldComponent></ng-template>\n            </div>\n        </div>\n    `,\n    styles: [`\n        :host {\n            display: flex;\n            position: relative;\n            justify-content: flex-start;\n            align-content: flex-start;\n            align-items: flex-start;\n            margin: .25em;\n        }\n        :host.designerEmpty {\n            display:none;\n        }\n        .btn:not(:disabled), .dropdown-item:not(:disabled) {\n            cursor: pointer;\n        }\n        .control-panel {\n            font-size: .8em;\n            position: absolute;\n            padding: 0 0 0 .5em;\n            border-radius: 0 5px 0 0;\n            right: 0;\n            top: 0;\n        }\n        .control-panel > * {\n            padding-right: .5em;\n        }\n        .control-panel .btn {\n            font-size: unset;\n            background-color: unset;\n            padding: 0 .5em 0 0;\n            color: #fff;\n        }\n        .content {\n            border: 1px dashed #000;\n            border-radius: 5px;\n            min-height: 2em;\n            padding: 1.5em 1em 0 1em;\n            width: 100%;\n        }\n        .content:first-child {\n            padding-top: 0;\n        }\n        .editor {\n            margin: 1em 0;\n        }\n        .footer {\n            display: flex;\n            justify-content: flex-end;\n        }\n    `]\n})\nexport class FormlyDesignerFieldWrapperComponent extends FieldWrapper\n    implements AfterContentInit, AfterContentChecked, OnInit {\n    @ViewChild('fieldComponent', { read: ViewContainerRef }) fieldComponent: ViewContainerRef;\n\n    editing = false;\n    fieldEdit = new FormControl({});\n    fieldWrappers: string[] = [];\n    wrappers: string[] = [];\n    type: string;\n\n    constructor(\n        private changeDetector: ChangeDetectorRef,\n        private designerConfig: FormlyDesignerConfig,\n        private elementRef: ElementRef,\n        private fieldsService: FieldsService,\n        private formlyDesignerService: FormlyDesignerService,\n        private zone: NgZone\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.type = this.field.type;\n        this.wrappers = Object.getOwnPropertyNames(this.designerConfig.wrappers);\n        this.fieldWrappers = this.formlyDesignerService.getWrappers(this.formlyDesignerService.convertField(this.field)) || [];\n    }\n\n    ngAfterContentInit(): void {\n        this.zone.runOutsideAngular(() => setTimeout(() => this.checkDesigner()));\n    }\n\n    ngAfterContentChecked(): void {\n        this.zone.runOutsideAngular(() => setTimeout(() => this.checkDesigner()));\n    }\n\n    get disabled(): boolean {\n        return this.formlyDesignerService.disabled;\n    }\n\n    addWrapper(wrapper: string): void {\n        const field = cloneDeep(this.field);\n        if (field.wrappers) {\n            field.wrappers.push(wrapper);\n        } else {\n            field.wrappers = [wrapper];\n        }\n        this.formlyDesignerService.updateField(this.field, field);\n    }\n\n    removeWrapper(index: number): void {\n        const field = cloneDeep(this.field);\n        this.fieldWrappers.splice(index, 1);\n        field.wrappers = this.fieldWrappers;\n        this.formlyDesignerService.updateField(this.field, field);\n    }\n\n    edit(): void {\n        this.editing = true;\n        this.formlyDesignerService.disabled = true;\n        this.fieldEdit.setValue(this.formlyDesignerService.convertField(cloneDeep(this.field)));\n    }\n\n    remove(): void {\n        this.formlyDesignerService.removeField(this.field);\n    }\n\n    accept(): void {\n        if (!this.fieldsService.checkField(this.fieldEdit.value, this.formlyDesignerService.fields)) {\n            return;\n        }\n        timer().subscribe(() => {\n            this.formlyDesignerService.updateField(this.field, this.fieldEdit.value);\n            this.formlyDesignerService.disabled = false;\n            this.editing = false;\n        });\n    }\n\n    cancel(): void {\n        this.formlyDesignerService.disabled = false;\n        this.editing = false;\n    }\n\n    private checkDesigner(): void {\n        const element = this.elementRef.nativeElement as HTMLElement;\n        if (element.parentNode == null) {\n            return;\n        }\n\n        const designerEmpty = element.querySelector('formly-designer-wrapper') == null;\n        if (designerEmpty !== element.classList.contains('designerEmpty')) {\n            this.changeDetector.detectChanges();\n            if (designerEmpty) {\n                element.classList.add('designerEmpty');\n            } else {\n                element.classList.remove('designerEmpty');\n            }\n        }\n    }\n}\n","import { AfterContentChecked, AfterContentInit, ChangeDetectorRef, Component, ElementRef,\n    NgZone, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { FieldWrapper, FormlyFieldConfig } from '@ngx-formly/core';\nimport { FieldsService } from '../fields.service';\nimport { FormlyDesignerConfig } from '../formly-designer-config';\nimport { FormlyDesignerService } from '../formly-designer.service';\nimport { cloneDeep, isArray } from '../util';\nimport { NEVER, timer } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'formly-designer-field-group-wrapper',\n    template: `\n        <div *ngIf=\"!editing\" class=\"bg-info text-white control-panel\">\n            <span class=\"type\">{{ type }}</span>\n            <div class=\"btn-group\">\n                <button type=\"button\" class=\"btn\" data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\" aria-expanded=\"false\" title=\"wrappers\">\n                    <i class=\"fa fa-clone\" aria-hidden=\"true\"></i>\n                </button>\n                <div class=\"dropdown-menu dropdown-menu-right\">\n                    <button class=\"dropdown-item\" type=\"button\" [disabled]=\"disabled\" title=\"add wrapper\"\n                        *ngFor=\"let wrapper of wrappers\" (click)=\"addWrapper(wrapper)\">\n                        {{ wrapper }}\n                    </button>\n                    <ng-container *ngIf=\"fieldWrappers.length\">\n                        <div *ngIf=\"wrappers.length\" class=\"dropdown-divider\"></div>\n                        <button class=\"dropdown-item\" type=\"button\" [disabled]=\"disabled\"\n                            *ngFor=\"let wrapper of fieldWrappers; let i=index\" (click)=\"removeWrapper(i)\">\n                            {{ wrapper }}&nbsp;&nbsp;<i class=\"fa fa-times\" aria-hidden=\"true\" title=\"remove wrapper\"></i>\n                        </button>\n                    </ng-container>\n                </div>\n            </div>\n            <button [disabled]=\"disabled\" type=\"button\" class=\"btn\" (click)=\"edit()\">\n                <i class=\"fa fa-pencil\" aria-hidden=\"true\" title=\"edit\"></i>\n            </button>\n            <button [disabled]=\"disabled\" type=\"button\" class=\"btn\" (click)=\"remove()\">\n                <i class=\"fa fa-times\" aria-hidden=\"true\" title=\"remove\"></i>\n            </button>\n        </div>\n        <div class=\"content\">\n            <div [hidden]=\"!editing\">\n                <formly-designer-field-editor #editor [fieldGroup]=\"true\" [hasContent]=\"true\" [showWrappers]=\"true\"\n                    [formControl]=\"fieldEdit\">\n                    <div class=\"footer\">\n                        <button (click)=\"cancel()\" class=\"btn btn-secondary mr-1\">Cancel</button>\n                        <button [disabled]=\"editor.invalid\" (click)=\"accept()\" class=\"btn btn-primary\">Apply</button>\n                    </div>\n                </formly-designer-field-editor>\n            </div>\n            <div [hidden]=\"editing\">\n                <div class=\"form-group\">\n                    <label>child</label>\n                    <formly-designer-field-picker (selected)=\"onFieldSelected($event)\"></formly-designer-field-picker>\n                </div>\n                <ng-template #fieldComponent></ng-template>\n            </div>\n        </div>\n    `,\n    styles: [`\n        :host {\n            display: flex;\n            position: relative;\n            justify-content: flex-start;\n            align-content: flex-start;\n            align-items: flex-start;\n            margin: .25em;\n        }\n        :host.designerEmpty {\n            display:none;\n        }\n        .btn:not(:disabled), .dropdown-item:not(:disabled) {\n            cursor: pointer;\n        }\n        .control-panel {\n            font-size: .8em;\n            position: absolute;\n            padding: 0 0 0 .5em;\n            border-radius: 0 5px 0 0;\n            right: 0;\n            top: 0;\n        }\n        .control-panel > * {\n            padding-right: .5em;\n        }\n        .control-panel .btn {\n            font-size: unset;\n            background-color: unset;\n            padding: 0 .5em 0 0;\n            color: #fff;\n        }\n        .content {\n            border: 1px dashed #000;\n            border-radius: 5px;\n            padding: 1em;\n            width: 100%;\n        }\n        .footer {\n            display: flex;\n            justify-content: flex-end;\n        }\n    `]\n})\nexport class FormlyDesignerFieldGroupWrapperComponent extends FieldWrapper\n    implements AfterContentInit, AfterContentChecked, OnInit {\n    @ViewChild('fieldComponent', { read: ViewContainerRef }) fieldComponent: ViewContainerRef;\n\n    type: string;\n    editing = false;\n    fieldEdit = new FormControl({});\n    fieldWrappers: string[] = [];\n    wrappers: string[] = [];\n\n    constructor(\n        private changeDetector: ChangeDetectorRef,\n        private designerConfig: FormlyDesignerConfig,\n        private elementRef: ElementRef,\n        private fieldsService: FieldsService,\n        private formlyDesignerService: FormlyDesignerService,\n        private zone: NgZone\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        if (this.field.templateOptions.$fieldArray) {\n            this.type = this.field.templateOptions.$fieldArray.type || 'fieldArray';\n        } else if (this.field.type) {\n            this.type = this.field.type;\n        } else if (this.field.fieldGroup) {\n            this.type = 'fieldGroup';\n        }\n        this.wrappers = Object.getOwnPropertyNames(this.designerConfig.wrappers);\n        this.fieldWrappers = this.formlyDesignerService.convertField(this.field).wrappers || [];\n    }\n\n    ngAfterContentInit(): void {\n        this.zone.runOutsideAngular(() => setTimeout(() => this.checkDesigner()));\n    }\n\n    ngAfterContentChecked(): void {\n        this.zone.runOutsideAngular(() => setTimeout(() => this.checkDesigner()));\n    }\n\n    get disabled(): boolean {\n        return this.formlyDesignerService.disabled;\n    }\n\n    addWrapper(wrapper: string): void {\n        const field = cloneDeep(this.field);\n        if (field.wrappers) {\n            field.wrappers.push(wrapper);\n        } else {\n            field.wrappers = [wrapper];\n        }\n        this.formlyDesignerService.updateField(this.field, field);\n    }\n\n    removeWrapper(index: number): void {\n        const field = cloneDeep(this.field);\n        this.fieldWrappers.splice(index, 1);\n        field.wrappers = this.fieldWrappers;\n        this.formlyDesignerService.updateField(this.field, field);\n    }\n\n    edit(): void {\n        this.editing = true;\n        this.formlyDesignerService.disabled = true;\n        this.fieldEdit.setValue(this.formlyDesignerService.convertField(cloneDeep(this.field)));\n    }\n\n    remove(): void {\n        this.formlyDesignerService.removeField(this.field);\n    }\n\n    accept(): void {\n        if (!this.fieldsService.checkField(this.fieldEdit.value, this.formlyDesignerService.fields)) {\n            return;\n        }\n\n        timer().subscribe(() => {\n            this.formlyDesignerService.updateField(this.field, this.fieldEdit.value);\n            this.formlyDesignerService.disabled = false;\n            this.editing = false;\n        });\n    }\n\n    cancel(): void {\n        this.formlyDesignerService.disabled = false;\n        this.editing = false;\n    }\n\n    onFieldSelected(field: FormlyFieldConfig): void {\n        if (isArray(this.field.fieldGroup) &&\n            !this.fieldsService.checkField(field, this.formlyDesignerService.fields, this.field)) {\n            return;\n        }\n\n        const updatedField = cloneDeep(this.field);\n        updatedField.fieldGroup = isArray(updatedField.fieldGroup) ? updatedField.fieldGroup.slice() : [];\n        updatedField.fieldGroup.push(field);\n\n        timer()\n            .pipe(\n                tap(() => this.formlyDesignerService.updateField(this.field, updatedField)),\n                catchError(() => NEVER)\n            )\n            .subscribe();\n    }\n\n    private checkDesigner(): void {\n        const element = this.elementRef.nativeElement as HTMLElement;\n        if (element.parentNode == null) {\n            return;\n        }\n\n        const designerEmpty = element.querySelector('formly-designer-wrapper') == null;\n        if (designerEmpty !== element.classList.contains('designerEmpty')) {\n            this.changeDetector.detectChanges();\n            if (designerEmpty) {\n                element.classList.add('designerEmpty');\n            } else {\n                element.classList.remove('designerEmpty');\n            }\n        }\n    }\n}\n","import { FormlyFieldConfig, FormlyConfig } from '@ngx-formly/core';\n\nexport class TemplateDesigner {\n    private isNonDesignerField(field: FormlyFieldConfig): boolean {\n        return field && (!field.templateOptions || field.templateOptions['$designerField'] !== true);\n    }\n\n    run(fc: FormlyConfig) {\n        fc.templateManipulators.preWrapper.push((field: FormlyFieldConfig) => {\n            if (this.isNonDesignerField(field)) {\n                return field.fieldGroup ? 'fieldGroupDesigner' : 'fieldDesigner';\n            }\n        });\n        fc.templateManipulators.postWrapper.push((field: FormlyFieldConfig) => {\n            if (this.isNonDesignerField(field)) {\n                return 'designer';\n            }\n        });\n    }\n}\n","import { ConfigOption } from '@ngx-formly/core';\nimport { FormlyDesignerWrapperComponent } from './wrappers/designer';\nimport { FormlyDesignerFieldWrapperComponent } from './wrappers/field-designer';\nimport { FormlyDesignerFieldGroupWrapperComponent } from './wrappers/field-group-designer';\nimport { TemplateDesigner } from './run/designer';\n\nexport const fieldComponents = [];\n\nexport const wrapperComponents = [\n    FormlyDesignerWrapperComponent,\n    FormlyDesignerFieldWrapperComponent,\n    FormlyDesignerFieldGroupWrapperComponent\n];\n\nexport const config: ConfigOption = {\n    wrappers: [\n        { name: 'designer', component: FormlyDesignerWrapperComponent },\n        { name: 'fieldDesigner', component: FormlyDesignerFieldWrapperComponent },\n        { name: 'fieldGroupDesigner', component: FormlyDesignerFieldGroupWrapperComponent }\n    ],\n    manipulators: [\n        { class: TemplateDesigner, method: 'run' }\n    ]\n};\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { FieldsService } from './fields.service';\nimport { FormlyDesignerService } from './formly-designer.service';\nimport { merge, NEVER, Subscription, timer } from 'rxjs';\nimport { catchError, debounceTime, tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'formly-designer',\n    template: `\n        <formly-designer-field-picker (selected)=\"onFieldSelected($event)\">\n        </formly-designer-field-picker>\n        <form novalidate [formGroup]=\"form\">\n            <formly-form [options]=\"options\" [model]=\"formlyDesignerService.model\" [form]=\"form\" [fields]=\"formlyDesignerService.fields\">\n            </formly-form>\n        </form>\n        <!--<div>\n            Designer Fields Debug:\n            <pre>{{ fields | decycle | json }}</pre>\n        </div>-->\n    `,\n    styles: [`\n        formly-designer-field-picker .form-group > .input-group > formly-designer-type-select > select {\n            border-radius: .25rem 0 0 .25rem;\n            border-right: 0;\n        }\n        formly-designer-wrapper-editor .card > .card-body .form-control {\n            width: 100%;\n        }\n        formly-designer-wrapper-picker .form-group > .input-group > formly-designer-wrapper-select > select {\n            border-radius: .25rem 0 0 .25rem;\n            border-right: 0;\n        }\n    `],\n    encapsulation: ViewEncapsulation.None,\n    providers: [FormlyDesignerService]\n})\nexport class FormlyDesignerComponent implements OnDestroy, OnInit {\n    @ViewChild('formlyFormContainer', { read: ViewContainerRef }) formlyFormContainer;\n    @Output() fieldsChange = new EventEmitter<FormlyFieldConfig[]>();\n    @Output() modelChange = new EventEmitter<any>();\n\n    types: string[] = [];\n    wrappers: string[] = [];\n    properties: string[] = [];\n    debugFields: FormlyFieldConfig[] = [];\n\n    form: FormGroup;\n    options: any = {};\n\n    private readonly subscriptions: Subscription[] = [];\n\n    constructor(\n        private fieldsService: FieldsService,\n        private formBuilder: FormBuilder,\n        public formlyDesignerService: FormlyDesignerService\n    ) { }\n\n    @Input()\n    get disabled(): boolean {\n        return this.formlyDesignerService.disabled;\n    }\n\n    set disabled(value: boolean) {\n        this.formlyDesignerService.disabled = value;\n    }\n\n    @Input()\n    get fields(): FormlyFieldConfig[] {\n        return this.formlyDesignerService.fields;\n    }\n\n    set fields(value: FormlyFieldConfig[]) {\n        const fields = this.formlyDesignerService.convertFields(value);\n        this.fieldsService.mutateFields(fields, false);\n        this.formlyDesignerService.fields = fields;\n    }\n\n    @Input()\n    get model(): any {\n        return this.formlyDesignerService.model;\n    }\n\n    set model(value: any) {\n        this.formlyDesignerService.model = value;\n    }\n\n    ngOnInit(): void {\n        // Designer forms will be restricted to a single field depth; all designer keys should be\n        // complex (e.g. \"templateOptions.some.property\")\n        this.form = this.formBuilder.group({});\n\n        this.subscriptions.push(this.formlyDesignerService.fields$\n            .subscribe(() => {\n                this.form = this.formBuilder.group({});\n                this.fieldsChange.emit(this.formlyDesignerService.createDesignerFields());\n            }));\n\n        this.subscriptions.push(merge(\n            this.formlyDesignerService.model$,\n            this.form.valueChanges\n        )\n            .pipe(debounceTime(50))\n            .subscribe(() => this.modelChange.emit(this.formlyDesignerService.model)));\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.splice(0).forEach(subscription => subscription.unsubscribe());\n    }\n\n    onFieldSelected(field: FormlyFieldConfig): void {\n        timer().pipe(\n            tap(() => {\n                if (this.fieldsService.checkField(field, this.formlyDesignerService.fields)) {\n                    this.formlyDesignerService.addField(field);\n                }\n            }),\n            catchError(() => NEVER)).subscribe();\n    }\n}\n","import { Component, ElementRef, forwardRef, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, FormBuilder, FormControl, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { FieldsService } from '../fields.service';\nimport { FormlyDesignerConfig } from '../formly-designer-config';\nimport { merge, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { cloneDeep, isArray, isObject, isString } from '../util';\n\nconst FIELD_EDITOR_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => FieldEditorComponent),\n    multi: true\n};\n\n@Component({\n    selector: 'formly-designer-field-editor',\n    template: `\n        <form [formGroup]=\"form\" novalidate>\n            <div class=\"card\">\n                <div class=\"card-header\" [ngClass]=\"{solo: !hasContent && fields.length === 0}\">\n                    <div class=\"form-group\" [ngClass]=\"{'has-danger': form.hasError('key') && (key.dirty || key.touched)}\">\n                        <label class=\"form-control-label\">key</label>\n                        <input formControlName=\"key\" class=\"form-control\">\n                        <div *ngIf=\"form.hasError('key') && (key.dirty || key.touched)\" class=\"form-control-feedback\">\n                            key required.\n                        </div>\n                    </div>\n                    <div *ngIf=\"formlyDesignerConfig.settings.showClassName\" class=\"form-group\">\n                        <label class=\"form-control-label\">className</label>\n                        <input formControlName=\"className\" class=\"form-control\">\n                    </div>\n                    <div *ngIf=\"fieldGroup && formlyDesignerConfig.settings.showClassName\" class=\"form-group\">\n                        <label class=\"form-control-label\">fieldGroupClassName</label>\n                        <input formControlName=\"fieldGroupClassName\" class=\"form-control\">\n                    </div>\n                    <div *ngIf=\"showType\" class=\"form-group\"\n                        [ngClass]=\"{'has-danger': form.hasError('type') && (type.dirty || type.touched)}\">\n                        <label class=\"form-control-label\">type</label>\n                        <formly-designer-type-select formControlName=\"type\"></formly-designer-type-select>\n                        <div *ngIf=\"form.hasError('type') && (type.dirty || type.touched)\" class=\"form-control-feedback\">\n                            type required.\n                        </div>\n                    </div>\n                    <div *ngIf=\"showWrappers\" class=\"form-group\">\n                        <label class=\"form-control-label\">wrappers</label>\n                        <formly-designer-wrappers-picker [field]=\"field\"\n                            (selected)=\"onWrappersSelected($event)\">\n                        </formly-designer-wrappers-picker>\n                    </div>\n                </div>\n                <div #block class=\"card-body\">\n                    <formly-form *ngIf=\"fields.length > 0\" [form]=\"fieldForm\" [fields]=\"fields\" [model]=\"field\">\n                    </formly-form>\n                    <ng-content></ng-content>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [`\n        .card-header.solo {\n            border-bottom: 0;\n        }\n        .card-header.solo + .card-body {\n            display: none;\n        }\n    `],\n    providers: [\n        FIELD_EDITOR_CONTROL_VALUE_ACCESSOR\n    ]\n})\nexport class FieldEditorComponent implements ControlValueAccessor, OnDestroy, OnInit {\n    @Input() fieldGroup: boolean;\n    @Input() showType: boolean;\n    @Input() showWrappers: boolean;\n    @Input() hasContent: boolean;\n    @ViewChild('block') blockElRef: ElementRef;\n\n    private readonly subscriptions: Subscription[] = [];\n    private valueChangesSubscription: Subscription;\n\n    constructor(\n        private fieldsService: FieldsService,\n        private fb: FormBuilder,\n        public formlyDesignerConfig: FormlyDesignerConfig\n    ) {\n        this.form = fb.group({\n            key: this.key = fb.control(''),\n            className: this.className = fb.control(''),\n            fieldGroupClassName: this.fieldGroupClassName = fb.control(''),\n            type: this.type = fb.control('')\n        }, { validator: (control) => this.validator(control) });\n        this.fieldForm = fb.group({});\n    }\n\n    readonly form: FormGroup;\n    readonly key: FormControl;\n    readonly className: FormControl;\n    readonly fieldGroupClassName: FormControl;\n    readonly type: FormControl;\n\n    fieldForm: FormGroup;\n    field: FormlyFieldConfig = {};\n    fields: FormlyFieldConfig[] = [];\n    fieldArray: boolean;\n    invalid: boolean;\n\n    protected onChange = (_: any) => { };\n    protected onTouched = () => { };\n\n    ngOnInit(): void {\n        this.subscriptions.push(this.type.valueChanges\n            .subscribe(() => this.onTypeChange()));\n\n        this.subscriptions.push(this.form.statusChanges\n            .pipe(debounceTime(0))\n            .subscribe(() => this.invalid = this.form.invalid));\n\n        this.subscribeValueChanges();\n    }\n\n    ngOnDestroy(): void {\n        this.valueChangesSubscription.unsubscribe();\n        this.subscriptions.splice(0).forEach(subscription => subscription.unsubscribe());\n    }\n\n    writeValue(obj: any) {\n        this.valueChangesSubscription.unsubscribe();\n        this.updateField(obj);\n        this.form.markAsPristine();\n        this.form.markAsUntouched();\n        this.subscribeValueChanges();\n    }\n\n    registerOnChange(fn: any) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        if (isDisabled) {\n            this.form.disable();\n        } else {\n            this.form.enable();\n        }\n    }\n\n    private subscribeValueChanges(): void {\n        this.valueChangesSubscription = merge(this.fieldForm.valueChanges, this.form.valueChanges)\n            .pipe(debounceTime(0))\n            .subscribe(() => this.updateValue());\n    }\n\n    private updateField(field: FormlyFieldConfig): void {\n        if (!isObject(field)) {\n            field = {};\n        }\n        this.key.setValue(isString(field.key) ? field.key : '');\n        this.className.setValue(isString(field.className) ? field.className : '');\n        this.fieldGroupClassName.setValue(isString(field.fieldGroupClassName) ? field.fieldGroupClassName : '');\n        this.type.setValue(isString(field.type) ? field.type : '');\n        this.fields = this.fieldsService.getTypeFields(this.type.value);\n        this.fieldForm = this.fb.group({});\n        this.field = cloneDeep(field);\n    }\n\n    private updateValue(): void {\n        if (!this.onChange) {\n            return;\n        }\n\n        const field = this.field;\n        field.key = this.key.value;\n        field.className = this.className.value;\n        field.fieldGroupClassName = this.fieldGroupClassName.value;\n        field.type = this.type.value;\n        this.onChange(field);\n    }\n\n    private onTypeChange(): void {\n        this.valueChangesSubscription.unsubscribe();\n        const type = this.type.value;\n        this.fields = this.fieldsService.getTypeFields(type);\n        const designerType = this.formlyDesignerConfig.types[type];\n        this.fieldArray = designerType && designerType.fieldArray;\n        this.fieldForm = this.fb.group({});\n        this.field = Object.assign({}, this.field);\n        this.subscribeValueChanges();\n    }\n\n    onWrappersSelected(field: FormlyFieldConfig): void {\n        this.updateField(field);\n    }\n\n    private validator(control: FormGroup): { [key: string]: boolean } {\n        const type = control.get('type') as FormControl;\n        const hasType = isString(type.value) && type.value.trim().length > 0;\n\n        const key = control.get('key') as FormControl;\n        const result = { key: false, type: this.showType && !hasType, conflict: false };\n        if (hasType && (!isString(key.value) || key.value.trim().length === 0)) {\n            result.key = true;\n        }\n\n        return result.key || result.type ? result : null;\n    }\n}\n","import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { DesignerTypeOption, FormlyDesignerConfig } from '../formly-designer-config';\n\n@Component({\n    selector: 'formly-designer-field-picker',\n    template: `\n        <form novalidate [formGroup]=\"form\">\n            <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <formly-designer-type-select formControlName=\"type\">\n                    </formly-designer-type-select>\n                    <button type=\"button\" class=\"btn btn-secondary\" [disabled]=\"form.invalid\" (click)=\"add()\">\n                        Add\n                    </button>\n                </div>\n            </div>\n            <div #modal class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n                <div class=\"modal-dialog modal-lg\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\">Add {{ type.value }}</h5>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Cancel\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <formly-designer-field-editor #editor [fieldGroup]=\"fieldEdit.value.fieldGroup\" [formControl]=\"fieldEdit\">\n                            </formly-designer-field-editor>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"onApply()\"\n                                [disabled]=\"editor.invalid\">Apply</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [`\n        .btn:not(:disabled) {\n            cursor: pointer;\n        }\n        .input-group > .btn {\n            border-radius: 0 .25rem .25rem 0;\n        }\n        .input-group, .modal-header {\n            display: flex;\n        }\n        .modal-header {\n            justify-content: space-between;\n        }\n        formly-designer-type-select {\n            flex-grow: 2;\n        }\n    `]\n})\nexport class FieldPickerComponent {\n    @ViewChild('modal') modalRef: ElementRef;\n    @Output() selected = new EventEmitter<FormlyFieldConfig>();\n\n    constructor(\n        fb: FormBuilder,\n        private formlyDesignerConfig: FormlyDesignerConfig\n    ) {\n      this.form = fb.group({\n          type: this.type = fb.control('', Validators.compose([Validators.required, Validators.pattern(/^\\s*\\S.*$/)]))\n      });\n    }\n\n    form: FormGroup;\n    readonly fieldEdit = new FormControl({});\n    readonly type: FormControl;\n    fieldGroup: boolean;\n\n    private get $modal(): JQuery & { modal: (command: string) => void } {\n        return $(this.modalRef.nativeElement) as any;\n    }\n\n    add(): void {\n        const type = this.type.value;\n        const field = {} as FormlyFieldConfig;\n        if (type !== 'fieldGroup') {\n          field.type = type;\n        }\n        const designerType = this.formlyDesignerConfig.types[type] || {} as DesignerTypeOption;\n        if (designerType.fieldArray) {\n            field.fieldArray = { fieldGroup: [] };\n        }\n        if (this.fieldGroup = (type === 'fieldGroup' || designerType.fieldGroup)) {\n            field.fieldGroup = [];\n        }\n        this.fieldEdit.setValue(field);\n        this.$modal.modal('show');\n    }\n\n    onApply(): void {\n        this.selected.emit(this.fieldEdit.value);\n        this.$modal.modal('hide');\n    }\n}\n","import { AfterViewInit, Component, forwardRef, OnDestroy, OnInit } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormlyDesignerConfig } from '../formly-designer-config';\nimport { Subscription, timer } from 'rxjs';\n\nconst TYPE_SELECT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TypeSelectComponent),\n    multi: true\n};\n\n@Component({\n    selector: 'formly-designer-type-select',\n    template: `\n        <select [formControl]=\"formControl\" class=\"custom-select\">\n            <option *ngFor=\"let type of types\" [ngValue]=\"type\">{{ type }}</option>\n        </select>\n    `,\n    styles: [`\n        select {\n            width: 100%;\n        }\n    `],\n    providers: [TYPE_SELECT_CONTROL_VALUE_ACCESSOR]\n})\nexport class TypeSelectComponent implements AfterViewInit, ControlValueAccessor, OnDestroy, OnInit {\n    private valueChangesSubscription: Subscription;\n\n    formControl = new FormControl();\n    types: string[];\n\n    constructor(\n        private formlyDesignerConfig: FormlyDesignerConfig\n    ) { }\n\n    protected onChange = (value: any) => { };\n    protected onTouched = () => { };\n\n    ngAfterViewInit(): void {\n        timer().subscribe(() => {\n            this.types = Object.keys(this.formlyDesignerConfig.types);\n            if (this.types.length > 0) {\n                this.formControl.setValue(this.types[0]);\n            }\n            this.types.push('fieldGroup');\n        });\n    }\n\n    ngOnInit(): void {\n        this.valueChangesSubscription = this.formControl.valueChanges.subscribe(value => {\n            if (this.onChange) {\n                this.onChange(value);\n            }\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.valueChangesSubscription.unsubscribe();\n    }\n\n    writeValue(obj: any) {\n        this.formControl.setValue(obj);\n    }\n\n    registerOnChange(fn: any) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        if (isDisabled) {\n            this.formControl.disable();\n        } else {\n            this.formControl.enable();\n        }\n    }\n}\n","import { Component, forwardRef, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, FormBuilder, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { FieldsService } from '../fields.service';\nimport { Subscription, timer } from 'rxjs';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport { cloneDeep, isObject } from '../util';\n\nconst WRAPPER_EDITOR_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => WrapperEditorComponent),\n    multi: true\n};\n\n@Component({\n    selector: 'formly-designer-wrapper-editor',\n    template: `\n        <form [formGroup]=\"fieldForm\" novalidate>\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <formly-form [form]=\"fieldForm\" [fields]=\"fields\" [model]=\"field\">\n                    </formly-form>\n                    <ng-content></ng-content>\n                </div>\n            </div>\n        </form>\n    `,\n    providers: [\n        WRAPPER_EDITOR_CONTROL_VALUE_ACCESSOR\n    ]\n})\nexport class WrapperEditorComponent implements ControlValueAccessor, OnChanges, OnDestroy, OnInit {\n    @Input() wrapper: string;\n\n    private readonly subscriptions: Subscription[] = [];\n    private valueChangesSubscription: Subscription;\n\n    constructor(\n        private fieldsService: FieldsService,\n        private formBuilder: FormBuilder\n    ) {\n        this.fieldForm = formBuilder.group({});\n    }\n\n    invalid: boolean;\n    fieldForm: FormGroup;\n    field: FormlyFieldConfig;\n    fields: FormlyFieldConfig[] = [];\n\n    protected onChange = (value: any) => { };\n    protected onTouched = () => { };\n\n    ngOnInit(): void {\n        this.subscriptions.push(this.fieldForm.statusChanges\n            .pipe(switchMap(() => timer()))\n            .subscribe(() => this.invalid = this.fieldForm.invalid));\n\n        this.subscribeValueChanges();\n    }\n\n    ngOnDestroy(): void {\n        this.valueChangesSubscription.unsubscribe();\n        this.subscriptions.splice(0).forEach(subscription => subscription.unsubscribe());\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.wrapper) {\n            if (this.valueChangesSubscription) {\n                this.valueChangesSubscription.unsubscribe();\n            }\n            this.fields = this.fieldsService.getWrapperFields(this.wrapper);\n            this.fieldForm = this.formBuilder.group({});\n            this.field = Object.assign({}, this.field);\n            if (this.valueChangesSubscription) {\n                this.subscribeValueChanges();\n            }\n        }\n    }\n\n    writeValue(obj: any) {\n        this.valueChangesSubscription.unsubscribe();\n        if (!isObject(obj)) {\n            obj = {};\n        }\n        this.fields = this.fieldsService.getWrapperFields(this.wrapper);\n        this.fieldForm = this.formBuilder.group({});\n        this.field = cloneDeep(obj);\n        this.subscribeValueChanges();\n    }\n\n    registerOnChange(fn: any) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        if (isDisabled) {\n            this.fieldForm.disable();\n        } else {\n            this.fieldForm.enable();\n        }\n    }\n\n    private subscribeValueChanges(): void {\n        this.valueChangesSubscription = this.fieldForm.valueChanges\n            .pipe(debounceTime(0))\n            .subscribe(() => this.updateValue());\n    }\n\n    private updateValue(): void {\n        if (!this.onChange) {\n            return;\n        }\n\n        this.onChange(this.field);\n    }\n}\n","import { AfterViewInit, Component, forwardRef, OnDestroy, OnInit } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormlyDesignerConfig } from '../formly-designer-config';\nimport { Subscription, timer } from 'rxjs';\n\nconst WRAPPER_SELECT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => WrapperSelectComponent),\n    multi: true\n};\n\n@Component({\n    selector: 'formly-designer-wrapper-select',\n    template: `\n        <select [formControl]=\"formControl\" class=\"custom-select\">\n            <option *ngFor=\"let wrapper of wrappers\" [ngValue]=\"wrapper\">{{ wrapper }}</option>\n        </select>\n    `,\n    styles: [`\n        select {\n            width: 100%;\n        }\n    `],\n    providers: [WRAPPER_SELECT_CONTROL_VALUE_ACCESSOR]\n})\nexport class WrapperSelectComponent implements AfterViewInit, ControlValueAccessor, OnDestroy, OnInit {\n    private valueChangesSubscription: Subscription;\n\n    constructor(\n        private formlyDesignerConfig: FormlyDesignerConfig\n    ) { }\n\n    formControl = new FormControl();\n    wrappers: string[];\n\n    protected onChange = (value: any) => { };\n    protected onTouched = () => { };\n\n    ngAfterViewInit(): void {\n        timer().subscribe(() => {\n            this.wrappers = Object.keys(this.formlyDesignerConfig.wrappers);\n            if (this.wrappers.length > 0) {\n                this.formControl.setValue(this.wrappers[0]);\n            }\n        });\n    }\n\n    ngOnInit(): void {\n        this.valueChangesSubscription = this.formControl.valueChanges.subscribe(value => {\n            if (this.onChange) {\n                this.onChange(value);\n            }\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.valueChangesSubscription.unsubscribe();\n    }\n\n    writeValue(obj: any) {\n        this.formControl.setValue(obj);\n    }\n\n    registerOnChange(fn: any) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        if (isDisabled) {\n            this.formControl.disable();\n        } else {\n            this.formControl.enable();\n        }\n    }\n}\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { FormlyDesignerConfig } from '../formly-designer-config';\nimport { FormlyDesignerService } from '../formly-designer.service';\nimport { cloneDeep, isArray, isObject } from '../util';\n\ndeclare var $;\n\n@Component({\n    selector: 'formly-designer-wrapper-picker',\n    template: `\n        <form novalidate [formGroup]=\"form\">\n            <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <formly-designer-wrapper-select formControlName=\"wrapper\">\n                    </formly-designer-wrapper-select>\n                    <button type=\"button\" class=\"btn btn-secondary\" [disabled]=\"form.invalid\" (click)=\"add()\">\n                        Add\n                    </button>\n                </div>\n            </div>\n            <div #modal class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n                <div class=\"modal-dialog modal-lg\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\">Add {{ wrapper }}</h5>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Cancel\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <formly-designer-wrapper-editor #editor [formControl]=\"fieldEdit\" [wrapper]=\"wrapper\">\n                            </formly-designer-wrapper-editor>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"onApply()\"\n                                [disabled]=\"editor.invalid\">Apply</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [`\n        :host {\n            width: inherit;\n        }\n        .btn:not(:disabled) {\n            cursor: pointer;\n        }\n        .input-group > .btn {\n            border-radius: 0 .25rem .25rem 0;\n        }\n        .input-group, .modal-header {\n            display: flex;\n        }\n        .modal-header {\n            justify-content: space-between;\n        }\n        formly-designer-wrapper-select {\n            flex-grow: 2;\n        }\n    `]\n})\nexport class WrapperPickerComponent implements OnInit {\n    @ViewChild('modal') modalRef: ElementRef;\n    @Input() field: FormlyFieldConfig;\n    @Output() selected = new EventEmitter<FormlyFieldConfig>();\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private formlyDesignerConfig: FormlyDesignerConfig,\n        private formlyDesignerService: FormlyDesignerService\n    ) { }\n\n    form: FormGroup;\n    fieldEdit = new FormControl({});\n\n    get wrapper(): string {\n        return this.form.get('wrapper').value;\n    }\n\n    private get $modal(): JQuery & { modal: (command: string) => void } {\n        return $(this.modalRef.nativeElement);\n    }\n\n    ngOnInit(): void {\n        this.form = this.formBuilder.group({\n            wrapper: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*\\S.*$/)])]\n        });\n    }\n\n    add(): void {\n        if (isObject(this.field)) {\n            const field = cloneDeep(this.field);\n            if (isArray(field.wrappers) && field.wrappers.length > 0) {\n                field.wrappers.splice(field.wrappers.length - 1, 0, this.wrapper);\n            } else {\n                field.wrappers = [this.wrapper];\n            }\n            this.fieldEdit.setValue(field);\n\n            const fields = this.formlyDesignerConfig.wrappers[this.wrapper].fields;\n            if (isArray(fields) && fields.length > 0) {\n                this.$modal.modal('show');\n            } else {\n                this.onApply();\n            }\n        }\n    }\n\n    onApply(): void {\n        this.field = this.formlyDesignerService.convertField(this.fieldEdit.value);\n        this.selected.emit(this.fieldEdit.value);\n        this.$modal.modal('hide');\n    }\n}\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { FormlyDesignerConfig } from '../formly-designer-config';\nimport { FormlyDesignerService } from '../formly-designer.service';\nimport { cloneDeep, isArray, isObject } from '../util';\n\n@Component({\n    selector: 'formly-designer-wrappers-picker',\n    template: `\n        <div class=\"form-group\">\n            <div class=\"input-group\">\n                <formly-designer-wrapper-picker [field]=\"field\" (selected)=\"onWrapperSelected($event)\">\n                </formly-designer-wrapper-picker>\n            </div>\n            <div *ngFor=\"let wrapper of wrappers; let i = index\" class=\"badge badge-default noselect\" (click)=\"edit(i)\">\n                {{ wrapper }}&nbsp;&nbsp;<i class=\"fa fa-times\" aria-hidden=\"true\" (click)=\"remove(i)\"></i>\n            </div>\n        </div>\n        <div #modal class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n            <div class=\"modal-dialog modal-lg\" role=\"document\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\">Edit {{ wrapper }}</h5>\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Cancel\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <formly-designer-wrapper-editor #editor [formControl]=\"fieldEdit\" [wrapper]=\"wrapper\">\n                        </formly-designer-wrapper-editor>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onApply()\"\n                            [disabled]=\"editor.invalid\">Apply</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [`\n        .badge {\n            margin-right: .25em;\n        }\n        .badge {\n            cursor: pointer;\n        }\n        .noselect {\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n        }\n    `]\n})\nexport class WrappersPickerComponent implements OnChanges {\n    @ViewChild('modal') modalRef: ElementRef;\n    @Input() field: FormlyFieldConfig;\n    @Output() selected = new EventEmitter<FormlyFieldConfig>();\n\n    wrapper: string;\n    fieldEdit = new FormControl({});\n\n    wrappers: string[] = [];\n\n    constructor(\n        private formlyDesignerConfig: FormlyDesignerConfig,\n        private formlyDesignerService: FormlyDesignerService\n    ) { }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.field) {\n            this.wrappers = this.formlyDesignerService.getWrappers(changes.field.currentValue);\n        }\n    }\n\n    private get $modal(): JQuery & { modal: (command: string) => void } {\n        return $(this.modalRef.nativeElement) as any;\n    }\n\n    onWrapperSelected(field: FormlyFieldConfig): void {\n        this.selected.emit(field);\n    }\n\n    edit(index: number): void {\n        this.wrapper = this.wrappers[index];\n        if (isObject(this.field)) {\n            const field = cloneDeep(this.field);\n            if (isArray(field.wrappers)) {\n                this.fieldEdit.setValue(field);\n\n                const fields = this.formlyDesignerConfig.wrappers[this.wrapper].fields;\n                if (isArray(fields) && fields.length > 0) {\n                    this.$modal.modal('show');\n                } else {\n                    this.onApply();\n                }\n            }\n        }\n    }\n\n    remove(index: number): void {\n        const fieldWrappersIndex = this.field.wrappers.indexOf(this.wrappers[index]);\n        if (fieldWrappersIndex < 0) {\n            return;\n        }\n\n        const field = cloneDeep(this.field);\n        field.wrappers.splice(fieldWrappersIndex, 1);\n        this.field = this.formlyDesignerService.convertField(field);\n        this.selected.emit(this.field);\n    }\n\n    onApply(): void {\n        this.field = this.formlyDesignerService.convertField(this.fieldEdit.value);\n        this.selected.emit(this.field);\n        this.$modal.modal('hide');\n    }\n}\n","import { cloneDeep, isArray, isObject } from './util';\n\nexport function decycle<T>(value: T): T {\n    if (value == null) {\n        return value;\n    }\n\n    let nextId = 1;\n    const objects = new Map<any, number>();\n    return traverse(cloneDeep(value), (key, v) => {\n        if (isObject(v)) {\n            if (objects.has(v)) {\n                let id = objects.get(v);\n                if (!id) {\n                    v.$id = id = nextId++;\n                    objects.set(v, id);\n                }\n                return { $ref: id };\n            } else {\n                objects.set(v, 0);\n            }\n        }\n    });\n}\n\nfunction traverse<T>(obj: T, replace: (key, value) => any): T {\n    if (isArray(obj)) {\n        for (let i = 0; i < (obj as any).length; i++) {\n            traverseValue.bind(obj, i, obj[i], replace)();\n        }\n    } else if (isObject(obj)) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                traverseValue.bind(obj, key, obj[key], replace)();\n            }\n        }\n    }\n    return obj;\n}\n\nfunction traverseValue(key: any, value: any, replace: (key, value) => any): void {\n    const replacement = replace(key, value);\n    if (replacement === undefined) {\n        traverse(value, replace);\n    } else {\n        this[key] = replacement;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { decycle } from '../json-helper';\n\n@Pipe({ name: 'decycle' })\nexport class DecyclePipe implements PipeTransform {\n    transform(value: any): any {\n        return decycle(value);\n    }\n}\n","import { NgModule, ModuleWithProviders, ANALYZE_FOR_ENTRY_COMPONENTS } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FieldEditorComponent } from './components/field-editor';\nimport { FieldPickerComponent } from './components/field-picker';\nimport { FieldsService } from './fields.service';\nimport { FormlyConfig, FormlyForm, FormlyModule } from '@ngx-formly/core';\nimport { FormlyDesignerComponent } from './formly-designer.component';\nimport { DesignerConfigOption, FormlyDesignerConfig, FORMLY_DESIGNER_CONFIG_TOKEN } from './formly-designer-config';\nimport { config, fieldComponents, wrapperComponents } from './config';\nimport { TypeSelectComponent } from './components/type-select';\nimport { WrapperEditorComponent } from './components/wrapper-editor';\nimport { WrapperSelectComponent } from './components/wrapper-select';\nimport { WrapperPickerComponent } from './components/wrapper-picker';\nimport { WrappersPickerComponent } from './components/wrappers-picker';\nimport { DecyclePipe } from './pipes/decycle';\nimport 'jquery';\n\n@NgModule({\n    declarations: [\n        FieldEditorComponent,\n        FieldPickerComponent,\n        FormlyDesignerComponent,\n        TypeSelectComponent,\n        WrapperEditorComponent,\n        WrapperSelectComponent,\n        WrapperPickerComponent,\n        WrappersPickerComponent,\n\n        DecyclePipe,\n\n        fieldComponents,\n        wrapperComponents\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n\n        FormlyModule.forChild()\n    ],\n    exports: [\n        FormlyDesignerComponent\n    ],\n    providers: [\n        FormlyDesignerConfig,\n        FieldsService\n    ],\n    entryComponents: [FormlyForm]\n})\nexport class FormlyDesignerModule {\n    constructor(\n        formlyConfig: FormlyConfig\n    ) {\n        formlyConfig.addConfig(config);\n    }\n\n    static forRoot(designerConfig: DesignerConfigOption = {}): ModuleWithProviders {\n        return {\n            ngModule: FormlyDesignerModule,\n            providers: [\n                { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: [fieldComponents, wrapperComponents], multi: true },\n                { provide: FORMLY_DESIGNER_CONFIG_TOKEN, useValue: designerConfig, multi: true }\n            ]\n        };\n    }\n}\n"],"names":["tslib_1.__extends","Component","ViewChild","ViewContainerRef","FieldWrapper","InjectionToken","Injectable","Inject","FormlyConfig","tslib_1.__values","cloneDeep","BehaviorSubject","get","set","FormGroup","FormArray","unset","FormControl","timer","ChangeDetectorRef","ElementRef","NgZone","tap","catchError","NEVER","EventEmitter","merge","debounceTime","ViewEncapsulation","FormBuilder","Output","Input","NG_VALUE_ACCESSOR","forwardRef","Validators","switchMap","Pipe","ANALYZE_FOR_ENTRY_COMPONENTS","NgModule","CommonModule","FormsModule","ReactiveFormsModule","FormlyModule","FormlyForm"],"mappings":"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"}
